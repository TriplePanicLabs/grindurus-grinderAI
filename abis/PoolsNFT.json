{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "DENOMINATOR",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "baseURI",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "buyRoyalty",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "buyRoyaltyTo",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "royaltyPricePaid",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "calcGRETHShares",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "nativeFeeSpent",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "grinder", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "actors", "type": "address[]", "internalType": "address[]" },
        {
          "name": "grethShares",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calcRoyaltyPriceShares",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "compensationShare",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "poolOwnerShare",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "reserveShare",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "ownerShare", "type": "uint256", "internalType": "uint256" },
        {
          "name": "oldRoyaltyPrice",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "newRoyaltyPrice",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calcRoyaltyShares",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "profit", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "receivers",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "amounts", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deposit2",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "baseTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "baseTokenPrice",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "depositedBaseTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deposit3",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "success", "type": "bool", "internalType": "bool" },
        { "name": "result", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "exit",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "baseTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolIdsOf",
      "inputs": [
        { "name": "poolOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "poolIdsOwnedByPoolOwner",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolNFTInfosBy",
      "inputs": [
        { "name": "_poolIds", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [
        {
          "name": "poolNFTInfos",
          "type": "tuple[]",
          "internalType": "struct IPoolsNFTLens.PoolNFTInfo[]",
          "components": [
            { "name": "poolId", "type": "uint256", "internalType": "uint256" },
            {
              "name": "strategyId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "pool", "type": "address", "internalType": "address" },
            {
              "name": "positions",
              "type": "tuple",
              "internalType": "struct IPoolsNFTLens.Positions",
              "components": [
                {
                  "name": "long",
                  "type": "tuple",
                  "internalType": "struct IURUS.Position",
                  "components": [
                    {
                      "name": "number",
                      "type": "uint8",
                      "internalType": "uint8"
                    },
                    {
                      "name": "numberMax",
                      "type": "uint8",
                      "internalType": "uint8"
                    },
                    {
                      "name": "priceMin",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "liquidity",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "qty",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "price",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "feeQty",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "feePrice",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                },
                {
                  "name": "hedge",
                  "type": "tuple",
                  "internalType": "struct IURUS.Position",
                  "components": [
                    {
                      "name": "number",
                      "type": "uint8",
                      "internalType": "uint8"
                    },
                    {
                      "name": "numberMax",
                      "type": "uint8",
                      "internalType": "uint8"
                    },
                    {
                      "name": "priceMin",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "liquidity",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "qty",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "price",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "feeQty",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "feePrice",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "name": "config",
              "type": "tuple",
              "internalType": "struct IURUS.Config",
              "components": [
                {
                  "name": "longNumberMax",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "hedgeNumberMax",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "extraCoef",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "priceVolatilityPercent",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "returnPercentLongSell",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "returnPercentHedgeSell",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "returnPercentHedgeRebuy",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "feeConfig",
              "type": "tuple",
              "internalType": "struct IURUS.FeeConfig",
              "components": [
                {
                  "name": "longSellFeeCoef",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeSellFeeCoef",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeRebuyFeeCoef",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "oracleQuoteTokenPerBaseToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "oracleQuoteTokenPerFeeToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "feeToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "quoteToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "baseToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "feeTokenSymbol",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "quoteTokenSymbol",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "baseTokenSymbol",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "oracleQuoteTokenPerBaseTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "oracleQuoteTokenPerFeeTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "quoteTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "baseTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "quoteTokenAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "baseTokenAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "activeCapital",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startTimestamp",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "profits",
              "type": "tuple",
              "internalType": "struct IURUS.Profits",
              "components": [
                {
                  "name": "quoteTokenYieldProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "baseTokenYieldProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "quoteTokenTradeProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "baseTokenTradeProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalProfits",
              "type": "tuple",
              "internalType": "struct IURUS.Profits",
              "components": [
                {
                  "name": "quoteTokenYieldProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "baseTokenYieldProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "quoteTokenTradeProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "baseTokenTradeProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "roi",
              "type": "tuple",
              "internalType": "struct IPoolsNFTLens.ROI",
              "components": [
                {
                  "name": "ROINumerator",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "ROIDeniminator",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "ROIPeriod",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "thresholds",
              "type": "tuple",
              "internalType": "struct IPoolsNFTLens.Thresholds",
              "components": [
                {
                  "name": "longBuyPriceMin",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "longSellQuoteTokenAmountThreshold",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "longSellSwapPriceThreshold",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeSellInitPriceThresholdHigh",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeSellInitPriceThresholdLow",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeSellLiquidity",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeSellQuoteTokenAmountThreshold",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeSellTargetPrice",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeSellSwapPriceThreshold",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeRebuyBaseTokenAmountThreshold",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeRebuySwapPriceThreshold",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "royaltyParams",
              "type": "tuple",
              "internalType": "struct IPoolsNFTLens.RoyaltyParams",
              "components": [
                {
                  "name": "compensationShare",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "poolOwnerShare",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "reserveShare",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "ownerShare",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "oldRoyaltyPrice",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "newRoyaltyPrice",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPositionsBy",
      "inputs": [
        { "name": "_poolIds", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IPoolsNFTLens.Positions[]",
          "components": [
            {
              "name": "long",
              "type": "tuple",
              "internalType": "struct IURUS.Position",
              "components": [
                { "name": "number", "type": "uint8", "internalType": "uint8" },
                {
                  "name": "numberMax",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "priceMin",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "liquidity",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "qty", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "price",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feeQty",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feePrice",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "hedge",
              "type": "tuple",
              "internalType": "struct IURUS.Position",
              "components": [
                { "name": "number", "type": "uint8", "internalType": "uint8" },
                {
                  "name": "numberMax",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "priceMin",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "liquidity",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "qty", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "price",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feeQty",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feePrice",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoyaltyReceiver",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "receiver", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grETH",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IGRETH" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grethGrinderShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grethPoolOwnerShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grethReserveShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grethRoyaltyReceiverShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grind",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grindOp",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "op", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grindOpTo",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "op", "type": "uint8", "internalType": "uint8" },
        { "name": "grinder", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "isGrinded", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grindTo",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "grinder", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "isGrinded", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grinderAI",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IGrinderAI" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "init",
      "inputs": [
        {
          "name": "_poolsNFTLens",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_grETH", "type": "address", "internalType": "address" },
        { "name": "_grinderAI", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isAgentOf",
      "inputs": [
        { "name": "_ownerOf", "type": "address", "internalType": "address" },
        { "name": "_agent", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDepositorOf",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "_depositor", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isStrategyStopped",
      "inputs": [
        { "name": "strategyId", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxDeposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minDeposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "strategyId", "type": "uint16", "internalType": "uint16" },
        { "name": "baseToken", "type": "address", "internalType": "address" },
        { "name": "quoteToken", "type": "address", "internalType": "address" },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "mintTo",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "strategyId", "type": "uint16", "internalType": "uint16" },
        { "name": "baseToken", "type": "address", "internalType": "address" },
        { "name": "quoteToken", "type": "address", "internalType": "address" },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "minter",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "address payable" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pendingOwner",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "address payable" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "poolIds",
      "inputs": [
        { "name": "pool", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "poolOwnerShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pools",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "poolsNFTLens",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPoolsNFTLens"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "rebalance",
      "inputs": [
        { "name": "poolId0", "type": "uint256", "internalType": "uint256" },
        { "name": "poolId1", "type": "uint256", "internalType": "uint256" },
        { "name": "rebalance0", "type": "uint8", "internalType": "uint8" },
        { "name": "rebalance1", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "royaltyInfo",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "salePrice", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "receiver", "type": "address", "internalType": "address" },
        {
          "name": "royaltyAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyOwnerShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPrice",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPriceCompensationShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPriceInitNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPriceOwnerShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPricePoolOwnerShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPriceReserveShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyReceiver",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyReceiverShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyReserveShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAgent",
      "inputs": [
        { "name": "_agent", "type": "address", "internalType": "address" },
        { "name": "_agentApproval", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDepositor",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "depositor", "type": "address", "internalType": "address" },
        { "name": "_depositorApproval", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGRETHShares",
      "inputs": [
        {
          "name": "_grethGrinderShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_grethReserveShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_grethPoolOwnerShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_grethRoyaltyReceiverShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMaxDeposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "_maxDeposit", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinDeposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "_minDeposit", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setPoolsNFTLens",
      "inputs": [
        {
          "name": "_poolsNFTLens",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRoyaltyPriceInitNumerator",
      "inputs": [
        {
          "name": "_royaltyPriceInitNumerator",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRoyaltyPriceShares",
      "inputs": [
        {
          "name": "_royaltyPriceCompensationShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyPriceReserveShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyPricePoolOwnerShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyPriceOwnerShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRoyaltyShares",
      "inputs": [
        {
          "name": "_poolOwnerRoyaltyShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyReceiverShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyReserveShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyOwnerShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setStrategyFactory",
      "inputs": [
        {
          "name": "_strategyFactory",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setStrategyStopped",
      "inputs": [
        { "name": "strategyId", "type": "uint16", "internalType": "uint16" },
        { "name": "_isStrategyStopped", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "spentGrinds",
      "inputs": [
        { "name": "_ownerOf", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "strategyFactory",
      "inputs": [
        { "name": "strategyId", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "tokenByIndex",
      "inputs": [
        { "name": "index", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenOfOwnerByIndex",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "index", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "uri", "type": "string", "internalType": "string" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalPools",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address payable"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        { "name": "withdrawn", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw2",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" },
        {
          "name": "baseTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        { "name": "withdrawn", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BuyRoyalty",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "buyer",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "paidPrice",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Deposit",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "pool",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Deposit2",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "pool",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "baseToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "baseTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "baseTokenPrice",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Deposit3",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "pool",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Exit",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "baseTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Grind",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "op",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        },
        {
          "name": "grinder",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "isGrinded",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Mint",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "baseToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Rebalance",
      "inputs": [
        {
          "name": "poolId0",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "poolId1",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "rebalancedPrice",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newBaseTokenAmount0",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newBaseTokenAmount1",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Withdraw",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Withdraw2",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "baseToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "baseTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "DifferentOwnersOfPools", "inputs": [] },
    { "type": "error", "name": "DifferentTokens", "inputs": [] },
    {
      "type": "error",
      "name": "ERC721EnumerableForbiddenBatchMint",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ERC721IncorrectOwner",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InsufficientApproval",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidApprover",
      "inputs": [
        { "name": "approver", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOperator",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidReceiver",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidSender",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721NonexistentToken",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721OutOfBoundsIndex",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "index", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "ExceededMaxDeposit", "inputs": [] },
    { "type": "error", "name": "InsufficientMinDeposit", "inputs": [] },
    { "type": "error", "name": "InvalidOp", "inputs": [] },
    { "type": "error", "name": "InvalidRoyaltyPriceInit", "inputs": [] },
    { "type": "error", "name": "InvalidShares", "inputs": [] },
    { "type": "error", "name": "NoCapital", "inputs": [] },
    { "type": "error", "name": "NotAgent", "inputs": [] },
    { "type": "error", "name": "NotDepositor", "inputs": [] },
    { "type": "error", "name": "NotGrinderAI", "inputs": [] },
    { "type": "error", "name": "NotOwner", "inputs": [] },
    { "type": "error", "name": "NotOwnerOf", "inputs": [] },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "StrategyStopped", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x608060405234801561000f575f5ffd5b5060408051602080820183525f8083528351918201909352828152909161003683826102c2565b50600161004382826102c2565b50505f60105550600b80546001600160a01b0319908116909155600c8054339216919091179055600a80546001600160501b031916686401f400642774006417908190556127109061ffff680100000000000000008204811691660100000000000081048216916100c6916401000000008104821691620100009091041661037c565b6100d0919061037c565b6100da919061037c565b61ffff16116100e7575f5ffd5b600a8054600160501b600160901b03191671012c00c805dc1f400000000000000000000017908190556127109061ffff600160801b8204811691600160701b8104821691610157916c0100000000000000000000000081048216916a01000000000000000000009091041661037c565b610161919061037c565b61016b919061037c565b61ffff1614610178575f5ffd5b600a8054600160901b600160e01b031916681f401f403e81f4007d60941b1790819055612710906101bd9061ffff600160a01b8204811691600160901b90041661037c565b61ffff16146101ca575f5ffd5b600a546127109061ffff600160d01b8204811691600160c01b810482169161020491600160b01b8104821691600160a01b9091041661037c565b61020e919061037c565b610218919061037c565b61ffff1614610225575f5ffd5b6103a8565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061025257607f821691505b60208210810361027057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102bd57805f5260205f20601f840160051c8101602085101561029b5750805b601f840160051c820191505b818110156102ba575f81556001016102a7565b50505b505050565b81516001600160401b038111156102db576102db61022a565b6102ef816102e9845461023e565b84610276565b6020601f821160018114610321575f831561030a5750848201515b5f19600385901b1c1916600184901b1784556102ba565b5f84815260208120601f198516915b828110156103505787850151825560209485019460019092019101610330565b508482101561036d57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b61ffff81811683821601908111156103a257634e487b7160e01b5f52601160045260245ffd5b92915050565b615dc2806103b55f395ff3fe6080604052600436106104be575f3560e01c80637f8661a11161026d578063bde855e51161014a578063e2bbb158116100be578063eb9b798611610083578063eb9b7986146110ee578063ef38e4e314611122578063f059deb21461116e578063f26027201461118d578063f2fde38b146111ac578063f9298928146111cb575f5ffd5b8063e2bbb15814611051578063e30c397814611070578063e60ed1f31461108f578063e63697c8146110b0578063e985e9c5146110cf575f5ffd5b8063ca05262b1161010f578063ca05262b14610f89578063cdb0d02314610fa8578063ce33939514610fc7578063d4175be214610fe8578063dc49b19014611013578063dec3971514611032575f5ffd5b8063bde855e514610edf578063bfe121e514610f0b578063c0b7b57814610f2c578063c0b929e614610f4b578063c87b56dd14610f6a575f5ffd5b8063a9059cbb116101e1578063ac8d856c116101a6578063ac8d856c14610e00578063b2d5cca714610e34578063b362893214610e53578063b61d27f614610e74578063b88d4fde14610e95578063b9f86ad114610eb4575f5ffd5b8063a9059cbb14610d5a578063a93d57a114610d79578063ab3c7e5214610d98578063ab6e969014610dad578063ac4afa3814610dcc575f5ffd5b8063918f867411610232578063918f867414610c8457806395d89b4114610c9957806397d8c67614610cd0578063a22cb46514610cef578063a5352bfd14610d0e578063a8c9d30414610d2d575f5ffd5b80637f8661a114610bd4578063849784d414610c085780638da5cb5b14610c275780638e22e7c314610c46578063912d1a8614610c65575f5ffd5b806336b02baf1161039b5780635b71ecb51161030f5780636c0360eb116102d45780636c0360eb14610b145780636d3a87db14610b285780636db47de914610b4957806370a0823114610b7757806373f65f8a14610b96578063755b916214610bb5575f5ffd5b80635b71ecb514610a645780635cd2dd5e14610a835780635d2d192014610ab75780635db4474414610ad65780636352211e14610af5575f5ffd5b8063402d267d11610360578063402d267d1461099c57806342842e0e146109c75780634f6ccce7146109e65780634f99f04a14610a0557806355b2d01e14610a26578063592ae17f14610a45575f5ffd5b806336b02baf146108e657806336e68f541461090757806337477bce1461093357806337566d54146109525780633c29f83914610971575f5ffd5b806319fc5fec116104325780632980b2ff116103f75780632980b2ff1461080f5780632a55205a1461082e5780632a67fe0b1461086c5780632bb80474146108865780632f745c59146108a7578063352333f2146108c6575f5ffd5b806319fc5fec1461076857806323b872dd1461078757806326ca015a146107a657806327f8cabb146107d15780632809e226146107f0575f5ffd5b8063095ea7b311610483578063095ea7b3146106a057806309dbb6ea146106bf5780630cccd888146106de57806318160ddd1461070a578063184b9559146107285780631927c4ea14610747575f5ffd5b806301ffc9a71461059257806304f6430e146105c6578063053604ed146105fa57806306fdde031461061b578063081812fc14610669575f5ffd5b3661058e57341561058c57600e545f906001600160a01b031661053557600c546040516001600160a01b039091169034905f81818185875af1925050503d805f8114610525576040519150601f19603f3d011682016040523d82523d5f602084013e61052a565b606091505b50508091505061058a565b600e546040516001600160a01b039091169034905f81818185875af1925050503d805f811461057f576040519150601f19603f3d011682016040523d82523d5f602084013e610584565b606091505b50909150505b505b005b5f5ffd5b34801561059d575f5ffd5b506105b16105ac366004614854565b6111ed565b60405190151581526020015b60405180910390f35b3480156105d1575f5ffd5b50600a546105e790600160501b900461ffff1681565b60405161ffff90911681526020016105bd565b348015610605575f5ffd5b50600a546105e790600160b01b900461ffff1681565b348015610626575f5ffd5b5060408051808201909152601a81527f4772696e645552555320506f6f6c7320436f6c6c656374696f6e00000000000060208201525b6040516105bd919061489d565b348015610674575f5ffd5b506106886106833660046148af565b6111fd565b6040516001600160a01b0390911681526020016105bd565b3480156106ab575f5ffd5b5061058c6106ba3660046148da565b611224565b3480156106ca575f5ffd5b506105b16106d93660046148af565b611233565b3480156106e9575f5ffd5b506106fd6106f8366004614904565b61123e565b6040516105bd9190614959565b348015610715575f5ffd5b506008545b6040519081526020016105bd565b348015610733575f5ffd5b5061058c61074236600461496b565b6112ec565b348015610752575f5ffd5b50600a546105e790600160701b900461ffff1681565b348015610773575f5ffd5b5061071a6107823660046149b3565b611372565b348015610792575f5ffd5b5061058c6107a13660046149e8565b6114ae565b3480156107b1575f5ffd5b5061071a6107c03660046148af565b60146020525f908152604090205481565b3480156107dc575f5ffd5b5061058c6107eb366004614a24565b61153c565b3480156107fb575f5ffd5b5061071a61080a366004614a7d565b611611565b34801561081a575f5ffd5b50600f54610688906001600160a01b031681565b348015610839575f5ffd5b5061084d610848366004614aa6565b6117a4565b604080516001600160a01b0390931683526020830191909152016105bd565b348015610877575f5ffd5b50600a546105e79061ffff1681565b348015610891575f5ffd5b50600a546105e790600160901b900461ffff1681565b3480156108b2575f5ffd5b5061071a6108c13660046148da565b6117e1565b3480156108d1575f5ffd5b50600a546105e79062010000900461ffff1681565b3480156108f1575f5ffd5b50600a546105e790600160401b900461ffff1681565b348015610912575f5ffd5b50610926610921366004614bbd565b611844565b6040516105bd9190614cba565b34801561093e575f5ffd5b5061058c61094d366004614aa6565b6118b6565b34801561095d575f5ffd5b5061071a61096c36600461501b565b611a2a565b34801561097c575f5ffd5b5061071a61098b366004614904565b60186020525f908152604090205481565b3480156109a7575f5ffd5b5061071a6109b6366004614904565b60196020525f908152604090205481565b3480156109d2575f5ffd5b5061058c6109e13660046149e8565b611a41565b3480156109f1575f5ffd5b5061071a610a003660046148af565b611a60565b348015610a10575f5ffd5b50600a546105e790600160301b900461ffff1681565b348015610a31575f5ffd5b5061058c610a40366004615076565b611ab5565b348015610a50575f5ffd5b5061071a610a5f3660046150ad565b611ae2565b348015610a6f575f5ffd5b50610688610a7e3660046148af565b611b9c565b348015610a8e575f5ffd5b50610688610a9d3660046148af565b60136020525f90815260409020546001600160a01b031681565b348015610ac2575f5ffd5b5061058c610ad136600461510d565b611bc6565b348015610ae1575f5ffd5b5061058c610af036600461514f565b611c27565b348015610b00575f5ffd5b50610688610b0f3660046148af565b61223d565b348015610b1f575f5ffd5b5061065c612247565b348015610b33575f5ffd5b50600a546105e790600160c01b900461ffff1681565b348015610b54575f5ffd5b506105b1610b6336600461518b565b60126020525f908152604090205460ff1681565b348015610b82575f5ffd5b5061071a610b91366004614904565b6122ba565b348015610ba1575f5ffd5b5061058c610bb03660046148da565b6122ff565b348015610bc0575f5ffd5b5061071a610bcf3660046148af565b612322565b348015610bdf575f5ffd5b50610bf3610bee3660046148af565b61232d565b604080519283526020830191909152016105bd565b348015610c13575f5ffd5b506105b1610c223660046151a6565b6123fc565b348015610c32575f5ffd5b50600c54610688906001600160a01b031681565b348015610c51575f5ffd5b50600d54610688906001600160a01b031681565b348015610c70575f5ffd5b5061058c610c7f3660046148da565b61246b565b348015610c8f575f5ffd5b506105e761271081565b348015610ca4575f5ffd5b5060408051808201909152600f81526e4752494e44555255535f504f4f4c5360881b602082015261065c565b348015610cdb575f5ffd5b5061058c610cea3660046151c9565b61248e565b348015610cfa575f5ffd5b5061058c610d093660046151c9565b612509565b348015610d19575f5ffd5b5061058c610d28366004614904565b612514565b348015610d38575f5ffd5b50610d4c610d47366004614aa6565b6125c3565b6040516105bd9291906151e5565b348015610d65575f5ffd5b5061058c610d743660046148da565b612858565b348015610d84575f5ffd5b50600e54610688906001600160a01b031681565b348015610da3575f5ffd5b5061071a60105481565b348015610db8575f5ffd5b5061058c610dc736600461518b565b612863565b348015610dd7575f5ffd5b50610688610de63660046148af565b60166020525f90815260409020546001600160a01b031681565b348015610e0b575f5ffd5b50610688610e1a3660046148af565b60156020525f90815260409020546001600160a01b031681565b348015610e3f575f5ffd5b506105b1610e4e3660046151a6565b6128a9565b348015610e5e575f5ffd5b50600a546105e790600160801b900461ffff1681565b610e87610e823660046152ae565b6129c6565b6040516105bd929190615302565b348015610ea0575f5ffd5b5061058c610eaf36600461531c565b612a36565b348015610ebf575f5ffd5b5061071a610ece366004614904565b601a6020525f908152604090205481565b348015610eea575f5ffd5b50610efe610ef9366004614bbd565b612a4e565b6040516105bd9190615383565b348015610f16575f5ffd5b50600a546105e790600160d01b900461ffff1681565b348015610f37575f5ffd5b506105b1610f463660046153d1565b612ac0565b348015610f56575f5ffd5b5061058c610f65366004614a24565b612d29565b348015610f75575f5ffd5b5061065c610f843660046148af565b612dc6565b348015610f94575f5ffd5b5061058c610fa3366004614a24565b612e3f565b348015610fb3575f5ffd5b506105b1610fc23660046153f5565b612ef3565b348015610fd2575f5ffd5b50600a546105e790600160601b900461ffff1681565b348015610ff3575f5ffd5b5061071a611002366004614904565b60176020525f908152604090205481565b34801561101e575f5ffd5b5061071a61102d3660046151a6565b612fb6565b34801561103d575f5ffd5b50610d4c61104c366004615421565b6131c4565b34801561105c575f5ffd5b5061071a61106b366004614aa6565b613465565b34801561107b575f5ffd5b50600b54610688906001600160a01b031681565b34801561109a575f5ffd5b50600a546105e790600160a01b900461ffff1681565b3480156110bb575f5ffd5b5061071a6110ca3660046149b3565b613497565b3480156110da575f5ffd5b506105b16110e93660046153f5565b6135c2565b3480156110f9575f5ffd5b5061068861110836600461518b565b60116020525f90815260409020546001600160a01b031681565b34801561112d575f5ffd5b5061114161113c3660046148af565b6135ef565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016105bd565b348015611179575f5ffd5b506105b161118836600461544c565b613777565b348015611198575f5ffd5b5061058c6111a7366004614904565b613783565b3480156111b7575f5ffd5b5061058c6111c6366004614904565b61381d565b3480156111d6575f5ffd5b50600a546105e790640100000000900461ffff1681565b5f6111f7826138a2565b92915050565b5f611207826138c6565b505f828152600460205260409020546001600160a01b03166111f7565b61122f8282336138fe565b5050565b5f6111f782336128a9565b60605f61124a836122ba565b9050805f03611268575050604080515f815260208101909152919050565b5f816001600160401b0381111561128157611281614ac6565b6040519080825280602002602001820160405280156112aa578160200160208202803683370190505b5092505b818110156112e5576112c084826117e1565b8382815181106112d2576112d261546f565b60209081029190910101526001016112ae565b5050919050565b6112f461390b565b600d546001600160a01b03161580156113165750600e546001600160a01b0316155b801561132b5750600f546001600160a01b0316155b611333575f5ffd5b600d80546001600160a01b039485166001600160a01b031991821617909155600e805493851693821693909317909255600f8054919093169116179055565b5f61137c84613938565b5f84815260166020908152604080832054815163c55dae6360e01b815291516001600160a01b039091169392849263c55dae6392600480830193928290030181865afa1580156113ce573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113f29190615483565b60405163db13b24f60e01b81526001600160a01b038781166004830152602482018790529192509083169063db13b24f906044016020604051808303815f875af1158015611442573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611466919061549e565b92507fdce4d75a71c669c03f9635d0337797537bf2196ce50b07aa4f84a6fe13adf5ba8686838760405161149d94939291906154b5565b60405180910390a150509392505050565b6001600160a01b0382166114dc57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6114e8838333613972565b9050836001600160a01b0316816001600160a01b031614611536576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016114d3565b50505050565b61154461390b565b612710818361155386886154ee565b61155d91906154ee565b61156791906154ee565b61ffff161461158957604051636edcc52360e01b815260040160405180910390fd5b61159584612710615508565b600a805463ffffffff60901b1916600160901b61ffff9384160261ffff60a01b191617600160a01b968316969096029590951763ffffffff60b01b1916600160b01b9482169490940261ffff60c01b191693909317600160c01b928416929092029190911761ffff60d01b1916600160d01b9190921602179055565b5f61161c84336123fc565b61163957604051633cc50b4560e01b815260040160405180910390fd5b5f84815260166020908152604080832054815163c55dae6360e01b815291516001600160a01b039091169392849263c55dae6392600480830193928290030181865afa15801561168b573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116af9190615483565b90506116c66001600160a01b038216333088613a45565b6116da6001600160a01b0382168387613aac565b60405163cf622e3360e01b815260048101869052602481018590526001600160a01b0383169063cf622e33906044016020604051808303815f875af1158015611725573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611749919061549e565b604080518881526001600160a01b03808616602083015284169181019190915260608101879052608081018690529093507fb4343517742e7ffb2cfd208dc026eb798cabe235db96926a5362d3d4d0f1ef6d9060a00161149d565b5f5f6117af84611b9c565b600a54909250612710906117ce90600160901b900461ffff1685615522565b6117d89190615539565b90509250929050565b5f6117eb836122ba565b821061181c5760405163295f44f760e21b81526001600160a01b0384166004820152602481018390526044016114d3565b506001600160a01b03919091165f908152600660209081526040808320938352929052205490565b600d54604051630db9a3d560e21b81526060916001600160a01b0316906336e68f5490611875908590600401614959565b5f60405180830381865afa15801561188f573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111f791908101906158c2565b6118c082336123fc565b6118dd57604051633cc50b4560e01b815260040160405180910390fd5b5f828152601660209081526040808320548151630217a4b760e41b815291516001600160a01b039091169392849263217a4b7092600480830193928290030181865afa15801561192f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119539190615483565b905061196a6001600160a01b038216333086613a45565b61197e6001600160a01b0382168385613aac565b6040516384960cad60e01b8152600481018490526001600160a01b038316906384960cad906024016020604051808303815f875af11580156119c2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119e6919061549e565b507f51a35d68f9c6f1f1338b429b98a7056b8f71359cf95de0b2f8f048dc0158790484838386604051611a1c94939291906154b5565b60405180910390a150505050565b5f611a383386868686611ae2565b95945050505050565b611a5b83838360405180602001604052805f815250612a36565b505050565b5f611a6a60085490565b8210611a925760405163295f44f760e21b81525f6004820152602481018390526044016114d3565b60088281548110611aa557611aa561546f565b905f5260205f2001549050919050565b611abd61390b565b61ffff919091165f908152601260205260409020805460ff1916911515919091179055565b61ffff84165f9081526012602052604081205460ff1615611b16576040516326d25d2560e21b815260040160405180910390fd5b611b2286868686613b3b565b9050815f03611b5b57600f546001600160a01b03163314611b5657604051632c82781760e21b815260040160405180910390fd5b611a38565b611b658183613c84565b50600a5461271090611b7b9061ffff1684615522565b611b859190615539565b5f8281526014602052604090205595945050505050565b5f818152601360205260409020546001600160a01b031680611bc1576111f78261223d565b919050565b611bcf83613938565b5f838152601c602052604081208291611be78661223d565b6001600160a01b03908116825260208083019390935260409182015f90812096909116815294909152909220805460ff1916921515929092179091555050565b611c308361223d565b6001600160a01b0316611c428561223d565b6001600160a01b031614611c695760405163df870c7560e01b815260040160405180910390fd5b611c7284613deb565b5f8481526016602090815260408083205486845292819020548151630217a4b760e41b815291516001600160a01b039485169490911692839263217a4b7092600480830193928290030181865afa158015611ccf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611cf39190615483565b6001600160a01b0316826001600160a01b031663217a4b706040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d38573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d5c9190615483565b6001600160a01b0316141580611e425750806001600160a01b031663c55dae636040518163ffffffff1660e01b8152600401602060405180830381865afa158015611da9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dcd9190615483565b6001600160a01b0316826001600160a01b031663c55dae636040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e12573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e369190615483565b6001600160a01b031614155b15611e60576040516304e978c160e51b815260040160405180910390fd5b5f5f836001600160a01b031663c0b538f86040518163ffffffff1660e01b815260040160408051808303815f875af1158015611e9e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ec29190615ba4565b91509150611f3d843084876001600160a01b031663c55dae636040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f08573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f2c9190615483565b6001600160a01b0316929190613a45565b5f5f846001600160a01b031663c0b538f86040518163ffffffff1660e01b815260040160408051808303815f875af1158015611f7b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f9f9190615ba4565b91509150611fe5853084886001600160a01b031663c55dae636040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f08573d5f5f3e3d5ffd5b5f611ff08386615bc6565b90505f81611ffe8486615522565b6120088789615522565b6120129190615bc6565b61201c9190615539565b90505f6120298a8c615bd9565b60ff16838c60ff1661203b9190615522565b6120459190615539565b90505f6120528285615bf2565b905081156120cf576120cf8a838c6001600160a01b031663c55dae636040518163ffffffff1660e01b8152600401602060405180830381865afa15801561209b573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120bf9190615483565b6001600160a01b03169190613aac565b60405163d3a2750f60e01b815260048101839052602481018490526001600160a01b038b169063d3a2750f906044015f604051808303815f87803b158015612115575f5ffd5b505af1158015612127573d5f5f3e3d5ffd5b505050505f8111156121745761217489828b6001600160a01b031663c55dae636040518163ffffffff1660e01b8152600401602060405180830381865afa15801561209b573d5f5f3e3d5ffd5b60405163d3a2750f60e01b815260048101829052602481018490526001600160a01b038a169063d3a2750f906044015f604051808303815f87803b1580156121ba575f5ffd5b505af11580156121cc573d5f5f3e3d5ffd5b505050507f7a8df7c1c2ad2176c4af60b9a91ef6b31273a94f8ceb732d363ec080fd8e545b8e8e858585604051612225959493929190948552602085019390935260408401919091526060830152608082015260a00190565b60405180910390a15050505050505050505050505050565b5f6111f7826138c6565b600d5460408051636c0360eb60e01b815290516060926001600160a01b031691636c0360eb916004808301925f9291908290030181865afa15801561228e573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526122b59190810190615c05565b905090565b5f6001600160a01b0382166122e4576040516322718ad960e21b81525f60048201526024016114d3565b506001600160a01b03165f9081526003602052604090205490565b61230761390b565b6001600160a01b039091165f90815260196020526040902055565b5f6111f78233612fb6565b5f5f61233883613938565b5f838152601660205260408082205481516374fd6c7760e11b815282516001600160a01b0390921693849363e9fad8ee936004808501949293919283900301908290875af115801561238c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123b09190615ba4565b604080518781526020810184905290810182905291945092507f2517b7e41eaf162b9731c79972aca29f825cb18a4db86c56de7e89edb381d72b9060600160405180910390a150915091565b5f816001600160a01b03166124108461223d565b6001600160a01b0316148061246457505f838152601c60205260408120906124378561223d565b6001600160a01b03908116825260208083019390935260409182015f9081209186168152925290205460ff165b9392505050565b61247361390b565b6001600160a01b039091165f90815260186020526040902055565b600f546001600160a01b03908116908316036124d557335f908152601b602090815260408083206001600160a01b03861684529091529020805460ff191682151790555050565b335f908152601b602090815260408083206001600160a01b03861684529091529020805482151560ff199091161790555050565b61122f338383613e1a565b61251c61390b565b5f816001600160a01b031663492f4e186040518163ffffffff1660e01b8152600401602060405180830381865afa158015612559573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061257d9190615c36565b61ffff165f90815260116020908152604080832080546001600160a01b0319166001600160a01b0396909616959095179094556012905291909120805460ff1916905550565b60408051600480825260a0820190925260609182919060208201608080368337505060408051600480825260a082019092529294509050602082016080803683370190505090506126138461223d565b825f815181106126255761262561546f565b60200260200101906001600160a01b031690816001600160a01b03168152505061264e84611b9c565b826001815181106126615761266161546f565b6001600160a01b039283166020918202929092010152600e541661269057600c546001600160a01b031661269d565b600e546001600160a01b03165b826002815181106126b0576126b061546f565b6001600160a01b039283166020918202929092010152600c548351911690839060039081106126e1576126e161546f565b6001600160a01b0390921660209283029190910190910152600a5461271090819061271790600160a01b900461ffff1686615522565b6127219190615539565b825f815181106127335761273361546f565b6020908102919091010152600a54819061275890600160b01b900461ffff1686615522565b6127629190615539565b826001815181106127755761277561546f565b6020908102919091010152600a54819061279a90600160c01b900461ffff1686615522565b6127a49190615539565b826002815181106127b7576127b761546f565b602002602001018181525050816002815181106127d6576127d661546f565b6020026020010151826001815181106127f1576127f161546f565b6020026020010151835f8151811061280b5761280b61546f565b602002602001015161281d9190615bc6565b6128279190615bc6565b6128319085615bf2565b826003815181106128445761284461546f565b602002602001018181525050509250929050565b61122f338383613eb8565b61286b61390b565b61271061ffff8216106128915760405163c9732f9760e01b815260040160405180910390fd5b600a805461ffff191661ffff92909216919091179055565b5f5f5a5f858152601660205260409020549091506001600160a01b03166128cf81613f65565b806001600160a01b0316633d1f89026040518163ffffffff1660e01b81526004016020604051808303815f875af192505050801561292a575060408051601f3d908101601f1916820190925261292791810190615c51565b60015b612936575f9250612939565b92505b82156129be575f3a5a61294c9085615bf2565b6129569190615522565b9050612963868287613fe4565b61296c8661406f565b6040805187815260ff60208201526001600160a01b03871681830152851515606082015290517f728e60bec920c5a528246fdd7c4d3ec6f0ec45bca3edf44894b3dd71d5ce7d539181900360800190a1505b505092915050565b5f60606129d161390b565b846001600160a01b031684846040516129ea9190615c6c565b5f6040518083038185875af1925050503d805f8114612a24576040519150601f19603f3d011682016040523d82523d5f602084013e612a29565b606091505b5090969095509350505050565b612a418484846114ae565b61153633858585856140c4565b600d5460405163bde855e560e01b81526060916001600160a01b03169063bde855e590612a7f908590600401614959565b5f60405180830381865afa158015612a99573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111f79190810190615c82565b5f5f5a5f868152601660205260409020549091506001600160a01b0316612ae681613f65565b60ff8516612b5857806001600160a01b0316636d145ec56040518163ffffffff1660e01b815260040160408051808303815f875af1925050508015612b48575060408051601f3d908101601f19168201909252612b4591810190615ba4565b60015b15612c9957505060019250612c99565b5f1960ff861601612bba57806001600160a01b031663bd2ad6bf6040518163ffffffff1660e01b815260040160408051808303815f875af1925050508015612b48575060408051601f3d908101601f19168201909252612b4591810190615ba4565b60011960ff861601612c1d57806001600160a01b031663cdc6d97c6040518163ffffffff1660e01b815260040160408051808303815f875af1925050508015612b48575060408051601f3d908101601f19168201909252612b4591810190615ba4565b60021960ff861601612c8057806001600160a01b0316632b6010a76040518163ffffffff1660e01b815260040160408051808303815f875af1925050508015612b48575060408051601f3d908101601f19168201909252612b4591810190615ba4565b6040516393c19f6160e01b815260040160405180910390fd5b8215612d20575f3a5a612cac9085615bf2565b612cb69190615522565b9050612cc3878287613fe4565b612ccc8761406f565b6040805188815260ff881660208201526001600160a01b03871681830152851515606082015290517f728e60bec920c5a528246fdd7c4d3ec6f0ec45bca3edf44894b3dd71d5ce7d539181900360800190a1505b50509392505050565b612d3161390b565b61271061ffff851611612d5757604051636edcc52360e01b815260040160405180910390fd5b600a805465ffffffff000019166201000061ffff9687160265ffff00000000191617640100000000948616949094029390931769ffffffff0000000000001916600160301b9285169290920269ffff0000000000000000191691909117600160401b9190931602919091179055565b6060612dd1826138c6565b50600d5460405163c87b56dd60e01b8152600481018490526001600160a01b039091169063c87b56dd906024015f60405180830381865afa158015612e18573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111f79190810190615c05565b612e4761390b565b6127108183612e5686886154ee565b612e6091906154ee565b612e6a91906154ee565b61ffff1614612e8c57604051636edcc52360e01b815260040160405180910390fd5b600a805463ffffffff60501b1916600160501b61ffff9687160261ffff60601b191617600160601b948616949094029390931763ffffffff60701b1916600160701b9285169290920261ffff60801b191691909117600160801b9190931602919091179055565b5f5f612efe846122ba565b1115612faf57600f546001600160a01b0390811690831603612f6657816001600160a01b0316836001600160a01b03161480612f5f57506001600160a01b038084165f908152601b602090815260408083209386168352929052205460ff16155b90506111f7565b816001600160a01b0316836001600160a01b03161480612f5f5750506001600160a01b038281165f908152601b602090815260408083209385168352929052205460ff166111f7565b505f6111f7565b5f5f5f5f5f5f612fc5886135ef565b5f8e8152601660209081526040808320548151634a64d67d60e01b81529151999e50979c50959a509398509096506001600160a01b03909416948593634a64d67d93600480830194509092918290030181865afa158015613028573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061304c9190615483565b90506130636001600160a01b038216333086613a45565b5f61306d8b611b9c565b90508960135f8d81526020019081526020015f205f6101000a8154816001600160a01b0302191690836001600160a01b031602179055508360145f8d81526020019081526020015f20819055505f8811156130e3576130d66001600160a01b038316828a6141ea565b6130e0888a615bc6565b98505b8615613113576131066130f58c61223d565b6001600160a01b03841690896141ea565b613110878a615bc6565b98505b851561314057600e54613133906001600160a01b038481169116886141ea565b61313d868a615bc6565b98505b841561316d57600c54613160906001600160a01b038481169116876141ea565b61316a858a615bc6565b98505b604080518c81526001600160a01b038c1660208201529081018a90527f575a2f348e9def4ded8325aa42a4bf27e87e9856952e713a777c8adb7ee9d43c9060600160405180910390a1505050505050505092915050565b60408051600480825260a0820190925260609182919060208201608080368337505060408051600480825260a082019092529294509050602082016080803683370190505090506127106132178661223d565b835f815181106132295761322961546f565b6001600160a01b039283166020918202929092010152600e541661325857600c546001600160a01b0316613265565b600e546001600160a01b03165b836001815181106132785761327861546f565b60200260200101906001600160a01b031690816001600160a01b0316815250506132a186611b9c565b836002815181106132b4576132b461546f565b60200260200101906001600160a01b031690816001600160a01b03168152505083836003815181106132e8576132e861546f565b6001600160a01b0390921660209283029190910190910152600a5461ffff8083169161331d91600160701b9091041687615522565b6133279190615539565b825f815181106133395761333961546f565b6020908102919091010152600a5461ffff8083169161336191600160601b9091041687615522565b61336b9190615539565b8260018151811061337e5761337e61546f565b6020908102919091010152600a5461ffff808316916133a691600160801b9091041687615522565b6133b09190615539565b826002815181106133c3576133c361546f565b602002602001018181525050816002815181106133e2576133e261546f565b6020026020010151826001815181106133fd576133fd61546f565b6020026020010151835f815181106134175761341761546f565b60200260200101516134299190615bc6565b6134339190615bc6565b61343d9086615bf2565b826003815181106134505761345061546f565b60200260200101818152505050935093915050565b5f61347083336123fc565b61348d57604051633cc50b4560e01b815260040160405180910390fd5b6124648383613c84565b5f6134a184613938565b5f848152601660209081526040808320548151630217a4b760e41b815291516001600160a01b039091169392849263217a4b7092600480830193928290030181865afa1580156134f3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135179190615483565b60405163f3fef3a360e01b81526001600160a01b038781166004830152602482018790529192509083169063f3fef3a3906044016020604051808303815f875af1158015613567573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061358b919061549e565b92507ffeb2000dca3e617cd6f3a8bbb63014bb54a124aac6ccbf73ee7229b4cd01f1208686838760405161149d94939291906154b5565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f818152601460205260408120548190819081908190819061271081156136d757600a5481906136299062010000900461ffff1684615522565b6136339190615539565b600a54909850819061365090600160301b900461ffff1684615522565b61365a9190615539565b600a54909750819061367890640100000000900461ffff1684615522565b6136829190615539565b600a54909650819061369f90600160401b900461ffff1684615522565b6136a99190615539565b94508193508486888a6136bc9190615bc6565b6136c69190615bc6565b6136d09190615bc6565b925061376c565b600a545f8a8152601660209081526040918290205482516367d2479f60e11b81529251859461ffff16936001600160a01b039092169263cfa48f3e92600480820193918290030181865afa158015613731573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613755919061549e565b61375f9190615522565b6137699190615539565b92505b505091939550919395565b5f612464838333612ac0565b61378b61390b565b600d80546001600160a01b0319166001600160a01b0383169081179091556040805163154982b960e21b815290513092916355260ae49160048083019260209291908290030181865afa1580156137e4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138089190615483565b6001600160a01b03161461381a575f5ffd5b50565b600c546001600160a01b0316330361384f57600b80546001600160a01b0383166001600160a01b031990911617905550565b600b546001600160a01b0316330361388957600b8054600c80546001600160a01b03199081166001600160a01b0384161790915516905550565b6040516330cd747160e01b815260040160405180910390fd5b5f6001600160e01b0319821663780e9d6360e01b14806111f757506111f78261421b565b5f818152600260205260408120546001600160a01b0316806111f757604051637e27328960e01b8152600481018490526024016114d3565b611a5b838383600161426a565b600c546001600160a01b03163314613936576040516330cd747160e01b815260040160405180910390fd5b565b6139418161223d565b6001600160a01b0316336001600160a01b03161461381a57604051636a6bc9c560e11b815260040160405180910390fd5b5f5f61397f85858561436e565b90506001600160a01b0381166139db576139d684600880545f838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6139fe565b846001600160a01b0316816001600160a01b0316146139fe576139fe8185614460565b6001600160a01b038516613a1a57613a15846144dd565b613a3d565b846001600160a01b0316816001600160a01b031614613a3d57613a3d8585614584565b949350505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526115369186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506145d2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052613afd848261463e565b611536576040516001600160a01b0384811660248301525f6044830152613b3191869182169063095ea7b390606401613a7a565b61153684826145d2565b60105461ffff84165f90815260116020526040808220549051634a217eb160e11b8152600481018490526001600160a01b038681166024830152858116604483015290911690639442fd62906064016020604051808303815f875af1158015613ba6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613bca9190615483565b5f83815260156020908152604080832080546001600160a01b031990811633179091556016835281842080546001600160a01b0387169216821790558352601790915290208390559050613c1e8683614687565b60108054905f613c2d83615d13565b9091555050604080518381526001600160a01b03868116602083015285168183015290517f3794f7f7a2011a8e813b6d89dbacb3d42f6810b632e735dc2eab8628afdb77d99181900360600190a150949350505050565b5f828152601660209081526040808320548151630217a4b760e41b815291516001600160a01b03909116928492849263217a4b70926004808401939192918290030181865afa158015613cd9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613cfd9190615483565b9050613d0981856146e8565b613d138185614720565b613d286001600160a01b038216333087613a45565b613d3c6001600160a01b0382168386613aac565b60405163b6b55f2560e01b8152600481018590526001600160a01b0383169063b6b55f25906024016020604051808303815f875af1158015613d80573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613da4919061549e565b92507f2c0f148b435140de488c1b34647f1511c646f7077e87007bacf22ef9977a16d885838386604051613ddb94939291906154b5565b60405180910390a1505092915050565b613dfd613df78261223d565b33612ef3565b61381a57604051630d9ab13f60e01b815260040160405180910390fd5b6001600160a01b038216613e4c57604051630b61174360e31b81526001600160a01b03831660048201526024016114d3565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038216613ee157604051633250574960e11b81525f60048201526024016114d3565b5f613eed83835f613972565b90506001600160a01b038116613f1957604051637e27328960e01b8152600481018390526024016114d3565b836001600160a01b0316816001600160a01b031614611536576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016114d3565b806001600160a01b031663cfa48f3e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613fa1573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613fc5919061549e565b5f0361381a57604051632a81ca8560e11b815260040160405180910390fd5b5f5f613ff18585856131c4565b600e546040516307233fbf60e51b81529294509092506001600160a01b03169063e467f7e09061402790859085906004016151e5565b6020604051808303815f875af1158015614043573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190614067919061549e565b505050505050565b600f546001600160a01b0316330361381a576001601a5f61408f8461223d565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8282546140bc9190615bc6565b909155505050565b6001600160a01b0383163b156141e357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290614106908890889087908790600401615d2b565b6020604051808303815f875af1925050508015614140575060408051601f3d908101601f1916820190925261413d91810190615d5d565b60015b6141a7573d80801561416d576040519150601f19603f3d011682016040523d82523d5f602084013e614172565b606091505b5080515f0361419f57604051633250574960e11b81526001600160a01b03851660048201526024016114d3565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461406757604051633250574960e11b81526001600160a01b03851660048201526024016114d3565b5050505050565b6040516001600160a01b03838116602483015260448201839052611a5b91859182169063a9059cbb90606401613a7a565b5f6001600160e01b031982166380ac58cd60e01b148061424b57506001600160e01b03198216635b5e139f60e01b145b806111f757506301ffc9a760e01b6001600160e01b03198316146111f7565b808061427e57506001600160a01b03821615155b1561433f575f61428d846138c6565b90506001600160a01b038316158015906142b95750826001600160a01b0316816001600160a01b031614155b80156142cc57506142ca81846135c2565b155b156142f55760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016114d3565b811561433d5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f828152600260205260408120546001600160a01b039081169083161561439a5761439a81848661477a565b6001600160a01b038116156143d4576143b55f855f5f61426a565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615614402576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f61446a836122ba565b5f838152600760209081526040808320546001600160a01b03881684526006909252909120919250908183146144bf575f83815260208281526040808320548584528184208190558352600790915290208290555b5f938452600760209081526040808620869055938552525081205550565b6008545f906144ee90600190615bf2565b5f83815260096020526040812054600880549394509092849081106145155761451561546f565b905f5260205f200154905080600883815481106145345761453461546f565b5f91825260208083209091019290925582815260099091526040808220849055858252812055600880548061456b5761456b615d78565b600190038181905f5260205f20015f9055905550505050565b5f6001614590846122ba565b61459a9190615bf2565b6001600160a01b039093165f908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b5f5f60205f8451602086015f885af1806145f1576040513d5f823e3d81fd5b50505f513d91508115614608578060011415614615565b6001600160a01b0384163b155b1561153657604051635274afe760e01b81526001600160a01b03851660048201526024016114d3565b5f5f5f5f60205f8651602088015f8a5af192503d91505f51905082801561467d5750811561466f578060011461467d565b5f866001600160a01b03163b115b9695505050505050565b6001600160a01b0382166146b057604051633250574960e11b81525f60048201526024016114d3565b5f6146bc83835f613972565b90506001600160a01b03811615611a5b576040516339e3563760e11b81525f60048201526024016114d3565b6001600160a01b0382165f9081526018602052604090205481101561122f5760405163fafe179b60e01b815260040160405180910390fd5b6001600160a01b0382165f908152601960205260409020541580159061475c57506001600160a01b0382165f9081526019602052604090205481115b1561122f57604051633bc9ae0960e01b815260040160405180910390fd5b6147858383836147de565b611a5b576001600160a01b0383166147b357604051637e27328960e01b8152600481018290526024016114d3565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016114d3565b5f6001600160a01b03831615801590613a3d5750826001600160a01b0316846001600160a01b03161480614817575061481784846135c2565b80613a3d5750505f908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461381a575f5ffd5b5f60208284031215614864575f5ffd5b81356124648161483f565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f612464602083018461486f565b5f602082840312156148bf575f5ffd5b5035919050565b6001600160a01b038116811461381a575f5ffd5b5f5f604083850312156148eb575f5ffd5b82356148f6816148c6565b946020939093013593505050565b5f60208284031215614914575f5ffd5b8135612464816148c6565b5f8151808452602084019350602083015f5b8281101561494f578151865260209586019590910190600101614931565b5093949350505050565b602081525f612464602083018461491f565b5f5f5f6060848603121561497d575f5ffd5b8335614988816148c6565b92506020840135614998816148c6565b915060408401356149a8816148c6565b809150509250925092565b5f5f5f606084860312156149c5575f5ffd5b8335925060208401356149d7816148c6565b929592945050506040919091013590565b5f5f5f606084860312156149fa575f5ffd5b8335614a05816148c6565b925060208401356149d7816148c6565b61ffff8116811461381a575f5ffd5b5f5f5f5f60808587031215614a37575f5ffd5b8435614a4281614a15565b93506020850135614a5281614a15565b92506040850135614a6281614a15565b91506060850135614a7281614a15565b939692955090935050565b5f5f5f60608486031215614a8f575f5ffd5b505081359360208301359350604090920135919050565b5f5f60408385031215614ab7575f5ffd5b50508035926020909101359150565b634e487b7160e01b5f52604160045260245ffd5b60405161010081016001600160401b0381118282101715614afd57614afd614ac6565b60405290565b60405160e081016001600160401b0381118282101715614afd57614afd614ac6565b60405161016081016001600160401b0381118282101715614afd57614afd614ac6565b60405161036081016001600160401b0381118282101715614afd57614afd614ac6565b604051601f8201601f191681016001600160401b0381118282101715614b9357614b93614ac6565b604052919050565b5f6001600160401b03821115614bb357614bb3614ac6565b5060051b60200190565b5f60208284031215614bcd575f5ffd5b81356001600160401b03811115614be2575f5ffd5b8201601f81018413614bf2575f5ffd5b8035614c05614c0082614b9b565b614b6b565b8082825260208201915060208360051b850101925086831115614c26575f5ffd5b6020840193505b8284101561467d578335825260209384019390910190614c2d565b60ff815116825260ff602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b614ca7828251614c48565b6020810151611a5b610100840182614c48565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b8281101561500f57603f19878603018452815180518652602081015160208701526040810151614d1b60408801826001600160a01b03169052565b506060810151614d2e6060880182614c9c565b50608081810151805160ff9081166102608a01526020808301519091166102808a01526040808301516102a08b015260608301516102c08b0152928201516102e08a015260a0808301516103008b015260c0928301516103208b015284015180516103408b0152908101516103608a0152909101516103808801528101516001600160a01b039081166103a088015260e082015181166103c088015261010082015181166103e08801526101208201518116610400880152610140820151166104208701526101608101516109206104408801819052614e109088018261486f565b9050610180820151878203610460890152614e2b828261486f565b9150506101a0820151878203610480890152614e47828261486f565b9150506101c0820151614e606104a089018260ff169052565b506101e082015160ff9081166104c089015261020083015181166104e0890152610220830151166105008801526102408201516105208801526102608201516105408801526102808201516105608801526102a08201516105808801526102c082015180516105a08901526020808201516105c08a01526040808301516105e08b01526060928301516106008b01526102e085015180516106208c0152808301516106408c0152808201516106608c01528301516106808b015261030085015180516106a08c0152808301516106c08c01528101516106e08b015261032085015180516107008c0152808301516107208c0152808201516107408c0152808401516107608c01526080808201516107808d015260a0808301516107a08e015260c08301516107c08e015260e08301516107e08e01526101008301516108008e01526101208301516108208e0152610140909201516108408d01526103409096015180516108608d0152808401516108808d0152918201516108a08c0152928101516108c08b0152938401516108e08a015292015161090090970196909652938401939190910190600101614ce0565b50929695505050505050565b5f5f5f5f6080858703121561502e575f5ffd5b843561503981614a15565b93506020850135615049816148c6565b92506040850135615059816148c6565b9396929550929360600135925050565b801515811461381a575f5ffd5b5f5f60408385031215615087575f5ffd5b823561509281614a15565b915060208301356150a281615069565b809150509250929050565b5f5f5f5f5f60a086880312156150c1575f5ffd5b85356150cc816148c6565b945060208601356150dc81614a15565b935060408601356150ec816148c6565b925060608601356150fc816148c6565b949793965091946080013592915050565b5f5f5f6060848603121561511f575f5ffd5b833592506020840135615131816148c6565b915060408401356149a881615069565b60ff8116811461381a575f5ffd5b5f5f5f5f60808587031215615162575f5ffd5b8435935060208501359250604085013561517b81615141565b91506060850135614a7281615141565b5f6020828403121561519b575f5ffd5b813561246481614a15565b5f5f604083850312156151b7575f5ffd5b8235915060208301356150a2816148c6565b5f5f604083850312156151da575f5ffd5b8235615092816148c6565b604080825283519082018190525f9060208501906060840190835b818110156152275783516001600160a01b0316835260209384019390920191600101615200565b5050838103602085015261467d818661491f565b5f6001600160401b0382111561525357615253614ac6565b50601f01601f191660200190565b5f82601f830112615270575f5ffd5b813561527e614c008261523b565b818152846020838601011115615292575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f606084860312156152c0575f5ffd5b83356152cb816148c6565b92506020840135915060408401356001600160401b038111156152ec575f5ffd5b6152f886828701615261565b9150509250925092565b8215158152604060208201525f613a3d604083018461486f565b5f5f5f5f6080858703121561532f575f5ffd5b843561533a816148c6565b9350602085013561534a816148c6565b92506040850135915060608501356001600160401b0381111561536b575f5ffd5b61537787828801615261565b91505092959194509250565b602080825282518282018190525f918401906040840190835b818110156153c6576153af838551614c9c565b60209390930192610200929092019160010161539c565b509095945050505050565b5f5f5f606084860312156153e3575f5ffd5b83359250602084013561499881615141565b5f5f60408385031215615406575f5ffd5b8235615411816148c6565b915060208301356150a2816148c6565b5f5f5f60608486031215615433575f5ffd5b833592506020840135915060408401356149a8816148c6565b5f5f6040838503121561545d575f5ffd5b8235915060208301356150a281615141565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215615493575f5ffd5b8151612464816148c6565b5f602082840312156154ae575f5ffd5b5051919050565b9384526001600160a01b03928316602085015291166040830152606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b61ffff81811683821601908111156111f7576111f76154da565b61ffff82811682821603908111156111f7576111f76154da565b80820281158282048414176111f7576111f76154da565b5f8261555357634e487b7160e01b5f52601260045260245ffd5b500490565b8051611bc1816148c6565b8051611bc181615141565b5f610100828403121561557f575f5ffd5b615587614ada565b9050815161559481615141565b81526155a260208301615563565b602082015260408281015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e09182015191810191909152919050565b5f61020082840312156155fc575f5ffd5b604080519081016001600160401b038111828210171561561e5761561e614ac6565b60405290508061562e848461556e565b815261563e84610100850161556e565b60208201525092915050565b5f60e0828403121561565a575f5ffd5b615662614b03565b9050815161566f81615141565b8152602082015161567f81615141565b602082015260408281015190820152606080830151908201526080808301519082015260a0808301519082015260c09182015191810191909152919050565b5f606082840312156156ce575f5ffd5b604051606081016001600160401b03811182821017156156f0576156f0614ac6565b60409081528351825260208085015190830152928301519281019290925250919050565b5f82601f830112615723575f5ffd5b8151615731614c008261523b565b818152846020838601011115615745575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f60808284031215615771575f5ffd5b604051608081016001600160401b038111828210171561579357615793614ac6565b6040908152835182526020808501519083015283810151908201526060928301519281019290925250919050565b5f61016082840312156157d2575f5ffd5b6157da614b25565b825181526020808401519082015260408084015190820152606080840151908201526080808401519082015260a0808401519082015260c0808401519082015260e0808401519082015261010080840151908201526101208084015190820152610140928301519281019290925250919050565b5f60c0828403121561585e575f5ffd5b60405160c081016001600160401b038111828210171561588057615880614ac6565b604090815283518252602080850151908301528381015190820152606080840151908201526080808401519082015260a0928301519281019290925250919050565b5f602082840312156158d2575f5ffd5b81516001600160401b038111156158e7575f5ffd5b8201601f810184136158f7575f5ffd5b8051615905614c0082614b9b565b8082825260208201915060208360051b850101925086831115615926575f5ffd5b602084015b83811015615b995780516001600160401b03811115615948575f5ffd5b8501610920818a03601f1901121561595e575f5ffd5b615966614b48565b602082810151825260408301519082015261598360608301615558565b60408201526159958a608084016155eb565b60608201526159a88a610280840161564a565b60808201526159bb8a61036084016156be565b60a08201526159cd6103c08301615558565b60c08201526159df6103e08301615558565b60e08201526159f16104008301615558565b610100820152615a046104208301615558565b610120820152615a176104408301615558565b6101408201526104608201516001600160401b03811115615a36575f5ffd5b615a458b602083860101615714565b610160830152506104808201516001600160401b03811115615a65575f5ffd5b615a748b602083860101615714565b610180830152506104a08201516001600160401b03811115615a94575f5ffd5b615aa38b602083860101615714565b6101a083015250615ab76104c08301615563565b6101c0820152615aca6104e08301615563565b6101e0820152615add6105008301615563565b610200820152615af06105208301615563565b6102208201526105408201516102408201526105608201516102608201526105808201516102808201526105a08201516102a0820152615b348a6105c08401615761565b6102c0820152615b488a6106408401615761565b6102e0820152615b5c8a6106c084016156be565b610300820152615b708a61072084016157c1565b610320820152615b848a610880840161584e565b6103408201528452506020928301920161592b565b509695505050505050565b5f5f60408385031215615bb5575f5ffd5b505080516020909101519092909150565b808201808211156111f7576111f76154da565b60ff81811683821601908111156111f7576111f76154da565b818103818111156111f7576111f76154da565b5f60208284031215615c15575f5ffd5b81516001600160401b03811115615c2a575f5ffd5b613a3d84828501615714565b5f60208284031215615c46575f5ffd5b815161246481614a15565b5f60208284031215615c61575f5ffd5b815161246481615069565b5f82518060208501845e5f920191825250919050565b5f60208284031215615c92575f5ffd5b81516001600160401b03811115615ca7575f5ffd5b8201601f81018413615cb7575f5ffd5b8051615cc5614c0082614b9b565b8082825260208201915060208360091b850101925086831115615ce6575f5ffd5b6020840193505b8284101561467d57615cff87856155eb565b825260208201915061020084019350615ced565b5f60018201615d2457615d246154da565b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061467d9083018461486f565b5f60208284031215615d6d575f5ffd5b81516124648161483f565b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220bef92643d4181c207fd04ad266c872617eba3ad0a5069b1a719c8facc1ee44b164736f6c634300081c0033",
    "sourceMap": "1001:41654:97:-:0;;;6954:2133;;;;;;;;;-1:-1:-1;1380:113:72;;;;;;;;;-1:-1:-1;1380:113:72;;;;;;;;;;;;;;;;1446:13;1380:113;-1:-1:-1;1446:13:72;:::i;:::-;-1:-1:-1;1469:7:72;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;7006:1:97::1;6993:10;:14:::0;-1:-1:-1;7017:12:97::1;:34:::0;;-1:-1:-1;;;;;;7017:34:97;;::::1;::::0;;;7061:5:::1;:27:::0;;7077:10:::1;7061:27:::0;::::1;::::0;;;::::1;::::0;;7099:25:::1;:32:::0;;-1:-1:-1;;;;;;7326:38:97;;;;;;;1363:6:::1;::::0;7099:32:::1;7326:38:::0;7570:31;::::1;::::0;::::1;::::0;7268:42;7532:35;::::1;::::0;::::1;::::0;7455:74:::1;::::0;7212:40;7496:33;::::1;::::0;::::1;::::0;7147:47;7455:38;;::::1;;:74;:::i;:::-;:112;;;;:::i;:::-;:146;;;;:::i;:::-;:160;;;7447:169;;;;;;7627:26;:34:::0;;-1:-1:-1;;;;;;;;7780:41:97;;;;;;;1363:6:::1;::::0;7627:34:::1;-1:-1:-1::0;;;7993:34:97;::::1;::::0;::::1;::::0;-1:-1:-1;;;7962:28:97;::::1;::::0;::::1;::::0;7904:55:::1;::::0;7678:34;7933:26;::::1;::::0;::::1;::::0;7627:34;7904:26;;::::1;;:55;:::i;:::-;:86;;;;:::i;:::-;:123;;;;:::i;:::-;:138;;;7896:147;;;;;;8196:16;:24:::0;;-1:-1:-1;;;;;;;;8390:33:97;-1:-1:-1;;;8390:33:97;;;;;1363:6:::1;::::0;8565:42:::1;::::0;8196:24:::1;-1:-1:-1::0;;;8584:23:97;::::1;::::0;::::1;::::0;-1:-1:-1;;;8565:16:97;::::1;;:42;:::i;:::-;:57;;;8557:66;;;;;;8730:26;::::0;1363:6:::1;::::0;8641:130:::1;-1:-1:-1::0;;;8730:26:97;::::1;::::0;::::1;::::0;-1:-1:-1;;;8699:28:97;::::1;::::0;::::1;::::0;8641:55:::1;::::0;-1:-1:-1;;;8667:29:97;::::1;::::0;::::1;::::0;-1:-1:-1;;;8641:23:97;;::::1;;:55;:::i;:::-;:86;;;;:::i;:::-;:115;;;;:::i;:::-;:130;;;8633:139;;;;;;1001:41654:::0;;14:127:142;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:142;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:142;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:142;;;2500:26;2451:89;-1:-1:-1;;1308:1:142;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:142;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:142;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:142;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:142:o;2655:252::-;2746:6;2723:14;;;2739;;;2719:35;;2766:15;;2763:138;;;2823:10;2818:3;2814:20;2811:1;2804:31;2858:4;2855:1;2848:15;2886:4;2883:1;2876:15;2763:138;2655:252;;;;:::o;:::-;1001:41654:97;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;:::i;:::-;;;775:14:142;;768:22;750:41;;738:2;723:18;38959:195:97;;;;;;;;2427:40;;;;;;;;;;-1:-1:-1;2427:40:97;;;;-1:-1:-1;;;2427:40:97;;;;;;;;;976:6:142;964:19;;;946:38;;934:2;919:18;2427:40:97;802:188:142;3648:43:97;;;;;;;;;;-1:-1:-1;3648:43:97;;;;-1:-1:-1;;;3648:43:97;;;;;;38657:113;;;;;;;;;;-1:-1:-1;38728:35:97;;;;;;;;;;;;;;;;;38657:113;;;;;;;:::i;3496:154:72:-;;;;;;;;;;-1:-1:-1;3496:154:72;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2018:32:142;;;2000:51;;1988:2;1973:18;3496:154:72;1854:203:142;3322:113:72;;;;;;;;;;-1:-1:-1;3322:113:72;;;;;:::i;:::-;;:::i;27966:115:97:-;;;;;;;;;;-1:-1:-1;27966:115:97;;;;;:::i;:::-;;:::i;40770:528::-;;;;;;;;;;-1:-1:-1;40770:528:97;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2062:102:75:-;;;;;;;;;;-1:-1:-1;2140:10:75;:17;2062:102;;;3659:25:142;;;3647:2;3632:18;2062:102:75;3513:177:142;9162:371:97;;;;;;;;;;-1:-1:-1;9162:371:97;;;;;:::i;:::-;;:::i;2731:42::-;;;;;;;;;;-1:-1:-1;2731:42:97;;;;-1:-1:-1;;;2731:42:97;;;;;;22915:409;;;;;;;;;;-1:-1:-1;22915:409:97;;;;;:::i;:::-;;:::i;4142:578:72:-;;;;;;;;;;-1:-1:-1;4142:578:72;;;;;:::i;:::-;;:::i;5351:55:97:-;;;;;;;;;;-1:-1:-1;5351:55:97;;;;;:::i;:::-;;;;;;;;;;;;;;13211:816;;;;;;;;;;-1:-1:-1;13211:816:97;;;;;:::i;:::-;;:::i;19166:852::-;;;;;;;;;;-1:-1:-1;19166:852:97;;;;;:::i;:::-;;:::i;4708:27::-;;;;;;;;;;-1:-1:-1;4708:27:97;;;;-1:-1:-1;;;;;4708:27:97;;;33817:275;;;;;;;;;;-1:-1:-1;33817:275:97;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;7266:32:142;;;7248:51;;7330:2;7315:18;;7308:34;;;;7221:18;33817:275:97;7074:274:142;1684:39:97;;;;;;;;;;-1:-1:-1;1684:39:97;;;;;;;;3251:30;;;;;;;;;;-1:-1:-1;3251:30:97;;;;-1:-1:-1;;;3251:30:97;;;;;;1736:255:75;;;;;;;;;;-1:-1:-1;1736:255:75;;;;;:::i;:::-;;:::i;1807:52:97:-;;;;;;;;;;-1:-1:-1;1807:52:97;;;;;;;;;;;2148:45;;;;;;;;;;-1:-1:-1;2148:45:97;;;;-1:-1:-1;;;2148:45:97;;;;;;41391:199;;;;;;;;;;-1:-1:-1;41391:199:97;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;20223:610::-;;;;;;;;;;-1:-1:-1;20223:610:97;;;;;:::i;:::-;;:::i;15622:337::-;;;;;;;;;;-1:-1:-1;15622:337:97;;;;;:::i;:::-;;:::i;5897:52::-;;;;;;;;;;-1:-1:-1;5897:52:97;;;;;:::i;:::-;;;;;;;;;;;;;;6079;;;;;;;;;;-1:-1:-1;6079:52:97;;;;;:::i;:::-;;;;;;;;;;;;;;4786:132:72;;;;;;;;;;-1:-1:-1;4786:132:72;;;;;:::i;:::-;;:::i;2236:226:75:-;;;;;;;;;;-1:-1:-1;2236:226:75;;;;;:::i;:::-;;:::i;2040:49:97:-;;;;;;;;;;-1:-1:-1;2040:49:97;;;;-1:-1:-1;;;2040:49:97;;;;;;15090:177;;;;;;;;;;-1:-1:-1;15090:177:97;;;;;:::i;:::-;;:::i;16276:724::-;;;;;;;;;;-1:-1:-1;16276:724:97;;;;;:::i;:::-;;:::i;39308:236::-;;;;;;;;;;-1:-1:-1;39308:236:97;;;;;:::i;:::-;;:::i;5195:58::-;;;;;;;;;;-1:-1:-1;5195:58:97;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5195:58:97;;;18056:223;;;;;;;;;;-1:-1:-1;18056:223:97;;;;;:::i;:::-;;:::i;25820:1997::-;;;;;;;;;;-1:-1:-1;25820:1997:97;;;;;:::i;:::-;;:::i;2184:118:72:-;;;;;;;;;;-1:-1:-1;2184:118:72;;;;;:::i;:::-;;:::i;38097:101:97:-;;;;;;;;;;;;;:::i;3817:42::-;;;;;;;;;;-1:-1:-1;3817:42:97;;;;-1:-1:-1;;;3817:42:97;;;;;;5088:60;;;;;;;;;;-1:-1:-1;5088:60:97;;;;;:::i;:::-;;;;;;;;;;;;;;;;1919:208:72;;;;;;;;;;-1:-1:-1;1919:208:72;;;;;:::i;:::-;;:::i;10885:147:97:-;;;;;;;;;;-1:-1:-1;10885:147:97;;;;;:::i;:::-;;:::i;31725:142::-;;;;;;;;;;-1:-1:-1;31725:142:97;;;;;:::i;:::-;;:::i;23509:335::-;;;;;;;;;;-1:-1:-1;23509:335:97;;;;;:::i;:::-;;:::i;:::-;;;;20430:25:142;;;20486:2;20471:18;;20464:34;;;;20403:18;23509:335:97;20256:248:142;40394:208:97;;;;;;;;;;-1:-1:-1;40394:208:97;;;;;:::i;:::-;;:::i;4283:28::-;;;;;;;;;;-1:-1:-1;4283:28:97;;;;-1:-1:-1;;;;;4283:28:97;;;4488:33;;;;;;;;;;-1:-1:-1;4488:33:97;;;;-1:-1:-1;;;;;4488:33:97;;;10604:147;;;;;;;;;;-1:-1:-1;10604:147:97;;;;;:::i;:::-;;:::i;1326:43::-;;;;;;;;;;;;1363:6;1326:43;;38822:104;;;;;;;;;;-1:-1:-1;38895:24:97;;;;;;;;;;;;-1:-1:-1;;;38895:24:97;;;;38822:104;;25149:283;;;;;;;;;;-1:-1:-1;25149:283:97;;;;;:::i;:::-;;:::i;3717:144:72:-;;;;;;;;;;-1:-1:-1;3717:144:72;;;;;:::i;:::-;;:::i;14616:281:97:-;;;;;;;;;;-1:-1:-1;14616:281:97;;;;;:::i;:::-;;:::i;34303:874::-;;;;;;;;;;-1:-1:-1;34303:874:97;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;31460:103::-;;;;;;;;;;-1:-1:-1;31460:103:97;;;;;:::i;:::-;;:::i;4633:19::-;;;;;;;;;;-1:-1:-1;4633:19:97;;;;-1:-1:-1;;;;;4633:19:97;;;4780:25;;;;;;;;;;;;;;;;11161:297;;;;;;;;;;-1:-1:-1;11161:297:97;;;;;:::i;:::-;;:::i;5619:48::-;;;;;;;;;;-1:-1:-1;5619:48:97;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5619:48:97;;;5518:49;;;;;;;;;;-1:-1:-1;5518:49:97;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5518:49:97;;;28324:692;;;;;;;;;;-1:-1:-1;28324:692:97;;;;;:::i;:::-;;:::i;2900:48::-;;;;;;;;;;-1:-1:-1;2900:48:97;;;;-1:-1:-1;;;2900:48:97;;;;;;42103:225;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4984:233:72:-;;;;;;;;;;-1:-1:-1;4984:233:72;;;;;:::i;:::-;;:::i;6283:56:97:-;;;;;;;;;;-1:-1:-1;6283:56:97;;;;;:::i;:::-;;;;;;;;;;;;;;41679:178;;;;;;;;;;-1:-1:-1;41679:178:97;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3968:40::-;;;;;;;;;;-1:-1:-1;3968:40:97;;;;-1:-1:-1;;;3968:40:97;;;;;;29562:1178;;;;;;;;;;-1:-1:-1;29562:1178:97;;;;;:::i;:::-;;:::i;11551:739::-;;;;;;;;;;-1:-1:-1;11551:739:97;;;;;:::i;:::-;;:::i;38372:235::-;;;;;;;;;;-1:-1:-1;38372:235:97;;;;;:::i;:::-;;:::i;12366:751::-;;;;;;;;;;-1:-1:-1;12366:751:97;;;;;:::i;:::-;;:::i;39757:437::-;;;;;;;;;;-1:-1:-1;39757:437:97;;;;;:::i;:::-;;:::i;2576:40::-;;;;;;;;;;-1:-1:-1;2576:40:97;;;;-1:-1:-1;;;2576:40:97;;;;;;5719:48;;;;;;;;;;-1:-1:-1;5719:48:97;;;;;:::i;:::-;;;;;;;;;;;;;;32029:1533;;;;;;;;;;-1:-1:-1;32029:1533:97;;;;;:::i;:::-;;:::i;37053:962::-;;;;;;;;;;-1:-1:-1;37053:962:97;;;;;:::i;:::-;;:::i;18560:270::-;;;;;;;;;;-1:-1:-1;18560:270:97;;;;;:::i;:::-;;:::i;4183:35::-;;;;;;;;;;-1:-1:-1;4183:35:97;;;;-1:-1:-1;;;;;4183:35:97;;;3470:37;;;;;;;;;;-1:-1:-1;3470:37:97;;;;-1:-1:-1;;;3470:37:97;;;;;;22089:412;;;;;;;;;;-1:-1:-1;22089:412:97;;;;;:::i;:::-;;:::i;3927:153:72:-;;;;;;;;;;-1:-1:-1;3927:153:72;;;;;:::i;:::-;;:::i;4889:61:97:-;;;;;;;;;;-1:-1:-1;4889:61:97;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4889:61:97;;;35744:1148;;;;;;;;;;-1:-1:-1;35744:1148:97;;;;;:::i;:::-;;:::i;:::-;;;;27435:25:142;;;27491:2;27476:18;;27469:34;;;;27519:18;;;27512:34;;;;27577:2;27562:18;;27555:34;27620:3;27605:19;;27598:35;27664:3;27649:19;;27642:35;27422:3;27407:19;35744:1148:97;27148:535:142;29190:124:97;;;;;;;;;;-1:-1:-1;29190:124:97;;;;;:::i;:::-;;:::i;10254:216::-;;;;;;;;;;-1:-1:-1;10254:216:97;;;;;:::i;:::-;;:::i;14173:357::-;;;;;;;;;;-1:-1:-1;14173:357:97;;;;;:::i;:::-;;:::i;1929:47::-;;;;;;;;;;-1:-1:-1;1929:47:97;;;;;;;;;;;38959:195;39077:4;39100:47;39135:11;39100:34;:47::i;:::-;39093:54;38959:195;-1:-1:-1;;38959:195:97:o;3496:154:72:-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:72;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:72;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;735:10:81;3393:8:72;:35::i;:::-;3322:113;;:::o;27966:115:97:-;28024:4;28047:27;28055:6;28063:10;28047:7;:27::i;40770:528::-;40872:40;40928:20;40951;40961:9;40951;:20::i;:::-;40928:43;;40985:12;41001:1;40985:17;40981:71;;-1:-1:-1;;41025:16:97;;;41039:1;41025:16;;;;;;;;;41018:23;-1:-1:-1;40770:528:97:o;40981:71::-;41061:9;41124:12;-1:-1:-1;;;;;41110:27:97;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41110:27:97;;41084:53;;41147:145;41158:12;41154:1;:16;41147:145;;;41217:33;41237:9;41248:1;41217:19;:33::i;:::-;41188:23;41212:1;41188:26;;;;;;;;:::i;:::-;;;;;;;;;;:62;41276:3;;41147:145;;;40918:380;;40770:528;;;:::o;9162:371::-;9263:12;:10;:12::i;:::-;9301;;-1:-1:-1;;;;;9301:12:97;9293:35;:67;;;;-1:-1:-1;9340:5:97;;-1:-1:-1;;;;;9340:5:97;9332:28;9293:67;:103;;;;-1:-1:-1;9372:9:97;;-1:-1:-1;;;;;9372:9:97;9364:32;9293:103;9285:112;;;;;;9407:12;:43;;-1:-1:-1;;;;;9407:43:97;;;-1:-1:-1;;;;;;9407:43:97;;;;;;;9460:5;:22;;;;;;;;;;;;;;;9492:9;:34;;;;;;;;;;;9162:371::o;22915:409::-;23042:17;23071:20;23084:6;23071:12;:20::i;:::-;23101:14;23128:13;;;:5;:13;;;;;;;;;23171:16;;-1:-1:-1;;;23171:16:97;;;;-1:-1:-1;;;;;23128:13:97;;;;23101:14;23128:13;;23171:14;;:16;;;;;23128:13;23171:16;;;;;23128:13;23171:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23209:35;;-1:-1:-1;;;23209:35:97;;-1:-1:-1;;;;;7266:32:142;;;23209:35:97;;;7248:51:142;7315:18;;;7308:34;;;23152:35:97;;-1:-1:-1;23209:14:97;;;;;;7221:18:142;;23209:35:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23197:47;;23259:58;23269:6;23277:2;23289:9;23301:15;23259:58;;;;;;;;;:::i;:::-;;;;;;;;23061:263;;22915:409;;;;;:::o;4142:578:72:-;-1:-1:-1;;;;;4236:16:72;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:72;;4305:1;4275:33;;;2000:51:142;1973:18;;4275:33:72;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;735:10:81;4561:7:72;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:72;:13;-1:-1:-1;;;;;4609:21:72;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:72;;-1:-1:-1;;;;;29623:32:142;;;4653:50:72;;;29605:51:142;29672:18;;;29665:34;;;29735:32;;29715:18;;;29708:60;29578:18;;4653:50:72;29403:371:142;4605:109:72;4222:498;4142:578;;;:::o;13211:816:97:-;13456:12;:10;:12::i;:::-;1363:6;13581:27;13549:29;13482:64;13516:30;13482:31;:64;:::i;:::-;:96;;;;:::i;:::-;:126;;;;:::i;:::-;:141;;;13478:194;;13646:15;;-1:-1:-1;;;13646:15:97;;;;;;;;;;;13478:194;13700:45;13714:31;1363:6;13700:45;:::i;:::-;13681:16;:64;;-1:-1:-1;;;;13755:57:97;-1:-1:-1;;;13681:64:97;;;;;-1:-1:-1;;;;13755:57:97;;-1:-1:-1;;;13755:57:97;;;;;;;;;;;-1:-1:-1;;;;13894:60:97;-1:-1:-1;;;13822:62:97;;;;;;;-1:-1:-1;;;;13894:60:97;;;;;-1:-1:-1;;;13894:60:97;;;;;;;;;;;-1:-1:-1;;;;13964:56:97;-1:-1:-1;;;13964:56:97;;;;;;;;13211:816::o;19166:852::-;19306:32;19355:33;19369:6;19377:10;19355:13;:33::i;:::-;19350:86;;19411:14;;-1:-1:-1;;;19411:14:97;;;;;;;;;;;19350:86;19445:14;19472:13;;;:5;:13;;;;;;;;;19515:16;;-1:-1:-1;;;19515:16:97;;;;-1:-1:-1;;;;;19472:13:97;;;;19445:14;19472:13;;19515:14;;:16;;;;;19472:13;19515:16;;;;;19472:13;19515:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19496:35;-1:-1:-1;19541:116:97;-1:-1:-1;;;;;19541:26:97;;19581:10;19613:4;19632:15;19541:26;:116::i;:::-;19667:54;-1:-1:-1;;;;;19667:22:97;;19698:4;19705:15;19667:22;:54::i;:::-;19758:80;;-1:-1:-1;;;19758:80:97;;;;;20430:25:142;;;20471:18;;;20464:34;;;-1:-1:-1;;;;;19758:13:97;;;;;20403:18:142;;19758:80:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19853:158;;;30493:25:142;;;-1:-1:-1;;;;;30554:32:142;;;30549:2;30534:18;;30527:60;30623:32;;30603:18;;;30596:60;;;;30687:2;30672:18;;30665:34;;;30730:3;30715:19;;30708:35;;;19731:107:97;;-1:-1:-1;19853:158:97;;30480:3:142;30465:19;19853:158:97;30234:515:142;33817:275:97;33926:16;33944:21;33988:27;34007:7;33988:18;:27::i;:::-;34054:16;;33977:38;;-1:-1:-1;1363:6:97;;34042:28;;-1:-1:-1;;;34054:16:97;;34041:44;34054:16;34042:9;:28;:::i;:::-;34041:44;;;;:::i;:::-;34025:60;;33817:275;;;;;:::o;1736:255:75:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1895:36;;-1:-1:-1;;;1895:36:75;;-1:-1:-1;;;;;7266:32:142;;1895:36:75;;;7248:51:142;7315:18;;;7308:34;;;7221:18;;1895:36:75;7074:274:142;1843:99:75;-1:-1:-1;;;;;;1958:19:75;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1736:255::o;41391:199:97:-;41543:12;;:40;;-1:-1:-1;;;41543:40:97;;41477:47;;-1:-1:-1;;;;;41543:12:97;;:30;;:40;;41574:8;;41543:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;41543:40:97;;;;;;;;;;;;:::i;20223:610::-;20316:33;20330:6;20338:10;20316:13;:33::i;:::-;20311:86;;20372:14;;-1:-1:-1;;;20372:14:97;;;;;;;;;;;20311:86;20406:14;20433:13;;;:5;:13;;;;;;;;;20477:17;;-1:-1:-1;;;20477:17:97;;;;-1:-1:-1;;;;;20433:13:97;;;;20406:14;20433:13;;20477:15;;:17;;;;;20433:13;20477:17;;;;;20433:13;20477:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20457:37;-1:-1:-1;20504:72:97;-1:-1:-1;;;;;20504:27:97;;20532:10;20552:4;20559:16;20504:27;:72::i;:::-;20586:56;-1:-1:-1;;;;;20586:23:97;;20618:4;20625:16;20586:23;:56::i;:::-;20652:31;;-1:-1:-1;;;20652:31:97;;;;;3659:25:142;;;-1:-1:-1;;;;;20652:13:97;;;;;3632:18:142;;20652:31:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20698:128;20720:6;20748:4;20775:10;20800:16;20698:128;;;;;;;;;:::i;:::-;;;;;;;;20301:532;;20223:610;;:::o;15622:337::-;15785:7;15811:141;15831:10;15855;15879:9;15902:10;15926:16;15811:6;:141::i;:::-;15804:148;15622:337;-1:-1:-1;;;;;15622:337:97:o;4786:132:72:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2236:226:75:-;2302:7;2334:13;2140:10;:17;;2062:102;2334:13;2325:5;:22;2321:101;;2370:41;;-1:-1:-1;;;2370:41:75;;2401:1;2370:41;;;7248:51:142;7315:18;;;7308:34;;;7221:18;;2370:41:75;7074:274:142;2321:101:75;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;2431:24;;2236:226;;;:::o;15090:177:97:-;15188:12;:10;:12::i;:::-;15210:29;;;;;;;;;:17;:29;;;;;:50;;-1:-1:-1;;15210:50:97;;;;;;;;;;15090:177::o;16276:724::-;16489:29;;;16459:14;16489:29;;;:17;:29;;;;;;;;16485:84;;;16541:17;;-1:-1:-1;;;16541:17:97;;;;;;;;;;;16485:84;16587:46;16595:2;16599:10;16611:9;16622:10;16587:7;:46::i;:::-;16578:55;;16647:16;16667:1;16647:21;16643:351;;16710:9;;-1:-1:-1;;;;;16710:9:97;16688:10;:32;16684:92;;16747:14;;-1:-1:-1;;;16747:14:97;;;;;;;;;;;16684:92;16643:351;;;16806:80;16832:6;16856:16;16806:8;:80::i;:::-;-1:-1:-1;16943:25:97;;1363:6;;16924:44;;16923:60;16943:25;16924:16;:44;:::i;:::-;16923:60;;;;:::i;:::-;16900:20;;;;:12;:20;;;;;:83;16276:724;;;;;;;:::o;39308:236::-;39387:16;39426:23;;;:15;:23;;;;;;-1:-1:-1;;;;;39426:23:97;;39459:79;;39512:15;39520:6;39512:7;:15::i;39459:79::-;39308:236;;;:::o;18056:223::-;18166:20;18179:6;18166:12;:20::i;:::-;18196:27;;;;:19;:27;;;;;18254:18;;18224:15;18216:6;18224:7;:15::i;:::-;-1:-1:-1;;;;;18196:44:97;;;;;;;;;;;;;;;;;-1:-1:-1;18196:44:97;;;:55;;;;;;;;;;;;;:76;;-1:-1:-1;;18196:76:97;;;;;;;;;;;-1:-1:-1;;18056:223:97:o;25820:1997::-;25999:16;26007:7;25999;:16::i;:::-;-1:-1:-1;;;;;25979:36:97;:16;25987:7;25979;:16::i;:::-;-1:-1:-1;;;;;25979:36:97;;25975:98;;26038:24;;-1:-1:-1;;;26038:24:97;;;;;;;;;;;25975:98;26082:21;26095:7;26082:12;:21::i;:::-;26113:15;26141:14;;;:5;:14;;;;;;;;;26194;;;;;;;;26262:18;;-1:-1:-1;;;26262:18:97;;;;-1:-1:-1;;;;;26141:14:97;;;;26194;;;;;;26262:16;;:18;;;;;26141:14;26262:18;;;;;26194:14;26262:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26223:58:97;26231:5;-1:-1:-1;;;;;26231:16:97;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26223:58:97;;;:118;;;;26323:5;-1:-1:-1;;;;;26323:15:97;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26285:56:97;26293:5;-1:-1:-1;;;;;26293:15:97;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26285:56:97;;;26223:118;26219:173;;;26364:17;;-1:-1:-1;;;26364:17:97;;;;;;;;;;;26219:173;26403:24;26429:14;26447:5;-1:-1:-1;;;;;26447:21:97;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26402:68;;;;26480:83;26523:5;26539:4;26546:16;26480:5;-1:-1:-1;;;;;26480:15:97;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26480:34:97;;:83;;:34;:83::i;:::-;26574:24;26600:14;26618:5;-1:-1:-1;;;;;26618:21:97;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26573:68;;;;26651:83;26694:5;26710:4;26717:16;26651:5;-1:-1:-1;;;;;26651:15:97;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:83;26779:28;26810:35;26829:16;26810;:35;:::i;:::-;26779:66;-1:-1:-1;26855:23:97;26779:66;26913:25;26932:6;26913:16;:25;:::i;:::-;26883;26902:6;26883:16;:25;:::i;:::-;26882:57;;;;:::i;:::-;26881:82;;;;:::i;:::-;26855:108;-1:-1:-1;26973:27:97;27042:23;27055:10;27042;:23;:::i;:::-;27003:63;;27017:20;27004:10;:33;;;;;;:::i;:::-;27003:63;;;;:::i;:::-;26973:93;-1:-1:-1;27076:27:97;27106:42;26973:93;27106:20;:42;:::i;:::-;27076:72;-1:-1:-1;27163:23:97;;27159:167;;27202:113;27258:5;27282:19;27202:5;-1:-1:-1;;;;;27202:15:97;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27202:30:97;;:113;:30;:113::i;:::-;27335:58;;-1:-1:-1;;;27335:58:97;;;;;20430:25:142;;;20471:18;;;20464:34;;;-1:-1:-1;;;;;27335:20:97;;;;;20403:18:142;;27335:58:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27430:1;27408:19;:23;27404:167;;;27447:113;27503:5;27527:19;27447:5;-1:-1:-1;;;;;27447:15:97;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:113;27580:58;;-1:-1:-1;;;27580:58:97;;;;;20430:25:142;;;20471:18;;;20464:34;;;-1:-1:-1;;;;;27580:20:97;;;;;20403:18:142;;27580:58:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27654:156;27677:7;27698;27719:15;27748:19;27781;27654:156;;;;;;;;;43724:25:142;;;43780:2;43765:18;;43758:34;;;;43823:2;43808:18;;43801:34;;;;43866:2;43851:18;;43844:34;43909:3;43894:19;;43887:35;43711:3;43696:19;;43465:463;27654:156:97;;;;;;;;25965:1852;;;;;;;;;;25820:1997;;;;:::o;2184:118:72:-;2247:7;2273:22;2287:7;2273:13;:22::i;38097:101:97:-;38169:12;;:22;;;-1:-1:-1;;;38169:22:97;;;;38137:13;;-1:-1:-1;;;;;38169:12:97;;:20;;:22;;;;;:12;;:22;;;;;;;:12;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;38169:22:97;;;;;;;;;;;;:::i;:::-;38162:29;;38097:101;:::o;1919:208:72:-;1982:7;-1:-1:-1;;;;;2005:19:72;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:72;;2074:1;2047:30;;;2000:51:142;1973:18;;2047:30:72;1854:203:142;2001:87:72;-1:-1:-1;;;;;;2104:16:72;;;;;:9;:16;;;;;;;1919:208::o;10885:147:97:-;10972:12;:10;:12::i;:::-;-1:-1:-1;;;;;10994:17:97;;;;;;;:10;:17;;;;;:31;10885:147::o;31725:142::-;31802:7;31828:32;31841:6;31849:10;31828:12;:32::i;23509:335::-;23580:24;23606:23;23645:20;23658:6;23645:12;:20::i;:::-;23675:14;23702:13;;;:5;:13;;;;;;;23764:11;;-1:-1:-1;;;23764:11:97;;;;-1:-1:-1;;;;;23702:13:97;;;;;;23764:9;;:11;;;;;23702:13;;23764:11;;;;;;;;;23702:13;23764:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23790:47;;;44477:25:142;;;44533:2;44518:18;;44511:34;;;44561:18;;;44554:34;;;23726:49:97;;-1:-1:-1;23726:49:97;-1:-1:-1;23790:47:97;;44465:2:142;44450:18;23790:47:97;;;;;;;23635:209;23509:335;;;:::o;40394:208::-;40483:4;40525:10;-1:-1:-1;;;;;40506:29:97;:15;40514:6;40506:7;:15::i;:::-;-1:-1:-1;;;;;40506:29:97;;:89;;;-1:-1:-1;40539:27:97;;;;:19;:27;;;;;;40567:15;40559:6;40567:7;:15::i;:::-;-1:-1:-1;;;;;40539:44:97;;;;;;;;;;;;;;;;;-1:-1:-1;40539:44:97;;;:56;;;;;;;;;;;;40506:89;40499:96;40394:208;-1:-1:-1;;;40394:208:97:o;10604:147::-;10691:12;:10;:12::i;:::-;-1:-1:-1;;;;;10713:17:97;;;;;;;:10;:17;;;;;:31;10604:147::o;25149:283::-;25254:9;;-1:-1:-1;;;;;25254:9:97;;;25236:28;;;;25232:194;;25296:10;25280:27;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;25280:35:97;;;;;;;;;:53;;-1:-1:-1;;25280:53:97;25318:15;;25280:53;;;3322:113:72;;:::o;25232:194:97:-;25379:10;25363:27;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;25363:35:97;;;;;;;;;:52;;;;;-1:-1:-1;;25363:52:97;;;;;;25149:283;;:::o;3717:144:72:-;3802:52;735:10:81;3835:8:72;3845;3802:18;:52::i;14616:281:97:-;14698:12;:10;:12::i;:::-;14720:17;14757:16;-1:-1:-1;;;;;14740:45:97;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14797:27;;;;;;:15;:27;;;;;;;;:46;;-1:-1:-1;;;;;;14797:46:97;-1:-1:-1;;;;;14797:46:97;;;;;;;;;;;14853:17;:29;;;;;;:37;;-1:-1:-1;;14853:37:97;;;-1:-1:-1;14616:281:97:o;34303:874::-;34526:16;;;34540:1;34526:16;;;;;;;;;34446:26;;;;34526:16;;;;;;;;;-1:-1:-1;;34562:16:97;;;34576:1;34562:16;;;;;;;;;34514:28;;-1:-1:-1;34576:1:97;-1:-1:-1;34562:16:97;;;;;;;;;;-1:-1:-1;34562:16:97;34552:26;;34603:15;34611:6;34603:7;:15::i;:::-;34588:9;34598:1;34588:12;;;;;;;;:::i;:::-;;;;;;:30;-1:-1:-1;;;;;34588:30:97;;;-1:-1:-1;;;;;34588:30:97;;;;;34657:26;34676:6;34657:18;:26::i;:::-;34642:9;34652:1;34642:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;34642:41:97;;;:12;;;;;;;;;:41;34737:5;;;34728:55;;34778:5;;-1:-1:-1;;;;;34778:5:97;34728:55;;;34769:5;;-1:-1:-1;;;;;34769:5:97;34728:55;34713:9;34723:1;34713:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;34713:70:97;;;:12;;;;;;;;;:70;34819:5;;34804:12;;34819:5;;;34804:9;;34814:1;;34804:12;;;;;;:::i;:::-;-1:-1:-1;;;;;34804:20:97;;;:12;;;;;;;;;;;:20;34909:23;;1363:6;;;;34900:32;;-1:-1:-1;;;34909:23:97;;34843:33;34909:23;34900:6;:32;:::i;:::-;34899:48;;;;:::i;:::-;34886:7;34894:1;34886:10;;;;;;;;:::i;:::-;;;;;;;;;;:61;34980:29;;35013:11;;34971:38;;-1:-1:-1;;;34980:29:97;;;;34971:6;:38;:::i;:::-;34970:54;;;;:::i;:::-;34957:7;34965:1;34957:10;;;;;;;;:::i;:::-;;;;;;;;;;:67;35057:28;;35089:11;;35048:37;;-1:-1:-1;;;35057:28:97;;;;35048:6;:37;:::i;:::-;35047:53;;;;:::i;:::-;35034:7;35042:1;35034:10;;;;;;;;:::i;:::-;;;;;;:66;;;;;35159:7;35167:1;35159:10;;;;;;;;:::i;:::-;;;;;;;35146:7;35154:1;35146:10;;;;;;;;:::i;:::-;;;;;;;35133:7;35141:1;35133:10;;;;;;;;:::i;:::-;;;;;;;:23;;;;:::i;:::-;:36;;;;:::i;:::-;35123:47;;:6;:47;:::i;:::-;35110:7;35118:1;35110:10;;;;;;;;:::i;:::-;;;;;;:60;;;;;34504:673;34303:874;;;;;:::o;31460:103::-;31523:33;31533:10;31545:2;31549:6;31523:9;:33::i;11161:297::-;11262:12;:10;:12::i;:::-;1363:6;11288:41;;;;11284:104;;11352:25;;-1:-1:-1;;;11352:25:97;;;;;;;;;;;11284:104;11397:25;:54;;-1:-1:-1;;11397:54:97;;;;;;;;;;;;11161:297::o;28324:692::-;28399:14;28425:16;28444:9;28463:14;28490:13;;;:5;:13;;;;;;28425:28;;-1:-1:-1;;;;;;28490:13:97;28514:19;28490:13;28514;:19::i;:::-;28547:4;-1:-1:-1;;;;;28547:12:97;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28547:14:97;;;;;;;;-1:-1:-1;;28547:14:97;;;;;;;;;;;;:::i;:::-;;;28543:137;;28664:5;28652:17;;28543:137;;;28612:8;-1:-1:-1;28543:137:97;28693:9;28689:321;;;28718:22;28768:11;28755:9;28744:20;;:8;:20;:::i;:::-;28743:36;;;;:::i;:::-;28718:61;;28842:46;28856:6;28864:14;28880:7;28842:13;:46::i;:::-;28902:28;28923:6;28902:20;:28::i;:::-;28949:50;;;45324:25:142;;;28963:15:97;45380:2:142;45365:18;;45358:45;-1:-1:-1;;;;;45439:32:142;;45419:18;;;45412:60;45515:14;;45508:22;45503:2;45488:18;;45481:50;28949::97;;;;;;;45311:3:142;28949:50:97;;;28704:306;28689:321;28415:601;;28324:692;;;;:::o;42103:225::-;42203:12;42217:19;42248:12;:10;:12::i;:::-;42290:6;-1:-1:-1;;;;;42290:11:97;42309:5;42316:4;42290:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;42270:51:97;;;;-1:-1:-1;42103:225:97;-1:-1:-1;;;;42103:225:97:o;4984:233:72:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:81;5186:4:72;5192:2;5196:7;5205:4;5138:33;:72::i;41679:178:97:-;41813:12;;:37;;-1:-1:-1;;;41813:37:97;;41762:32;;-1:-1:-1;;;;;41813:12:97;;:27;;:37;;41841:8;;41813:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;41813:37:97;;;;;;;;;;;;:::i;29562:1178::-;29649:14;29675:16;29694:9;29713:14;29740:13;;;:5;:13;;;;;;29675:28;;-1:-1:-1;;;;;;29740:13:97;29764:19;29740:13;29764;:19::i;:::-;29797:30;;;29793:631;;29847:4;-1:-1:-1;;;;;29847:13:97;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29847:15:97;;;;;;;;-1:-1:-1;;29847:15:97;;;;;;;;;;;;:::i;:::-;;;29843:78;29793:631;29843:78;;;29893:4;29881:16;;29793:631;;;-1:-1:-1;;29941:31:97;;;;29937:487;;29992:4;-1:-1:-1;;;;;29992:14:97;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29992:16:97;;;;;;;;-1:-1:-1;;29992:16:97;;;;;;;;;;;;:::i;29937:487::-;-1:-1:-1;;30087:32:97;;;;30083:341;;30139:4;-1:-1:-1;;;;;30139:15:97;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30139:17:97;;;;;;;;-1:-1:-1;;30139:17:97;;;;;;;;;;;;:::i;30083:341::-;-1:-1:-1;;30235:33:97;;;;30231:193;;30288:4;-1:-1:-1;;;;;30288:16:97;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30288:18:97;;;;;;;;-1:-1:-1;;30288:18:97;;;;;;;;;;;;:::i;30231:193::-;30402:11;;-1:-1:-1;;;30402:11:97;;;;;;;;;;;30231:193;30437:9;30433:301;;;30462:22;30512:11;30499:9;30488:20;;:8;:20;:::i;:::-;30487:36;;;;:::i;:::-;30462:61;;30579:46;30593:6;30601:14;30617:7;30579:13;:46::i;:::-;30639:28;30660:6;30639:20;:28::i;:::-;30686:37;;;45324:25:142;;;45397:4;45385:17;;45380:2;45365:18;;45358:45;-1:-1:-1;;;;;45439:32:142;;45419:18;;;45412:60;45515:14;;45508:22;45503:2;45488:18;;45481:50;30686:37:97;;;;;;;45311:3:142;30686:37:97;;;30448:286;30433:301;29665:1075;;29562:1178;;;;;:::o;11551:739::-;11825:12;:10;:12::i;:::-;1363:6;11851:54;;;;11847:107;;11928:15;;-1:-1:-1;;;11928:15:97;;;;;;;;;;;11847:107;11963:38;:80;;-1:-1:-1;;12053:70:97;11963:80;;;;;;-1:-1:-1;;12053:70:97;;;;;;;;;;;;;;-1:-1:-1;;12217:66:97;-1:-1:-1;;;12133:74:97;;;;;;;-1:-1:-1;;12217:66:97;;;;;-1:-1:-1;;;12217:66:97;;;;;;;;;;;11551:739::o;38372:235::-;38501:17;38534:21;38548:6;38534:13;:21::i;:::-;-1:-1:-1;38571:12:97;;:29;;-1:-1:-1;;;38571:29:97;;;;;3659:25:142;;;-1:-1:-1;;;;;38571:12:97;;;;:21;;3632:18:142;;38571:29:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;38571:29:97;;;;;;;;;;;;:::i;12366:751::-;12610:12;:10;:12::i;:::-;1363:6;12728:35;12696:29;12636:57;12666:27;12636;:57;:::i;:::-;:89;;;;:::i;:::-;:127;;;;:::i;:::-;:142;;;12632:195;;12801:15;;-1:-1:-1;;;12801:15:97;;;;;;;;;;;12632:195;12836:26;:56;;-1:-1:-1;;;;12902:56:97;-1:-1:-1;;;12836:56:97;;;;;-1:-1:-1;;;;12902:56:97;;-1:-1:-1;;;12902:56:97;;;;;;;;;;;-1:-1:-1;;;;13038:72:97;-1:-1:-1;;;12968:60:97;;;;;;;-1:-1:-1;;;;13038:72:97;;;;;-1:-1:-1;;;13038:72:97;;;;;;;;;;;12366:751::o;39757:437::-;39840:4;39882:1;39860:19;39870:8;39860:9;:19::i;:::-;:23;39856:332;;;39921:9;;-1:-1:-1;;;;;39921:9:97;;;39903:28;;;;39899:236;;39971:6;-1:-1:-1;;;;;39959:18:97;:8;-1:-1:-1;;;;;39959:18:97;;:56;;;-1:-1:-1;;;;;;39982:25:97;;;;;;;:15;:25;;;;;;;;:33;;;;;;;;;;;;39981:34;39959:56;39951:65;;;;39899:236;40075:6;-1:-1:-1;;;;;40063:18:97;:8;-1:-1:-1;;;;;40063:18:97;;:55;;;-1:-1:-1;;;;;;;40085:25:97;;;;;;;:15;:25;;;;;;;;:33;;;;;;;;;;;;40055:64;;39856:332;-1:-1:-1;40172:5:97;40165:12;;32029:1533;32126:24;32176:25;32249:22;32285:20;32319:18;32394:23;32496:30;32519:6;32496:22;:30::i;:::-;32536:14;32563:13;;;:5;:13;;;;;;;;;32607:20;;-1:-1:-1;;;32607:20:97;;;;32162:364;;-1:-1:-1;32162:364:97;;-1:-1:-1;32162:364:97;;-1:-1:-1;32162:364:97;;-1:-1:-1;32162:364:97;;-1:-1:-1;;;;;;32563:13:97;;;;;;32607:18;;:20;;;;;-1:-1:-1;32563:13:97;;32607:20;;;;;;32563:13;32607:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32587:40;-1:-1:-1;32637:71:97;-1:-1:-1;;;;;32637:27:97;;32665:10;32685:4;32692:15;32637:27;:71::i;:::-;32727:26;32756;32775:6;32756:18;:26::i;:::-;32727:55;;32818:2;32792:15;:23;32808:6;32792:23;;;;;;;;;;;;:28;;;;;-1:-1:-1;;;;;32792:28:97;;;;;-1:-1:-1;;;;;32792:28:97;;;;;;32853:15;32830:12;:20;32843:6;32830:20;;;;;;;;;;;:38;;;;32903:1;32883:17;:21;32879:165;;;32920:62;-1:-1:-1;;;;;32920:23:97;;32944:18;32964:17;32920:23;:62::i;:::-;32996:37;33016:17;32996:37;;:::i;:::-;;;32879:165;33057:18;;33053:153;;33091:56;33115:15;33123:6;33115:7;:15::i;:::-;-1:-1:-1;;;;;33091:23:97;;;33132:14;33091:23;:56::i;:::-;33161:34;33181:14;33161:34;;:::i;:::-;;;33053:153;33219:16;;33215:146;;33283:5;;33251:53;;-1:-1:-1;;;;;33251:23:97;;;;33283:5;33291:12;33251:23;:53::i;:::-;33318:32;33338:12;33318:32;;:::i;:::-;;;33215:146;33374:14;;33370:131;;33428:5;;33404:42;;-1:-1:-1;;;;;33404:23:97;;;;33428:5;33435:10;33404:23;:42::i;:::-;33460:30;33480:10;33460:30;;:::i;:::-;;;33370:131;33515:40;;;47137:25:142;;;-1:-1:-1;;;;;47198:32:142;;47193:2;47178:18;;47171:60;47247:18;;;47240:34;;;33515:40:97;;47125:2:142;47110:18;33515:40:97;;;;;;;32152:1410;;;;;;;;32029:1533;;;;:::o;37053:962::-;37305:16;;;37319:1;37305:16;;;;;;;;;37227:23;;;;37305:16;;;;;;;;;-1:-1:-1;;37345:16:97;;;37359:1;37345:16;;;;;;;;;37296:25;;-1:-1:-1;37359:1:97;-1:-1:-1;37345:16:97;;;;;;;;;;-1:-1:-1;;37331:30:97;-1:-1:-1;1363:6:97;37425:15;37433:6;37425:7;:15::i;:::-;37413:6;37420:1;37413:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;37413:27:97;;;:9;;;;;;;;;:27;37483:5;;;37475:53;;37523:5;;-1:-1:-1;;;;;37523:5:97;37475:53;;;37514:5;;-1:-1:-1;;;;;37514:5:97;37475:53;37463:6;37470:1;37463:9;;;;;;;;:::i;:::-;;;;;;:65;-1:-1:-1;;;;;37463:65:97;;;-1:-1:-1;;;;;37463:65:97;;;;;37559:26;37578:6;37559:18;:26::i;:::-;37547:6;37554:1;37547:9;;;;;;;;:::i;:::-;;;;;;:38;-1:-1:-1;;;;;37547:38:97;;;-1:-1:-1;;;;;37547:38:97;;;;;37627:7;37615:6;37622:1;37615:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;37615:19:97;;;:9;;;;;;;;;;;:19;37691:28;;37673:61;;;;;37674:45;;-1:-1:-1;;;37691:28:97;;;;37674:14;:45;:::i;:::-;37673:61;;;;:::i;:::-;37656:11;37668:1;37656:14;;;;;;;;:::i;:::-;;;;;;;;;;:78;37779:26;;37761:59;;;;;37762:43;;-1:-1:-1;;;37779:26:97;;;;37762:14;:43;:::i;:::-;37761:59;;;;:::i;:::-;37744:11;37756:1;37744:14;;;;;;;;:::i;:::-;;;;;;;;;;:76;37865:34;;37847:67;;;;;37848:51;;-1:-1:-1;;;37865:34:97;;;;37848:14;:51;:::i;:::-;37847:67;;;;:::i;:::-;37830:11;37842:1;37830:14;;;;;;;;:::i;:::-;;;;;;:84;;;;;37993:11;38005:1;37993:14;;;;;;;;:::i;:::-;;;;;;;37976:11;37988:1;37976:14;;;;;;;;:::i;:::-;;;;;;;37959:11;37971:1;37959:14;;;;;;;;:::i;:::-;;;;;;;:31;;;;:::i;:::-;:48;;;;:::i;:::-;37941:67;;:14;:67;:::i;:::-;37924:11;37936:1;37924:14;;;;;;;;:::i;:::-;;;;;;:84;;;;;37286:729;37053:962;;;;;;:::o;18560:270::-;18668:7;18692:33;18706:6;18714:10;18692:13;:33::i;:::-;18687:86;;18748:14;;-1:-1:-1;;;18748:14:97;;;;;;;;;;;18687:86;18789:34;18798:6;18806:16;18789:8;:34::i;22089:412::-;22216:17;22245:20;22258:6;22245:12;:20::i;:::-;22275:14;22302:13;;;:5;:13;;;;;;;;;22346:17;;-1:-1:-1;;;22346:17:97;;;;-1:-1:-1;;;;;22302:13:97;;;;22275:14;22302:13;;22346:15;;:17;;;;;22302:13;22346:17;;;;;22302:13;22346:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22385:35;;-1:-1:-1;;;22385:35:97;;-1:-1:-1;;;;;7266:32:142;;;22385:35:97;;;7248:51:142;7315:18;;;7308:34;;;22326:37:97;;-1:-1:-1;22385:13:97;;;;;;7221:18:142;;22385:35:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22373:47;;22435:59;22444:6;22452:2;22464:10;22477:16;22435:59;;;;;;;;;:::i;3927:153:72:-;-1:-1:-1;;;;;4038:25:72;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;35744:1148:97:-;35864:25;36114:20;;;:12;:20;;;;;;35864:25;;;;;;;;;;1363:6;36192:17;;36188:698;;36262:38;;36304:12;;36246:54;;36262:38;;;;;36246:13;:54;:::i;:::-;36245:71;;;;:::i;:::-;36364:35;;36225:91;;-1:-1:-1;36403:12:97;;36348:51;;-1:-1:-1;;;36364:35:97;;;;36348:13;:51;:::i;:::-;36347:68;;;;:::i;:::-;36461:33;;36330:85;;-1:-1:-1;36498:12:97;;36445:49;;36461:33;;;;;36445:13;:49;:::i;:::-;36444:66;;;;:::i;:::-;36554:31;;36429:81;;-1:-1:-1;36589:12:97;;36538:47;;-1:-1:-1;;;36554:31:97;;;;36538:13;:47;:::i;:::-;36537:64;;;;:::i;:::-;36524:77;;36633:13;36615:31;;36730:10;36715:12;36698:14;36678:17;:34;;;;:::i;:::-;:49;;;;:::i;:::-;:62;;;;:::i;:::-;36660:80;;36188:698;;;36835:25;;;36799:13;;;:5;:13;;;;;;;;;;36789:43;;-1:-1:-1;;;36789:43:97;;;;36863:12;;36835:25;;;-1:-1:-1;;;;;36799:13:97;;;;36789:41;;:43;;;;;;;;;;;36799:13;36789:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:71;;;;:::i;:::-;:86;;;;:::i;:::-;36771:104;;36188:698;36080:812;;35744:1148;;;;;;;:::o;29190:124::-;29251:4;29274:33;29284:6;29292:2;29296:10;29274:9;:33::i;10254:216::-;10330:12;:10;:12::i;:::-;10352;:43;;-1:-1:-1;;;;;;10352:43:97;-1:-1:-1;;;;;10352:43:97;;;;;;;;10421:23;;;-1:-1:-1;;;10421:23:97;;;;10457:4;;10352:43;10421:21;;:23;;;;;;;;;;;;;;10352:43;10421:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10413:49:97;;10405:58;;;;;;10254:216;:::o;14173:357::-;14281:5;;-1:-1:-1;;;;;14281:5:97;14266:10;14258:28;14254:270;;14302:12;:23;;-1:-1:-1;;;;;14302:23:97;;-1:-1:-1;;;;;;14302:23:97;;;;;;10254:216;:::o;14254:270::-;14369:12;;-1:-1:-1;;;;;14369:12:97;14354:10;14346:35;14342:182;;14405:12;;;14397:5;:20;;-1:-1:-1;;;;;;14397:20:97;;;-1:-1:-1;;;;;14405:12:97;;14397:20;;;;14431:34;;;10254:216;:::o;14342:182::-;14503:10;;-1:-1:-1;;;14503:10:97;;;;;;;;;;;1435:222:75;1537:4;-1:-1:-1;;;;;;1560:50:75;;-1:-1:-1;;;1560:50:75;;:90;;;1614:36;1638:11;1614:23;:36::i;16212:241:72:-;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:72;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:72;;;;;3659:25:142;;;3632:18;;16383:31:72;3513:177:142;14492:120:72;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;9587:118:97:-;9650:5;;-1:-1:-1;;;;;9650:5:97;9636:10;:19;9632:67;;9678:10;;-1:-1:-1;;;9678:10:97;;;;;;;;;;;9632:67;9587:118::o;9978:146::-;10057:15;10065:6;10057:7;:15::i;:::-;-1:-1:-1;;;;;10043:29:97;:10;-1:-1:-1;;;;;10043:29:97;;10039:79;;10095:12;;-1:-1:-1;;;10095:12:97;;;;;;;;;;;2518:625:75;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;-1:-1:-1;;;;;;2703:27:75;;2699:210;;2746:40;2778:7;3949:10;:17;;3922:24;;;;:15;:24;;;;;:44;;;3976:24;;;;;;;;;;;;3846:161;2746:40;2699:210;;;2824:2;-1:-1:-1;;;;;2807:19:75;:13;-1:-1:-1;;;;;2807:19:75;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;-1:-1:-1;;;;;2922:16:75;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;-1:-1:-1;;;;;3020:19:75;:13;-1:-1:-1;;;;;3020:19:75;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3123:13;2518:625;-1:-1:-1;;;;2518:625:75:o;1618:188:71:-;1745:53;;-1:-1:-1;;;;;47780:32:142;;;1745:53:71;;;47762:51:142;47849:32;;;47829:18;;;47822:60;47898:18;;;47891:34;;;1718:81:71;;1738:5;;1760:18;;;;;47735::142;;1745:53:71;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1745:53:71;;;;;;;;;;;1718:19;:81::i;4400:380::-;4515:47;;;-1:-1:-1;;;;;7266:32:142;;4515:47:71;;;7248:51:142;7315:18;;;;7308:34;;;4515:47:71;;;;;;;;;;7221:18:142;;;;4515:47:71;;;;;;;;-1:-1:-1;;;;;4515:47:71;-1:-1:-1;;;4515:47:71;;;4578:44;4530:13;4515:47;4578:23;:44::i;:::-;4573:201;;4665:43;;-1:-1:-1;;;;;7266:32:142;;;4665:43:71;;;7248:51:142;4705:1:71;7315:18:142;;;7308:34;4638:71:71;;4658:5;;4680:13;;;;;7221:18:142;;4665:43:71;7074:274:142;4638:71:71;4723:40;4743:5;4750:12;4723:19;:40::i;17228:594:97:-;17406:10;;17458:27;;;17371:14;17458:27;;;:15;:27;;;;;;;17441:129;;-1:-1:-1;;;17441:129:97;;;;;48425:25:142;;;-1:-1:-1;;;;;48486:32:142;;;48466:18;;;48459:60;48555:32;;;48535:18;;;48528:60;17458:27:97;;;;17441:52;;48398:18:142;;17441:129:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17580:14;;;;:6;:14;;;;;;;;:27;;-1:-1:-1;;;;;;17580:27:97;;;17597:10;17580:27;;;;17617:5;:13;;;;;:20;;-1:-1:-1;;;;;17617:20:97;;;;;;;;17647:13;;:7;:13;;;;;:22;;;17426:144;-1:-1:-1;17679:17:97;17685:2;17587:6;17679:5;:17::i;:::-;17706:10;:12;;;:10;:12;;;:::i;:::-;;;;-1:-1:-1;;17734:81:97;;;48425:25:142;;;-1:-1:-1;;;;;48486:32:142;;;48481:2;48466:18;;48459:60;48555:32;;48535:18;;;48528:60;17734:81:97;;;;;;;48413:2:142;17734:81:97;;;17387:435;17228:594;;;;;;:::o;20921:753::-;21021:23;21083:13;;;:5;:13;;;;;;;;;21127:17;;-1:-1:-1;;;21127:17:97;;;;-1:-1:-1;;;;;21083:13:97;;;;21021:23;;21083:13;;21127:15;;:17;;;;;21083:13;;21127:17;;;;;;21083:13;21127:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21107:37;;21154:55;21179:10;21192:16;21154;:55::i;:::-;21219;21244:10;21257:16;21219;:55::i;:::-;21284:118;-1:-1:-1;;;;;21284:27:97;;21325:10;21357:4;21376:16;21284:27;:118::i;:::-;21412:56;-1:-1:-1;;;;;21412:23:97;;21444:4;21451:16;21412:23;:56::i;:::-;21496:30;;-1:-1:-1;;;21496:30:97;;;;;3659:25:142;;;-1:-1:-1;;;;;21496:12:97;;;;;3632:18:142;;21496:30:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21478:48;;21541:126;21562:6;21590:4;21617:10;21642:15;21541:126;;;;;;;;;:::i;:::-;;;;;;;;21046:628;;20921:753;;;;:::o;9759:154::-;9825:38;9835:15;9843:6;9835:7;:15::i;:::-;9852:10;9825:9;:38::i;:::-;9820:87;;9886:10;;-1:-1:-1;;;9886:10:97;;;;;;;;;;;15665:312:72;-1:-1:-1;;;;;15772:22:72;;15768:91;;15817:31;;-1:-1:-1;;;15817:31:72;;-1:-1:-1;;;;;2018:32:142;;15817:31:72;;;2000:51:142;1973:18;;15817:31:72;1854:203:142;15768:91:72;-1:-1:-1;;;;;15868:25:72;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15868:46:72;;;;;;;;;;15929:41;;750::142;;;15929::72;;723:18:142;15929:41:72;;;;;;;15665:312;;;:::o;12061:460::-;-1:-1:-1;;;;;12146:16:72;;12142:87;;12185:33;;-1:-1:-1;;;12185:33:72;;12215:1;12185:33;;;2000:51:142;1973:18;;12185:33:72;1854:203:142;12142:87:72;12238:21;12262:32;12270:2;12274:7;12291:1;12262:7;:32::i;:::-;12238:56;-1:-1:-1;;;;;;12308:27:72;;12304:211;;12358:31;;-1:-1:-1;;;12358:31:72;;;;;3659:25:142;;;3632:18;;12358:31:72;3513:177:142;12304:211:72;12427:4;-1:-1:-1;;;;;12410:21:72;:13;-1:-1:-1;;;;;12410:21:72;;12406:109;;12454:50;;-1:-1:-1;;;12454:50:72;;-1:-1:-1;;;;;29623:32:142;;;12454:50:72;;;29605:51:142;29672:18;;;29665:34;;;29735:32;;29715:18;;;29708:60;29578:18;;12454:50:72;29403:371:142;24535:145:97;24601:4;-1:-1:-1;;;;;24601:21:97;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24628:1;24601:28;24597:77;;24652:11;;-1:-1:-1;;;24652:11:97;;;;;;;;;;;30782:299;30882:23;30907:28;30939:94;30968:6;30988:14;31016:7;30939:15;:94::i;:::-;31043:5;;:31;;-1:-1:-1;;;31043:31:97;;30881:152;;-1:-1:-1;30881:152:97;;-1:-1:-1;;;;;;31043:5:97;;:10;;:31;;30881:152;;;;31043:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;30871:210;;30782:299;;;:::o;31130:167::-;31221:9;;-1:-1:-1;;;;;31221:9:97;31199:10;:32;31195:96;;31279:1;31247:11;:28;31259:15;31267:6;31259:7;:15::i;:::-;-1:-1:-1;;;;;31247:28:97;-1:-1:-1;;;;;31247:28:97;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;31130:167:97;:::o;985:924:78:-;-1:-1:-1;;;;;1165:14:78;;;:18;1161:742;;1203:67;;-1:-1:-1;;;1203:67:78;;-1:-1:-1;;;;;1203:36:78;;;;;:67;;1240:8;;1250:4;;1256:7;;1265:4;;1203:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:67:78;;;;;;;;-1:-1:-1;;1203:67:78;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:6;:13;1577:1;1560:18;1556:323;;1664:39;;-1:-1:-1;;;1664:39:78;;-1:-1:-1;;;;;2018:32:142;;1664:39:78;;;2000:51:142;1973:18;;1664:39:78;1854:203:142;1556:323:78;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;-1:-1:-1;;;;;;1317:51:78;;-1:-1:-1;;;1317:51:78;1313:182;;1437:39;;-1:-1:-1;;;1437:39:78;;-1:-1:-1;;;;;2018:32:142;;1437:39:78;;;2000:51:142;1973:18;;1437:39:78;1854:203:142;1199:694:78;985:924;;;;;:::o;1219:160:71:-;1328:43;;-1:-1:-1;;;;;7266:32:142;;;1328:43:71;;;7248:51:142;7315:18;;;7308:34;;;1301:71:71;;1321:5;;1343:14;;;;;7221:18:142;;1328:43:71;7074:274:142;1560:300:72;1662:4;-1:-1:-1;;;;;;1697:40:72;;-1:-1:-1;;;1697:40:72;;:104;;-1:-1:-1;;;;;;;1753:48:72;;-1:-1:-1;;;1753:48:72;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:86;;;1817:36:72;763:146:86;14794:662:72;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:72;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:72;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:72;:5;-1:-1:-1;;;;;15189:13:72;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:72;;-1:-1:-1;;;;;2018:32:142;;15263:27:72;;;2000:51:142;1973:18;;15263:27:72;1854:203:142;15163:142:72;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:72;15366:5;-1:-1:-1;;;;;15357:28:72;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:72;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:72;-1:-1:-1;;;;;15420:29:72;;;;;;;;;;14794:662::o;8861:795::-;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:72;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:72;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:72;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:72;;;9180:256;-1:-1:-1;;;;;9450:16:72;;;9446:107;;-1:-1:-1;;;;;9510:13:72;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:72;-1:-1:-1;;;;;9563:21:72;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:72:o;4624:1055:75:-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4936:18;4957:26;;;:17;:26;;;;;;;;;-1:-1:-1;;;;;5058:18:75;;;;:12;:18;;;;;;4886:40;;-1:-1:-1;4957:26:75;5180:28;;;5176:325;;5224:19;5246:35;;;;;;;;;;;;5296:31;;;;;;:45;;;5413:30;;:17;:30;;;;;:43;;;5176:325;5594:26;;;;:17;:26;;;;;;;;5587:33;;;5637:35;;;;-1:-1:-1;5637:35:75;;5630:42;-1:-1:-1;4624:1055:75:o;5967:1061::-;6241:10;:17;6216:22;;6241:21;;6261:1;;6241:21;:::i;:::-;6272:18;6293:24;;;:15;:24;;;;;;6661:10;:26;;6216:46;;-1:-1:-1;6293:24:75;;6216:46;;6661:26;;;;;;:::i;:::-;;;;;;;;;6639:48;;6723:11;6698:10;6709;6698:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6802:28;;;:15;:28;;;;;;;:41;;;6971:24;;;;;6964:31;7005:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6038:990;;;5967:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;3565:16:75;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3609:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3437:214:75:o;7686:720:71:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;-1:-1:-1;;8232:1:71;8226:8;8182:16;;-1:-1:-1;8258:15:71;;:68;;8310:11;8325:1;8310:16;;8258:68;;;-1:-1:-1;;;;;8276:26:71;;;:31;8258:68;8254:146;;;8349:40;;-1:-1:-1;;;8349:40:71;;-1:-1:-1;;;;;2018:32:142;;8349:40:71;;;2000:51:142;1973:18;;8349:40:71;1854:203:142;8908:480:71;8991:4;9007:12;9029:18;9057:19;9191:4;9188:1;9181:4;9175:11;9168:4;9162;9158:15;9155:1;9148:5;9141;9136:60;9125:71;;9223:16;9209:30;;9273:1;9267:8;9252:23;;9301:7;:80;;;;-1:-1:-1;9313:15:71;;:67;;9364:11;9379:1;9364:16;9313:67;;;9360:1;9339:5;-1:-1:-1;;;;;9331:26:71;;:30;9313:67;9294:87;8908:480;-1:-1:-1;;;;;;8908:480:71:o;9978:327:72:-;-1:-1:-1;;;;;10045:16:72;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:72;;10114:1;10084:33;;;2000:51:142;1973:18;;10084:33:72;1854:203:142;10041:87:72;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:72;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:72;;10285:1;10257:31;;;2000:51:142;1973:18;;10257:31:72;1854:203:142;23885:198:97;-1:-1:-1;;;;;23997:22:97;;;;;;:10;:22;;;;;;23981:38;;23977:100;;;24042:24;;-1:-1:-1;;;24042:24:97;;;;;;;;;;;24229:225;-1:-1:-1;;;;;24325:22:97;;;;;;:10;:22;;;;;;:27;;;;:69;;-1:-1:-1;;;;;;24372:22:97;;;;;;:10;:22;;;;;;24356:38;;24325:69;24321:127;;;24417:20;;-1:-1:-1;;;24417:20:97;;;;;;;;;;;7105:368:72;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:72;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:72;;;;;3659:25:142;;;3632:18;;7321:31:72;3513:177:142;7271:186:72;7398:44;;-1:-1:-1;;;7398:44:72;;-1:-1:-1;;;;;7266:32:142;;7398:44:72;;;7248:51:142;7315:18;;;7308:34;;;7221:18;;7398:44:72;7074:274:142;6401:272:72;6504:4;-1:-1:-1;;;;;6539:21:72;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:72;:5;-1:-1:-1;;;;;6577:16:72;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;;6033:7:72;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:72;;;6633:32;;;;6520:146;-1:-1:-1;6401:272:72:o;224:131:142:-;-1:-1:-1;;;;;;298:32:142;;288:43;;278:71;;345:1;342;335:12;360:245;418:6;471:2;459:9;450:7;446:23;442:32;439:52;;;487:1;484;477:12;439:52;526:9;513:23;545:30;569:5;545:30;:::i;995:289::-;1037:3;1075:5;1069:12;1102:6;1097:3;1090:19;1158:6;1151:4;1144:5;1140:16;1133:4;1128:3;1124:14;1118:47;1210:1;1203:4;1194:6;1189:3;1185:16;1181:27;1174:38;1273:4;1266:2;1262:7;1257:2;1249:6;1245:15;1241:29;1236:3;1232:39;1228:50;1221:57;;;995:289;;;;:::o;1289:220::-;1438:2;1427:9;1420:21;1401:4;1458:45;1499:2;1488:9;1484:18;1476:6;1458:45;:::i;1514:226::-;1573:6;1626:2;1614:9;1605:7;1601:23;1597:32;1594:52;;;1642:1;1639;1632:12;1594:52;-1:-1:-1;1687:23:142;;1514:226;-1:-1:-1;1514:226:142:o;2062:131::-;-1:-1:-1;;;;;2137:31:142;;2127:42;;2117:70;;2183:1;2180;2173:12;2198:367;2266:6;2274;2327:2;2315:9;2306:7;2302:23;2298:32;2295:52;;;2343:1;2340;2333:12;2295:52;2382:9;2369:23;2401:31;2426:5;2401:31;:::i;:::-;2451:5;2529:2;2514:18;;;;2501:32;;-1:-1:-1;;;2198:367:142:o;2570:247::-;2629:6;2682:2;2670:9;2661:7;2657:23;2653:32;2650:52;;;2698:1;2695;2688:12;2650:52;2737:9;2724:23;2756:31;2781:5;2756:31;:::i;2822:420::-;2875:3;2913:5;2907:12;2940:6;2935:3;2928:19;2972:4;2967:3;2963:14;2956:21;;3011:4;3004:5;3000:16;3034:1;3044:173;3058:6;3055:1;3052:13;3044:173;;;3119:13;;3107:26;;3162:4;3153:14;;;;3190:17;;;;3080:1;3073:9;3044:173;;;-1:-1:-1;3233:3:142;;2822:420;-1:-1:-1;;;;2822:420:142:o;3247:261::-;3426:2;3415:9;3408:21;3389:4;3446:56;3498:2;3487:9;3483:18;3475:6;3446:56;:::i;3695:529::-;3772:6;3780;3788;3841:2;3829:9;3820:7;3816:23;3812:32;3809:52;;;3857:1;3854;3847:12;3809:52;3896:9;3883:23;3915:31;3940:5;3915:31;:::i;:::-;3965:5;-1:-1:-1;4022:2:142;4007:18;;3994:32;4035:33;3994:32;4035:33;:::i;:::-;4087:7;-1:-1:-1;4146:2:142;4131:18;;4118:32;4159:33;4118:32;4159:33;:::i;:::-;4211:7;4201:17;;;3695:529;;;;;:::o;4229:487::-;4306:6;4314;4322;4375:2;4363:9;4354:7;4350:23;4346:32;4343:52;;;4391:1;4388;4381:12;4343:52;4436:23;;;-1:-1:-1;4535:2:142;4520:18;;4507:32;4548:33;4507:32;4548:33;:::i;:::-;4229:487;;4600:7;;-1:-1:-1;;;4680:2:142;4665:18;;;;4652:32;;4229:487::o;4721:508::-;4798:6;4806;4814;4867:2;4855:9;4846:7;4842:23;4838:32;4835:52;;;4883:1;4880;4873:12;4835:52;4922:9;4909:23;4941:31;4966:5;4941:31;:::i;:::-;4991:5;-1:-1:-1;5048:2:142;5033:18;;5020:32;5061:33;5020:32;5061:33;:::i;5234:117::-;5319:6;5312:5;5308:18;5301:5;5298:29;5288:57;;5341:1;5338;5331:12;5356:663;5438:6;5446;5454;5462;5515:3;5503:9;5494:7;5490:23;5486:33;5483:53;;;5532:1;5529;5522:12;5483:53;5571:9;5558:23;5590:30;5614:5;5590:30;:::i;:::-;5639:5;-1:-1:-1;5696:2:142;5681:18;;5668:32;5709;5668;5709;:::i;:::-;5760:7;-1:-1:-1;5819:2:142;5804:18;;5791:32;5832;5791;5832;:::i;:::-;5883:7;-1:-1:-1;5942:2:142;5927:18;;5914:32;5955;5914;5955;:::i;:::-;5356:663;;;;-1:-1:-1;5356:663:142;;-1:-1:-1;;5356:663:142:o;6024:466::-;6101:6;6109;6117;6170:2;6158:9;6149:7;6145:23;6141:32;6138:52;;;6186:1;6183;6176:12;6138:52;-1:-1:-1;;6231:23:142;;;6351:2;6336:18;;6323:32;;-1:-1:-1;6454:2:142;6439:18;;;6426:32;;6024:466;-1:-1:-1;6024:466:142:o;6723:346::-;6791:6;6799;6852:2;6840:9;6831:7;6827:23;6823:32;6820:52;;;6868:1;6865;6858:12;6820:52;-1:-1:-1;;6913:23:142;;;7033:2;7018:18;;;7005:32;;-1:-1:-1;6723:346:142:o;7353:127::-;7414:10;7409:3;7405:20;7402:1;7395:31;7445:4;7442:1;7435:15;7469:4;7466:1;7459:15;7485:255;7557:2;7551:9;7599:6;7587:19;;-1:-1:-1;;;;;7621:34:142;;7657:22;;;7618:62;7615:88;;;7683:18;;:::i;:::-;7719:2;7712:22;7485:255;:::o;7745:253::-;7817:2;7811:9;7859:4;7847:17;;-1:-1:-1;;;;;7879:34:142;;7915:22;;;7876:62;7873:88;;;7941:18;;:::i;8003:255::-;8075:2;8069:9;8117:6;8105:19;;-1:-1:-1;;;;;8139:34:142;;8175:22;;;8136:62;8133:88;;;8201:18;;:::i;8263:255::-;8335:2;8329:9;8377:6;8365:19;;-1:-1:-1;;;;;8399:34:142;;8435:22;;;8396:62;8393:88;;;8461:18;;:::i;8523:275::-;8594:2;8588:9;8659:2;8640:13;;-1:-1:-1;;8636:27:142;8624:40;;-1:-1:-1;;;;;8679:34:142;;8715:22;;;8676:62;8673:88;;;8741:18;;:::i;:::-;8777:2;8770:22;8523:275;;-1:-1:-1;8523:275:142:o;8803:183::-;8863:4;-1:-1:-1;;;;;8888:6:142;8885:30;8882:56;;;8918:18;;:::i;:::-;-1:-1:-1;8963:1:142;8959:14;8975:4;8955:25;;8803:183::o;8991:940::-;9075:6;9128:2;9116:9;9107:7;9103:23;9099:32;9096:52;;;9144:1;9141;9134:12;9096:52;9184:9;9171:23;-1:-1:-1;;;;;9209:6:142;9206:30;9203:50;;;9249:1;9246;9239:12;9203:50;9272:22;;9325:4;9317:13;;9313:27;-1:-1:-1;9303:55:142;;9354:1;9351;9344:12;9303:55;9394:2;9381:16;9417:64;9433:47;9473:6;9433:47;:::i;:::-;9417:64;:::i;:::-;9503:3;9527:6;9522:3;9515:19;9559:2;9554:3;9550:12;9543:19;;9614:2;9604:6;9601:1;9597:14;9593:2;9589:23;9585:32;9571:46;;9640:7;9632:6;9629:19;9626:39;;;9661:1;9658;9651:12;9626:39;9693:2;9689;9685:11;9674:22;;9705:196;9721:6;9716:3;9713:15;9705:196;;;9811:17;;9841:18;;9888:2;9738:12;;;;9879;;;;9705:196;;10016:507;10108:4;10100:5;10094:12;10090:23;10085:3;10078:36;10175:4;10167;10160:5;10156:16;10150:23;10146:34;10139:4;10134:3;10130:14;10123:58;10230:4;10223:5;10219:16;10213:23;10206:4;10201:3;10197:14;10190:47;10286:4;10279:5;10275:16;10269:23;10262:4;10257:3;10253:14;10246:47;10342:4;10335:5;10331:16;10325:23;10318:4;10313:3;10309:14;10302:47;10398:4;10391:5;10387:16;10381:23;10374:4;10369:3;10365:14;10358:47;10454:4;10447:5;10443:16;10437:23;10430:4;10425:3;10421:14;10414:47;10510:4;10503:5;10499:16;10493:23;10486:4;10481:3;10477:14;10470:47;;;10016:507::o;10528:233::-;10591:45;10632:3;10624:5;10618:12;10591:45;:::i;:::-;10682:4;10675:5;10671:16;10665:23;10697:58;10747:6;10742:3;10738:16;10724:12;10697:58;:::i;12751:4042::-;12953:4;13001:2;12990:9;12986:18;13031:2;13020:9;13013:21;13054:6;13089;13083:13;13120:6;13112;13105:22;13158:2;13147:9;13143:18;13136:25;;13220:2;13210:6;13207:1;13203:14;13192:9;13188:30;13184:39;13170:53;;13258:2;13250:6;13246:15;13279:1;13289:3475;13303:6;13300:1;13297:13;13289:3475;;;13396:2;13392:7;13380:9;13372:6;13368:22;13364:36;13359:3;13352:49;13430:6;13424:13;13471:2;13465:9;13457:6;13450:25;13526:2;13522;13518:11;13512:18;13507:2;13499:6;13495:15;13488:43;13578:2;13574;13570:11;13564:18;13595:49;13640:2;13632:6;13628:15;13614:12;-1:-1:-1;;;;;1811:31:142;1799:44;;1745:104;13595:49;;13693:4;13689:2;13685:13;13679:20;13712:62;13768:4;13760:6;13756:17;13740:14;13712:62;:::i;:::-;-1:-1:-1;13823:4:142;13815:13;;;13809:20;10842:12;;10856:4;10838:23;;;13895:6;13883:19;;10826:36;10915:4;10904:16;;;10898:23;10894:34;;;10878:14;;;10871:58;10978:4;10967:16;;;10961:23;10945:14;;;10938:47;11034:4;11023:16;;11017:23;11001:14;;;10994:47;11079:16;;;11073:23;11057:14;;;11050:47;11146:4;11135:16;;;11129:23;11113:14;;;11106:47;11202:4;11191:16;;;11185:23;11169:14;;;11162:47;13944:13;;13938:20;11295:12;;14027:6;14015:19;;11283:25;11346:16;;;11340:23;11324:14;;;11317:47;11402:16;;;11396:23;11380:14;;;11373:47;14076:13;;14070:20;-1:-1:-1;;;;;1811:31:142;;;14150:6;14138:19;;1799:44;14207:4;14199:13;;14193:20;1811:31;;14273:6;14261:19;;1799:44;14330:6;14322:15;;14316:22;1811:31;;14398:6;14386:19;;1799:44;14455:6;14447:15;;14441:22;1811:31;;14523:6;14511:19;;1799:44;14580:6;14572:15;;14566:22;1811:31;14648:6;14636:19;;1799:44;14705:6;14697:15;;14691:22;14754:6;14745;14733:19;;14726:35;;;14788:54;;14822:19;;14691:22;14788:54;:::i;:::-;14774:68;;14892:6;14888:2;14884:15;14878:22;14953:6;14945;14941:19;14932:6;14924;14920:19;14913:48;14988:42;15023:6;15006:15;14988:42;:::i;:::-;14974:56;;;15080:6;15076:2;15072:15;15066:22;15141:6;15133;15129:19;15120:6;15112;15108:19;15101:48;15176:42;15211:6;15194:15;15176:42;:::i;:::-;15162:56;;;15268:6;15264:2;15260:15;15254:22;15289:54;15335:6;15327;15323:19;15306:15;10003:4;9992:16;9980:29;;9936:75;15289:54;-1:-1:-1;15393:6:142;15385:15;;15379:22;10003:4;9992:16;;;15460:6;15448:19;;9980:29;15518:6;15510:15;;15504:22;9992:16;;15585:6;15573:19;;9980:29;15643:6;15635:15;;15629:22;9992:16;15710:6;15698:19;;9980:29;15773:6;15765:15;;15759:22;15750:6;15738:19;;15731:51;15837:6;15829:15;;15823:22;15814:6;15802:19;;15795:51;15901:6;15893:15;;15887:22;15878:6;15866:19;;15859:51;15965:6;15957:15;;15951:22;15942:6;15930:19;;15923:51;16024:6;16016:15;;16010:22;11504:12;;16100:6;16088:19;;11492:25;11566:4;11555:16;;;11549:23;11533:14;;;11526:47;11622:4;11611:16;;;11605:23;11589:14;;;11582:47;11678:4;11667:16;;;11661:23;11645:14;;;11638:47;16158:6;16150:15;;16144:22;11504:12;;16234:6;16222:19;;11492:25;11555:16;;;11549:23;11533:14;;;11526:47;11611:16;;;11605:23;11589:14;;;11582:47;11667:16;;11661:23;11645:14;;;11638:47;16292:6;16284:15;;16278:22;11295:12;;16370:6;16358:19;;11283:25;11346:16;;;11340:23;11324:14;;;11317:47;11402:16;;11396:23;11380:14;;;11373:47;16428:6;16420:15;;16414:22;11772:12;;16507:6;16495:19;;11760:25;11823:16;;;11817:23;11801:14;;;11794:47;11879:16;;;11873:23;11857:14;;;11850:47;11935:16;;;11929:23;11913:14;;;11906:47;12002:4;11991:16;;;11985:23;11969:14;;;11962:47;12058:4;12047:16;;;12041:23;12025:14;;;12018:47;12114:4;12103:16;;12097:23;12081:14;;;12074:47;12170:4;12159:16;;12153:23;12137:14;;;12130:47;12228:6;12217:18;;12211:25;12193:16;;;12186:51;12288:6;12277:18;;12271:25;12253:16;;;12246:51;12348:6;12337:18;;;12331:25;12313:16;;;12306:51;16565:6;16557:15;;;16551:22;12447:12;;16647:6;16635:19;;12435:25;12498:16;;;12492:23;12476:14;;;12469:47;12554:16;;;12548:23;12532:14;;;12525:47;12610:16;;;12604:23;12588:14;;;12581:47;12666:16;;;12660:23;12644:14;;;12637:47;12722:16;;12716:23;12700:14;;;;12693:47;;;;16742:12;;;;16707:15;;;;;13325:1;13318:9;13289:3475;;;-1:-1:-1;16781:6:142;;12751:4042;-1:-1:-1;;;;;;12751:4042:142:o;16798:648::-;16883:6;16891;16899;16907;16960:3;16948:9;16939:7;16935:23;16931:33;16928:53;;;16977:1;16974;16967:12;16928:53;17016:9;17003:23;17035:30;17059:5;17035:30;:::i;:::-;17084:5;-1:-1:-1;17141:2:142;17126:18;;17113:32;17154:33;17113:32;17154:33;:::i;:::-;17206:7;-1:-1:-1;17265:2:142;17250:18;;17237:32;17278:33;17237:32;17278:33;:::i;:::-;16798:648;;;;-1:-1:-1;17330:7:142;;17410:2;17395:18;17382:32;;-1:-1:-1;;16798:648:142:o;17451:118::-;17537:5;17530:13;17523:21;17516:5;17513:32;17503:60;;17559:1;17556;17549:12;17574:380;17638:6;17646;17699:2;17687:9;17678:7;17674:23;17670:32;17667:52;;;17715:1;17712;17705:12;17667:52;17754:9;17741:23;17773:30;17797:5;17773:30;:::i;:::-;17822:5;-1:-1:-1;17879:2:142;17864:18;;17851:32;17892:30;17851:32;17892:30;:::i;:::-;17941:7;17931:17;;;17574:380;;;;;:::o;17959:790::-;18053:6;18061;18069;18077;18085;18138:3;18126:9;18117:7;18113:23;18109:33;18106:53;;;18155:1;18152;18145:12;18106:53;18194:9;18181:23;18213:31;18238:5;18213:31;:::i;:::-;18263:5;-1:-1:-1;18320:2:142;18305:18;;18292:32;18333;18292;18333;:::i;:::-;18384:7;-1:-1:-1;18443:2:142;18428:18;;18415:32;18456:33;18415:32;18456:33;:::i;:::-;18508:7;-1:-1:-1;18567:2:142;18552:18;;18539:32;18580:33;18539:32;18580:33;:::i;:::-;17959:790;;;;-1:-1:-1;17959:790:142;;18712:3;18697:19;18684:33;;17959:790;-1:-1:-1;;17959:790:142:o;18754:502::-;18828:6;18836;18844;18897:2;18885:9;18876:7;18872:23;18868:32;18865:52;;;18913:1;18910;18903:12;18865:52;18958:23;;;-1:-1:-1;19057:2:142;19042:18;;19029:32;19070:33;19029:32;19070:33;:::i;:::-;19122:7;-1:-1:-1;19181:2:142;19166:18;;19153:32;19194:30;19153:32;19194:30;:::i;19261:114::-;19345:4;19338:5;19334:16;19327:5;19324:27;19314:55;;19365:1;19362;19355:12;19380:621;19462:6;19470;19478;19486;19539:3;19527:9;19518:7;19514:23;19510:33;19507:53;;;19556:1;19553;19546:12;19507:53;19601:23;;;-1:-1:-1;19721:2:142;19706:18;;19693:32;;-1:-1:-1;19803:2:142;19788:18;;19775:32;19816:31;19775:32;19816:31;:::i;:::-;19866:7;-1:-1:-1;19925:2:142;19910:18;;19897:32;19938:31;19897:32;19938:31;:::i;20006:245::-;20064:6;20117:2;20105:9;20096:7;20092:23;20088:32;20085:52;;;20133:1;20130;20123:12;20085:52;20172:9;20159:23;20191:30;20215:5;20191:30;:::i;20509:367::-;20577:6;20585;20638:2;20626:9;20617:7;20613:23;20609:32;20606:52;;;20654:1;20651;20644:12;20606:52;20699:23;;;-1:-1:-1;20798:2:142;20783:18;;20770:32;20811:33;20770:32;20811:33;:::i;21336:382::-;21401:6;21409;21462:2;21450:9;21441:7;21437:23;21433:32;21430:52;;;21478:1;21475;21468:12;21430:52;21517:9;21504:23;21536:31;21561:5;21536:31;:::i;21723:817::-;21991:2;22003:21;;;22073:13;;21976:18;;;22095:22;;;21943:4;;22186;22174:17;;;22148:2;22133:18;;;21943:4;22219:199;22233:6;22230:1;22227:13;22219:199;;;22298:13;;-1:-1:-1;;;;;22294:39:142;22282:52;;22363:4;22391:17;;;;22354:14;;;;22330:1;22248:9;22219:199;;;22223:3;;22465:9;22460:3;22456:19;22449:4;22438:9;22434:20;22427:49;22493:41;22530:3;22522:6;22493:41;:::i;22769:186::-;22817:4;-1:-1:-1;;;;;22842:6:142;22839:30;22836:56;;;22872:18;;:::i;:::-;-1:-1:-1;22938:2:142;22917:15;-1:-1:-1;;22913:29:142;22944:4;22909:40;;22769:186::o;22960:486::-;23002:5;23055:3;23048:4;23040:6;23036:17;23032:27;23022:55;;23073:1;23070;23063:12;23022:55;23113:6;23100:20;23144:52;23160:35;23188:6;23160:35;:::i;23144:52::-;23221:6;23212:7;23205:23;23275:3;23268:4;23259:6;23251;23247:19;23243:30;23240:39;23237:59;;;23292:1;23289;23282:12;23237:59;23357:6;23350:4;23342:6;23338:17;23331:4;23322:7;23318:18;23305:59;23413:1;23384:20;;;23406:4;23380:31;23373:42;;;;23388:7;22960:486;-1:-1:-1;;;22960:486:142:o;23451:575::-;23537:6;23545;23553;23606:2;23594:9;23585:7;23581:23;23577:32;23574:52;;;23622:1;23619;23612:12;23574:52;23661:9;23648:23;23680:31;23705:5;23680:31;:::i;:::-;23730:5;-1:-1:-1;23808:2:142;23793:18;;23780:32;;-1:-1:-1;23889:2:142;23874:18;;23861:32;-1:-1:-1;;;;;23905:30:142;;23902:50;;;23948:1;23945;23938:12;23902:50;23971:49;24012:7;24003:6;23992:9;23988:22;23971:49;:::i;:::-;23961:59;;;23451:575;;;;;:::o;24031:299::-;24214:6;24207:14;24200:22;24189:9;24182:41;24259:2;24254;24243:9;24239:18;24232:30;24163:4;24279:45;24320:2;24309:9;24305:18;24297:6;24279:45;:::i;24335:717::-;24430:6;24438;24446;24454;24507:3;24495:9;24486:7;24482:23;24478:33;24475:53;;;24524:1;24521;24514:12;24475:53;24563:9;24550:23;24582:31;24607:5;24582:31;:::i;:::-;24632:5;-1:-1:-1;24689:2:142;24674:18;;24661:32;24702:33;24661:32;24702:33;:::i;:::-;24754:7;-1:-1:-1;24834:2:142;24819:18;;24806:32;;-1:-1:-1;24915:2:142;24900:18;;24887:32;-1:-1:-1;;;;;24931:30:142;;24928:50;;;24974:1;24971;24964:12;24928:50;24997:49;25038:7;25029:6;25018:9;25014:22;24997:49;:::i;:::-;24987:59;;;24335:717;;;;;;;:::o;25057:692::-;25303:2;25315:21;;;25385:13;;25288:18;;;25407:22;;;25255:4;;25486:15;;;25460:2;25445:18;;;25255:4;25529:194;25543:6;25540:1;25537:13;25529:194;;;25592:47;25635:3;25626:6;25620:13;25592:47;:::i;:::-;25710:2;25698:15;;;;;25668:6;25659:16;;;;;25565:1;25558:9;25529:194;;;-1:-1:-1;25740:3:142;;25057:692;-1:-1:-1;;;;;25057:692:142:o;25754:504::-;25829:6;25837;25845;25898:2;25886:9;25877:7;25873:23;25869:32;25866:52;;;25914:1;25911;25904:12;25866:52;25959:23;;;-1:-1:-1;26058:2:142;26043:18;;26030:32;26071:31;26030:32;26071:31;:::i;26263:388::-;26331:6;26339;26392:2;26380:9;26371:7;26367:23;26363:32;26360:52;;;26408:1;26405;26398:12;26360:52;26447:9;26434:23;26466:31;26491:5;26466:31;:::i;:::-;26516:5;-1:-1:-1;26573:2:142;26558:18;;26545:32;26586:33;26545:32;26586:33;:::i;26656:487::-;26733:6;26741;26749;26802:2;26790:9;26781:7;26777:23;26773:32;26770:52;;;26818:1;26815;26808:12;26770:52;26863:23;;;-1:-1:-1;26983:2:142;26968:18;;26955:32;;-1:-1:-1;27065:2:142;27050:18;;27037:32;27078:33;27037:32;27078:33;:::i;27688:363::-;27754:6;27762;27815:2;27803:9;27794:7;27790:23;27786:32;27783:52;;;27831:1;27828;27821:12;27783:52;27876:23;;;-1:-1:-1;27975:2:142;27960:18;;27947:32;27988:31;27947:32;27988:31;:::i;28316:127::-;28377:10;28372:3;28368:20;28365:1;28358:31;28408:4;28405:1;28398:15;28432:4;28429:1;28422:15;28448:267;28534:6;28587:2;28575:9;28566:7;28562:23;28558:32;28555:52;;;28603:1;28600;28593:12;28555:52;28635:9;28629:16;28654:31;28679:5;28654:31;:::i;28720:230::-;28790:6;28843:2;28831:9;28822:7;28818:23;28814:32;28811:52;;;28859:1;28856;28849:12;28811:52;-1:-1:-1;28904:16:142;;28720:230;-1:-1:-1;28720:230:142:o;28955:443::-;29186:25;;;-1:-1:-1;;;;;29247:32:142;;;29242:2;29227:18;;29220:60;29316:32;;29311:2;29296:18;;29289:60;29380:2;29365:18;;29358:34;29173:3;29158:19;;28955:443::o;29779:127::-;29840:10;29835:3;29831:20;29828:1;29821:31;29871:4;29868:1;29861:15;29895:4;29892:1;29885:15;29911:155;30002:6;29979:14;;;29995;;;29975:35;;30022:15;;30019:41;;;30040:18;;:::i;30071:158::-;30164:6;30157:14;;;30141;;;30137:35;;30184:16;;30181:42;;;30203:18;;:::i;30754:168::-;30827:9;;;30858;;30875:15;;;30869:22;;30855:37;30845:71;;30896:18;;:::i;30927:217::-;30967:1;30993;30983:132;;31037:10;31032:3;31028:20;31025:1;31018:31;31072:4;31069:1;31062:15;31100:4;31097:1;31090:15;30983:132;-1:-1:-1;31129:9:142;;30927:217::o;31149:138::-;31228:13;;31250:31;31228:13;31250:31;:::i;31292:134::-;31369:13;;31391:29;31369:13;31391:29;:::i;31431:1043::-;31497:5;31545:6;31533:9;31528:3;31524:19;31520:32;31517:52;;;31565:1;31562;31555:12;31517:52;31587:22;;:::i;:::-;31578:31;;31639:9;31633:16;31658:31;31681:7;31658:31;:::i;:::-;31698:22;;31752:47;31795:2;31780:18;;31752:47;:::i;:::-;31747:2;31736:14;;31729:71;31866:2;31851:18;;;31845:25;31886:14;;;31879:31;31976:2;31961:18;;;31955:25;31996:14;;;31989:31;32086:3;32071:19;;;32065:26;32107:15;;;32100:32;32198:3;32183:19;;;32177:26;32219:15;;;32212:32;32310:3;32295:19;;;32289:26;32331:15;;;32324:32;32422:3;32407:19;;;32401:26;32443:15;;;32436:32;;;;31740:5;31431:1043;-1:-1:-1;31431:1043:142:o;32479:574::-;32546:5;32594:6;32582:9;32577:3;32573:19;32569:32;32566:52;;;32614:1;32611;32604:12;32566:52;32667:4;32661:11;;;32699:17;;-1:-1:-1;;;;;32731:34:142;;32767:22;;;32728:62;32725:88;;;32793:18;;:::i;:::-;32829:4;32822:24;32864:6;-1:-1:-1;32864:6:142;32894:53;32943:3;32932:9;32894:53;:::i;:::-;32886:6;32879:69;32983:63;33042:3;33036;33025:9;33021:19;32983:63;:::i;:::-;32976:4;32968:6;32964:17;32957:90;;32479:574;;;;:::o;33058:976::-;33122:5;33170:4;33158:9;33153:3;33149:19;33145:30;33142:50;;;33188:1;33185;33178:12;33142:50;33210:22;;:::i;:::-;33201:31;;33262:9;33256:16;33281:31;33304:7;33281:31;:::i;:::-;33321:22;;33388:2;33373:18;;33367:25;33401:31;33367:25;33401:31;:::i;:::-;33459:2;33448:14;;33441:31;33538:2;33523:18;;;33517:25;33558:14;;;33551:31;33648:2;33633:18;;;33627:25;33668:14;;;33661:31;33758:3;33743:19;;;33737:26;33779:15;;;33772:32;33870:3;33855:19;;;33849:26;33891:15;;;33884:32;33982:3;33967:19;;;33961:26;34003:15;;;33996:32;;;;33452:5;33058:976;-1:-1:-1;33058:976:142:o;34039:706::-;34106:5;34154:4;34142:9;34137:3;34133:19;34129:30;34126:50;;;34172:1;34169;34162:12;34126:50;34225:2;34219:9;34267:4;34255:17;;-1:-1:-1;;;;;34287:34:142;;34323:22;;;34284:62;34281:88;;;34349:18;;:::i;:::-;34385:2;34378:22;;;34469:16;;34494:23;;34583:2;34568:18;;;34562:25;34603:15;;;34596:32;34679:18;;;34673:25;34714:15;;;34707:32;;;;-1:-1:-1;34418:6:142;34039:706;-1:-1:-1;34039:706:142:o;34750:484::-;34804:5;34857:3;34850:4;34842:6;34838:17;34834:27;34824:55;;34875:1;34872;34865:12;34824:55;34908:6;34902:13;34939:52;34955:35;34983:6;34955:35;:::i;34939:52::-;35016:6;35007:7;35000:23;35070:3;35063:4;35054:6;35046;35042:19;35038:30;35035:39;35032:59;;;35087:1;35084;35077:12;35032:59;35145:6;35138:4;35130:6;35126:17;35119:4;35110:7;35106:18;35100:52;35201:1;35172:20;;;35194:4;35168:31;35161:42;;;;35176:7;34750:484;-1:-1:-1;;;34750:484:142:o;35239:815::-;35304:5;35352:4;35340:9;35335:3;35331:19;35327:30;35324:50;;;35370:1;35367;35360:12;35324:50;35423:2;35417:9;35465:4;35453:17;;-1:-1:-1;;;;;35485:34:142;;35521:22;;;35482:62;35479:88;;;35547:18;;:::i;:::-;35583:2;35576:22;;;35667:16;;35692:23;;35781:2;35766:18;;;35760:25;35801:15;;;35794:32;35877:18;;;35871:25;35912:15;;;35905:32;36003:2;35988:18;;;35982:25;36023:15;;;36016:32;;;;-1:-1:-1;35616:6:142;35239:815;-1:-1:-1;35239:815:142:o;36059:1398::-;36127:5;36175:6;36163:9;36158:3;36154:19;36150:32;36147:52;;;36195:1;36192;36185:12;36147:52;36217:22;;:::i;:::-;36284:16;;36309:22;;36397:2;36382:18;;;36376:25;36417:14;;;36410:31;36507:2;36492:18;;;36486:25;36527:14;;;36520:31;36617:2;36602:18;;;36596:25;36637:14;;;36630:31;36727:3;36712:19;;;36706:26;36748:15;;;36741:32;36839:3;36824:19;;;36818:26;36860:15;;;36853:32;36951:3;36936:19;;;36930:26;36972:15;;;36965:32;37063:3;37048:19;;;37042:26;37084:15;;;37077:32;37175:3;37160:19;;;37154:26;37196:15;;;37189:32;37289:3;37274:19;;;37268:26;37310:15;;;37303:33;37404:3;37389:19;;;37383:26;37425:15;;;37418:33;;;;-1:-1:-1;36208:31:142;36059:1398;-1:-1:-1;36059:1398:142:o;37462:1047::-;37533:5;37581:4;37569:9;37564:3;37560:19;37556:30;37553:50;;;37599:1;37596;37589:12;37553:50;37652:2;37646:9;37694:4;37682:17;;-1:-1:-1;;;;;37714:34:142;;37750:22;;;37711:62;37708:88;;;37776:18;;:::i;:::-;37812:2;37805:22;;;37896:16;;37921:23;;38010:2;37995:18;;;37989:25;38030:15;;;38023:32;38106:18;;;38100:25;38141:15;;;38134:32;38232:2;38217:18;;;38211:25;38252:15;;;38245:32;38343:3;38328:19;;;38322:26;38364:16;;;38357:33;38456:3;38441:19;;;38435:26;38477:16;;;38470:33;;;;-1:-1:-1;37845:6:142;37462:1047;-1:-1:-1;37462:1047:142:o;38514:4182::-;38639:6;38692:2;38680:9;38671:7;38667:23;38663:32;38660:52;;;38708:1;38705;38698:12;38660:52;38741:9;38735:16;-1:-1:-1;;;;;38766:6:142;38763:30;38760:50;;;38806:1;38803;38796:12;38760:50;38829:22;;38882:4;38874:13;;38870:27;-1:-1:-1;38860:55:142;;38911:1;38908;38901:12;38860:55;38944:2;38938:9;38967:64;38983:47;39023:6;38983:47;:::i;38967:64::-;39053:3;39077:6;39072:3;39065:19;39109:2;39104:3;39100:12;39093:19;;39164:2;39154:6;39151:1;39147:14;39143:2;39139:23;39135:32;39121:46;;39190:7;39182:6;39179:19;39176:39;;;39211:1;39208;39201:12;39176:39;39243:2;39239;39235:11;39255:3411;39271:6;39266:3;39263:15;39255:3411;;;39350:3;39344:10;-1:-1:-1;;;;;39373:11:142;39370:35;39367:55;;;39418:1;39415;39408:12;39367:55;39445:20;;39517:6;39489:16;;;-1:-1:-1;;39485:30:142;39481:43;39478:63;;;39537:1;39534;39527:12;39478:63;39567:22;;:::i;:::-;39656:2;39648:11;;;39642:18;39673:22;;39762:2;39754:11;;39748:18;39786:14;;;39779:31;39846:42;39884:2;39876:11;;39846:42;:::i;:::-;39841:2;39834:5;39830:14;39823:66;39925:62;39979:7;39972:4;39968:2;39964:13;39925:62;:::i;:::-;39920:2;39913:5;39909:14;39902:86;40026:61;40079:7;40070:6;40066:2;40062:15;40026:61;:::i;:::-;40019:4;40012:5;40008:16;40001:87;40126:61;40179:7;40173:3;40169:2;40165:12;40126:61;:::i;:::-;40119:4;40112:5;40108:16;40101:87;40226:43;40264:3;40260:2;40256:12;40226:43;:::i;:::-;40219:4;40212:5;40208:16;40201:69;40308:43;40346:3;40342:2;40338:12;40308:43;:::i;:::-;40301:4;40294:5;40290:16;40283:69;40392:44;40430:4;40426:2;40422:13;40392:44;:::i;:::-;40383:6;40376:5;40372:18;40365:72;40477:44;40515:4;40511:2;40507:13;40477:44;:::i;:::-;40468:6;40461:5;40457:18;40450:72;40562:44;40600:4;40596:2;40592:13;40562:44;:::i;:::-;40553:6;40546:5;40542:18;40535:72;40650:4;40646:2;40642:13;40636:20;-1:-1:-1;;;;;40675:8:142;40672:32;40669:52;;;40717:1;40714;40707:12;40669:52;40761:65;40818:7;40813:2;40802:8;40798:2;40794:17;40790:26;40761:65;:::i;:::-;40752:6;40745:5;40741:18;40734:93;;40870:4;40866:2;40862:13;40856:20;-1:-1:-1;;;;;40895:8:142;40892:32;40889:52;;;40937:1;40934;40927:12;40889:52;40981:65;41038:7;41033:2;41022:8;41018:2;41014:17;41010:26;40981:65;:::i;:::-;40972:6;40965:5;40961:18;40954:93;;41090:4;41086:2;41082:13;41076:20;-1:-1:-1;;;;;41115:8:142;41112:32;41109:52;;;41157:1;41154;41147:12;41109:52;41201:65;41258:7;41253:2;41242:8;41238:2;41234:17;41230:26;41201:65;:::i;:::-;41192:6;41185:5;41181:18;41174:93;;41307:42;41343:4;41339:2;41335:13;41307:42;:::i;:::-;41298:6;41291:5;41287:18;41280:70;41390:42;41426:4;41422:2;41418:13;41390:42;:::i;:::-;41381:6;41374:5;41370:18;41363:70;41473:42;41509:4;41505:2;41501:13;41473:42;:::i;:::-;41464:6;41457:5;41453:18;41446:70;41556:42;41592:4;41588:2;41584:13;41556:42;:::i;:::-;41547:6;41536:18;;41529:70;41666:4;41658:13;;41652:20;41703:6;41692:18;;41685:35;41787:4;41779:13;;41773:20;41824:3;41813:15;;41806:32;41905:4;41897:13;;41891:20;41942:6;41931:18;;41924:35;42026:4;42018:13;;42012:20;42063:6;42052:18;;42045:35;42120:60;42172:7;42165:4;42157:13;;42120:60;:::i;:::-;42111:6;42104:5;42100:18;42093:88;42221:60;42273:7;42266:4;42262:2;42258:13;42221:60;:::i;:::-;42212:6;42205:5;42201:18;42194:88;42322:62;42376:7;42369:4;42365:2;42361:13;42322:62;:::i;:::-;42313:6;42306:5;42302:18;42295:90;42425:63;42480:7;42473:4;42469:2;42465:13;42425:63;:::i;:::-;42416:6;42409:5;42405:18;42398:91;42526:66;42584:7;42577:4;42573:2;42569:13;42526:66;:::i;:::-;42520:3;42509:15;;42502:91;42606:18;;-1:-1:-1;42653:2:142;42644:12;;;;39288;39255:3411;;;-1:-1:-1;42685:5:142;38514:4182;-1:-1:-1;;;;;;38514:4182:142:o;42701:343::-;42780:6;42788;42841:2;42829:9;42820:7;42816:23;42812:32;42809:52;;;42857:1;42854;42847:12;42809:52;-1:-1:-1;;42902:16:142;;43008:2;42993:18;;;42987:25;42902:16;;42987:25;;-1:-1:-1;42701:343:142:o;43049:125::-;43114:9;;;43135:10;;;43132:36;;;43148:18;;:::i;43179:148::-;43267:4;43246:12;;;43260;;;43242:31;;43285:13;;43282:39;;;43301:18;;:::i;43332:128::-;43399:9;;;43420:11;;;43417:37;;;43434:18;;:::i;43933:337::-;44013:6;44066:2;44054:9;44045:7;44041:23;44037:32;44034:52;;;44082:1;44079;44072:12;44034:52;44115:9;44109:16;-1:-1:-1;;;;;44140:6:142;44137:30;44134:50;;;44180:1;44177;44170:12;44134:50;44203:61;44256:7;44247:6;44236:9;44232:22;44203:61;:::i;44599:249::-;44668:6;44721:2;44709:9;44700:7;44696:23;44692:32;44689:52;;;44737:1;44734;44727:12;44689:52;44769:9;44763:16;44788:30;44812:5;44788:30;:::i;44853:245::-;44920:6;44973:2;44961:9;44952:7;44948:23;44944:32;44941:52;;;44989:1;44986;44979:12;44941:52;45021:9;45015:16;45040:28;45062:5;45040:28;:::i;45542:301::-;45671:3;45709:6;45703:13;45755:6;45748:4;45740:6;45736:17;45731:3;45725:37;45817:1;45781:16;;45806:13;;;-1:-1:-1;45781:16:142;45542:301;-1:-1:-1;45542:301:142:o;45848:950::-;45971:6;46024:2;46012:9;46003:7;45999:23;45995:32;45992:52;;;46040:1;46037;46030:12;45992:52;46073:9;46067:16;-1:-1:-1;;;;;46098:6:142;46095:30;46092:50;;;46138:1;46135;46128:12;46092:50;46161:22;;46214:4;46206:13;;46202:27;-1:-1:-1;46192:55:142;;46243:1;46240;46233:12;46192:55;46276:2;46270:9;46299:64;46315:47;46355:6;46315:47;:::i;46299:64::-;46385:3;46409:6;46404:3;46397:19;46441:2;46436:3;46432:12;46425:19;;46496:2;46486:6;46483:1;46479:14;46475:2;46471:23;46467:32;46453:46;;46522:7;46514:6;46511:19;46508:39;;;46543:1;46540;46533:12;46508:39;46575:2;46571;46567:11;46556:22;;46587:181;46603:6;46598:3;46595:15;46587:181;;;46673:52;46717:7;46712:3;46673:52;:::i;:::-;46668:3;46661:65;46755:2;46750:3;46746:12;46739:19;;46629:6;46624:3;46620:16;46613:23;;46587:181;;48855:135;48894:3;48915:17;;;48912:43;;48935:18;;:::i;:::-;-1:-1:-1;48982:1:142;48971:13;;48855:135::o;48995:485::-;-1:-1:-1;;;;;49226:32:142;;;49208:51;;49295:32;;49290:2;49275:18;;49268:60;49359:2;49344:18;;49337:34;;;49407:3;49402:2;49387:18;;49380:31;;;-1:-1:-1;;49428:46:142;;49454:19;;49446:6;49428:46;:::i;49485:249::-;49554:6;49607:2;49595:9;49586:7;49582:23;49578:32;49575:52;;;49623:1;49620;49613:12;49575:52;49655:9;49649:16;49674:30;49698:5;49674:30;:::i;49739:127::-;49800:10;49795:3;49791:20;49788:1;49781:31;49831:4;49828:1;49821:15;49855:4;49852:1;49845:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DENOMINATOR()": "918f8674",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "buyRoyalty(uint256)": "755b9162",
    "buyRoyaltyTo(uint256,address)": "dc49b190",
    "calcGRETHShares(uint256,uint256,address)": "dec39715",
    "calcRoyaltyPriceShares(uint256)": "ef38e4e3",
    "calcRoyaltyShares(uint256,uint256)": "a8c9d304",
    "deposit(uint256,uint256)": "e2bbb158",
    "deposit2(uint256,uint256,uint256)": "2809e226",
    "deposit3(uint256,uint256)": "37477bce",
    "execute(address,uint256,bytes)": "b61d27f6",
    "exit(uint256)": "7f8661a1",
    "getApproved(uint256)": "081812fc",
    "getPoolIdsOf(address)": "0cccd888",
    "getPoolNFTInfosBy(uint256[])": "36e68f54",
    "getPositionsBy(uint256[])": "bde855e5",
    "getRoyaltyReceiver(uint256)": "5b71ecb5",
    "grETH()": "a93d57a1",
    "grethGrinderShareNumerator()": "04f6430e",
    "grethPoolOwnerShareNumerator()": "1927c4ea",
    "grethReserveShareNumerator()": "ce339395",
    "grethRoyaltyReceiverShareNumerator()": "b3628932",
    "grind(uint256)": "09dbb6ea",
    "grindOp(uint256,uint8)": "f059deb2",
    "grindOpTo(uint256,uint8,address)": "c0b7b578",
    "grindTo(uint256,address)": "b2d5cca7",
    "grinderAI()": "2980b2ff",
    "init(address,address,address)": "184b9559",
    "isAgentOf(address,address)": "cdb0d023",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isDepositorOf(uint256,address)": "849784d4",
    "isStrategyStopped(uint16)": "6db47de9",
    "maxDeposit(address)": "402d267d",
    "minDeposit(address)": "3c29f839",
    "mint(uint16,address,address,uint256)": "37566d54",
    "mintTo(address,uint16,address,address,uint256)": "592ae17f",
    "minter(uint256)": "ac8d856c",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "pendingOwner()": "e30c3978",
    "poolIds(address)": "d4175be2",
    "poolOwnerShareNumerator()": "e60ed1f3",
    "pools(uint256)": "ac4afa38",
    "poolsNFTLens()": "8e22e7c3",
    "rebalance(uint256,uint256,uint8,uint8)": "5db44744",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "royaltyNumerator()": "2bb80474",
    "royaltyOwnerShareNumerator()": "bfe121e5",
    "royaltyPrice(uint256)": "26ca015a",
    "royaltyPriceCompensationShareNumerator()": "352333f2",
    "royaltyPriceInitNumerator()": "2a67fe0b",
    "royaltyPriceOwnerShareNumerator()": "36b02baf",
    "royaltyPricePoolOwnerShareNumerator()": "4f99f04a",
    "royaltyPriceReserveShareNumerator()": "f9298928",
    "royaltyReceiver(uint256)": "5cd2dd5e",
    "royaltyReceiverShareNumerator()": "053604ed",
    "royaltyReserveShareNumerator()": "6d3a87db",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setAgent(address,bool)": "97d8c676",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setDepositor(uint256,address,bool)": "5d2d1920",
    "setGRETHShares(uint16,uint16,uint16,uint16)": "ca05262b",
    "setMaxDeposit(address,uint256)": "73f65f8a",
    "setMinDeposit(address,uint256)": "912d1a86",
    "setPoolsNFTLens(address)": "f2602720",
    "setRoyaltyPriceInitNumerator(uint16)": "ab6e9690",
    "setRoyaltyPriceShares(uint16,uint16,uint16,uint16)": "c0b929e6",
    "setRoyaltyShares(uint16,uint16,uint16,uint16)": "27f8cabb",
    "setStrategyFactory(address)": "a5352bfd",
    "setStrategyStopped(uint16,bool)": "55b2d01e",
    "spentGrinds(address)": "b9f86ad1",
    "strategyFactory(uint16)": "eb9b7986",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenByIndex(uint256)": "4f6ccce7",
    "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
    "tokenURI(uint256)": "c87b56dd",
    "totalPools()": "ab3c7e52",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "withdraw(uint256,address,uint256)": "e63697c8",
    "withdraw2(uint256,address,uint256)": "19fc5fec"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DifferentOwnersOfPools\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DifferentTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientMinDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoyaltyPriceInit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShares\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoCapital\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAgent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDepositor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotGrinderAI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerOf\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyStopped\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidPrice\",\"type\":\"uint256\"}],\"name\":\"BuyRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseTokenPrice\",\"type\":\"uint256\"}],\"name\":\"Deposit2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseTokenAmount\",\"type\":\"uint256\"}],\"name\":\"Exit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"op\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"grinder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isGrinded\",\"type\":\"bool\"}],\"name\":\"Grind\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebalancedPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBaseTokenAmount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBaseTokenAmount1\",\"type\":\"uint256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseTokenAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw2\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"buyRoyalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"buyRoyaltyTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"royaltyPricePaid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFeeSpent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"grinder\",\"type\":\"address\"}],\"name\":\"calcGRETHShares\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"actors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"grethShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"calcRoyaltyPriceShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"compensationShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolOwnerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ownerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldRoyaltyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newRoyaltyPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"calcRoyaltyShares\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenPrice\",\"type\":\"uint256\"}],\"name\":\"deposit2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depositedBaseTokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"deposit3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolOwner\",\"type\":\"address\"}],\"name\":\"getPoolIdsOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"poolIdsOwnedByPoolOwner\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"}],\"name\":\"getPoolNFTInfosBy\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"number\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"numberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"priceMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Position\",\"name\":\"long\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"number\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"numberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"priceMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Position\",\"name\":\"hedge\",\"type\":\"tuple\"}],\"internalType\":\"struct IPoolsNFTLens.Positions\",\"name\":\"positions\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"longNumberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"hedgeNumberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"extraCoef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceVolatilityPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnPercentLongSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnPercentHedgeSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnPercentHedgeRebuy\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Config\",\"name\":\"config\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"longSellFeeCoef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellFeeCoef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeRebuyFeeCoef\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.FeeConfig\",\"name\":\"feeConfig\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"oracleQuoteTokenPerBaseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracleQuoteTokenPerFeeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"feeTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"quoteTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"oracleQuoteTokenPerBaseTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"oracleQuoteTokenPerFeeTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeCapital\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"quoteTokenYieldProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenYieldProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenTradeProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenTradeProfit\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Profits\",\"name\":\"profits\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"quoteTokenYieldProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenYieldProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenTradeProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenTradeProfit\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Profits\",\"name\":\"totalProfits\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ROINumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ROIDeniminator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ROIPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct IPoolsNFTLens.ROI\",\"name\":\"roi\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"longBuyPriceMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longSellQuoteTokenAmountThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longSellSwapPriceThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellInitPriceThresholdHigh\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellInitPriceThresholdLow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellQuoteTokenAmountThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellTargetPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellSwapPriceThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeRebuyBaseTokenAmountThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeRebuySwapPriceThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IPoolsNFTLens.Thresholds\",\"name\":\"thresholds\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"compensationShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolOwnerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ownerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldRoyaltyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newRoyaltyPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPoolsNFTLens.RoyaltyParams\",\"name\":\"royaltyParams\",\"type\":\"tuple\"}],\"internalType\":\"struct IPoolsNFTLens.PoolNFTInfo[]\",\"name\":\"poolNFTInfos\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"}],\"name\":\"getPositionsBy\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"number\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"numberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"priceMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Position\",\"name\":\"long\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"number\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"numberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"priceMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Position\",\"name\":\"hedge\",\"type\":\"tuple\"}],\"internalType\":\"struct IPoolsNFTLens.Positions[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grETH\",\"outputs\":[{\"internalType\":\"contract IGRETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grethGrinderShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grethPoolOwnerShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grethReserveShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grethRoyaltyReceiverShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"grind\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"op\",\"type\":\"uint8\"}],\"name\":\"grindOp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"op\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"grinder\",\"type\":\"address\"}],\"name\":\"grindOpTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isGrinded\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"grinder\",\"type\":\"address\"}],\"name\":\"grindTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isGrinded\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grinderAI\",\"outputs\":[{\"internalType\":\"contract IGrinderAI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolsNFTLens\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_grETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_grinderAI\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"isAgentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"name\":\"isDepositorOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"}],\"name\":\"isStrategyStopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"minDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolOwnerShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolsNFTLens\",\"outputs\":[{\"internalType\":\"contract IPoolsNFTLens\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId1\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"rebalance0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"rebalance1\",\"type\":\"uint8\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyOwnerShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"royaltyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPriceCompensationShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPriceInitNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPriceOwnerShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPricePoolOwnerShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPriceReserveShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"royaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyReceiverShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyReserveShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_agentApproval\",\"type\":\"bool\"}],\"name\":\"setAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_depositorApproval\",\"type\":\"bool\"}],\"name\":\"setDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_grethGrinderShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_grethReserveShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_grethPoolOwnerShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_grethRoyaltyReceiverShareNumerator\",\"type\":\"uint16\"}],\"name\":\"setGRETHShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxDeposit\",\"type\":\"uint256\"}],\"name\":\"setMaxDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minDeposit\",\"type\":\"uint256\"}],\"name\":\"setMinDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolsNFTLens\",\"type\":\"address\"}],\"name\":\"setPoolsNFTLens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_royaltyPriceInitNumerator\",\"type\":\"uint16\"}],\"name\":\"setRoyaltyPriceInitNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_royaltyPriceCompensationShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyPriceReserveShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyPricePoolOwnerShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyPriceOwnerShareNumerator\",\"type\":\"uint16\"}],\"name\":\"setRoyaltyPriceShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_poolOwnerRoyaltyShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyReceiverShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyReserveShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyOwnerShareNumerator\",\"type\":\"uint16\"}],\"name\":\"setRoyaltyShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategyFactory\",\"type\":\"address\"}],\"name\":\"setStrategyFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"_isStrategyStopped\",\"type\":\"bool\"}],\"name\":\"setStrategyStopped\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerOf\",\"type\":\"address\"}],\"name\":\"spentGrinds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"}],\"name\":\"strategyFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Triple Panic Labs. CTO Vakhtanh Chikhladze (the.vaho1337@gmail.com)\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"base URI holds on poolsNFTLens\"},\"buyRoyalty(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"},\"returns\":{\"_0\":\"royaltyPricePaid paid for royalty\"}},\"buyRoyaltyTo(uint256,address)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"},\"returns\":{\"royaltyPricePaid\":\"paid for royalty\"}},\"calcGRETHShares(uint256,uint256,address)\":{\"params\":{\"nativeFeeSpent\":\"amount of grETH\",\"poolId\":\"pool id of pool in array `pools`\"}},\"calcRoyaltyPriceShares(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"},\"returns\":{\"compensationShare\":\"feeToken amount to be received to old owner as compensation\",\"newRoyaltyPrice\":\"feeToken amount of new royalty price\",\"oldRoyaltyPrice\":\"feeToken amount of old royalty price\",\"ownerShare\":\"feeToken amount to be received to last grinder\",\"poolOwnerShare\":\"feeToken amount to be received by pool owner\",\"reserveShare\":\"feeToken amount to be received by primary royalty receiver\"}},\"calcRoyaltyShares(uint256,uint256)\":{\"details\":\"returns array of receivers and amounts\",\"params\":{\"poolId\":\"pool id of pool in array `pools`\",\"profit\":\"amount of token to be distributed\"}},\"deposit(uint256,uint256)\":{\"details\":\"callable only by owner of poolId\",\"params\":{\"poolId\":\"id of pool in array `pools`\",\"quoteTokenAmount\":\"amount of `quoteToken`\"},\"returns\":{\"_0\":\"depositedAmount amount of deposited `quoteToken`\"}},\"deposit2(uint256,uint256,uint256)\":{\"details\":\"callable only by owner of poolId\",\"params\":{\"baseTokenAmount\":\"amount of `baseToken`\",\"baseTokenPrice\":\"price of baseToken\",\"poolId\":\"id of pool in array `pools`\"},\"returns\":{\"depositedBaseTokenAmount\":\"amount of deposited `quoteToken`\"}},\"deposit3(uint256,uint256)\":{\"details\":\"aggregate quoteTokenAmount to pool\",\"params\":{\"poolId\":\"pool id of pool to dip\",\"quoteTokenAmount\":\"quote token amount\"}},\"execute(address,uint256,bytes)\":{\"details\":\"callable only by owner\",\"params\":{\"data\":\"data to execute on target contract\",\"target\":\"address of target contract\",\"value\":\"amount of ETH\"}},\"exit(uint256)\":{\"details\":\"callable only by owner of poolId\",\"params\":{\"poolId\":\"pool id of pool in array `pools`\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getPoolIdsOf(address)\":{\"params\":{\"poolOwner\":\"address of pool owner\"},\"returns\":{\"poolIdsOwnedByPoolOwner\":\"array of owner pool ids\"}},\"getPoolNFTInfosBy(uint256[])\":{\"params\":{\"_poolIds\":\"array of poolIds\"}},\"getPositionsBy(uint256[])\":{\"params\":{\"_poolIds\":\"array of poolIds\"}},\"getRoyaltyReceiver(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"},\"returns\":{\"receiver\":\"address of royalty receiver\"}},\"grind(uint256)\":{\"details\":\"grETH == fee spend on iterate\",\"params\":{\"poolId\":\"pool id of pool in array `pools`\"}},\"grindOp(uint256,uint8)\":{\"params\":{\"op\":\"operation on strategy pool\",\"poolId\":\"pool id of pool in array `pools`\"}},\"grindOpTo(uint256,uint8,address)\":{\"params\":{\"grinder\":\"address of grinder, that will receive grind reward\",\"op\":\"operation on strategy pool\",\"poolId\":\"pool id of pool in array `pools`\"}},\"grindTo(uint256,address)\":{\"details\":\"grETH == fee spend on iterate\",\"params\":{\"grinder\":\"address of grinder, that will receive grind reward\",\"poolId\":\"pool id of pool in array `pools`\"}},\"init(address,address,address)\":{\"details\":\"callable only by owner\"},\"isAgentOf(address,address)\":{\"details\":\"ownerOf is always self agent`_ownerOf` is agent of `_ownerOf`. Approved `_agent` of `_ownerOf` is agent\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isDepositorOf(uint256,address)\":{\"params\":{\"_depositor\":\"address of account that makes deposit\",\"poolId\":\"pool id of pool in array `pools`\"}},\"mint(uint16,address,address,uint256)\":{\"details\":\"mints to `msg.sender`\",\"params\":{\"baseToken\":\"address of baseToken\",\"quoteToken\":\"address of quoteToken\",\"quoteTokenAmount\":\"amount of quoteToken to be deposited after mint\",\"strategyId\":\"id of strategy implementation\"}},\"mintTo(address,uint16,address,address,uint256)\":{\"details\":\"mints to `to`\",\"params\":{\"baseToken\":\"address of baseToken\",\"quoteToken\":\"address of quoteToken\",\"quoteTokenAmount\":\"amount of quoteToken to be deposited after mint\",\"strategyId\":\"id of strategy implementation\"}},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"rebalance(uint256,uint256,uint8,uint8)\":{\"details\":\"only owner or AI-agent of pools can rebalance with equal strategy id\",\"params\":{\"poolId0\":\"pool id of pool to rebalance\",\"poolId1\":\"pool id of pool to rebalance\",\"rebalance0\":\"left fraction of rebalanced amount\",\"rebalance1\":\"right fraction of rebalanced amount\"}},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"salePrice\":\"amount of asset\",\"tokenId\":\"pool id of pool in array `pools`\"},\"returns\":{\"receiver\":\"address of receiver\",\"royaltyAmount\":\"amount of royalty\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setAgent(address,bool)\":{\"details\":\"by default grinderAI is agent. If user wants to directly disaprove grinderAI, it call setAgent with _agentApproval==false      if agent is grinderAI, than under the hood _agentApproval it will inversed.       The function `isAgent` will handle inversed approval properly\",\"params\":{\"_agent\":\"address of agent\",\"_agentApproval\":\"true - agent approved, false - agent not approved\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setDepositor(uint256,address,bool)\":{\"params\":{\"_depositorApproval\":\"true - depositor approved, false depositor not approved\",\"depositor\":\"address of depositor\",\"poolId\":\"id of pool in array `pools`\"}},\"setGRETHShares(uint16,uint16,uint16,uint16)\":{\"details\":\"callable only by owner\"},\"setMaxDeposit(address,uint256)\":{\"params\":{\"_maxDeposit\":\"maximum amount of deposit\",\"token\":\"address of token\"}},\"setMinDeposit(address,uint256)\":{\"params\":{\"_minDeposit\":\"minimum amount of deposit\",\"token\":\"address of token\"}},\"setPoolsNFTLens(address)\":{\"params\":{\"_poolsNFTLens\":\"address of poolsNFTLens\"}},\"setRoyaltyPriceInitNumerator(uint16)\":{\"params\":{\"_royaltyPriceInitNumerator\":\"numerator of royalty price init\"}},\"setRoyaltyPriceShares(uint16,uint16,uint16,uint16)\":{\"details\":\"callable only by owner\"},\"setRoyaltyShares(uint16,uint16,uint16,uint16)\":{\"details\":\"callable only by owner\"},\"setStrategyFactory(address)\":{\"details\":\"callable only by strategiest\"},\"setStrategyStopped(uint16,bool)\":{\"params\":{\"_isStrategyStopped\":\"is strategy stopped. true - stopped. false - not stopped\",\"strategyId\":\"id of strategy\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"},\"returns\":{\"uri\":\"unified reference indentificator for `tokenId`\"}},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transfer(address,uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\",\"to\":\"address of pool receiver\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"for future DAO\"},\"withdraw(uint256,address,uint256)\":{\"details\":\"callcable only by owner of poolId.withdrawable when distrubution is 100% quoteToken + 0% baseToken\",\"params\":{\"poolId\":\"pool id of pool in array `pools`\",\"quoteTokenAmount\":\"amount of `quoteToken`\",\"to\":\"address of receiver of withdrawed funds\"},\"returns\":{\"withdrawn\":\"amount of withdrawn quoteToken\"}},\"withdraw2(uint256,address,uint256)\":{\"details\":\"callcable only by owner of poolId.withdrawable when distrubution is 100% quoteToken + 0% baseToken\",\"params\":{\"baseTokenAmount\":\"amount of `quoteToken`\",\"poolId\":\"pool id of pool in array `pools`\",\"to\":\"address of receiver of withdrawed funds\"},\"returns\":{\"withdrawn\":\"amount of withdrawn quoteToken\"}}},\"stateVariables\":{\"DENOMINATOR\":{\"details\":\"this value of denominator is 100%\"},\"_agentApprovals\":{\"details\":\"owner of address => agent address => is agent of `_ownerOf`true - is agent. False - is not agentif _agent is grinderAI, than true - is not agent, false - is agent\"},\"_depositorApprovals\":{\"details\":\"pool id => owner of pool => depositor => is approved. true - approved, false - not approvedtrue - is eligible depositor. false - is not eligible depositor\"},\"grETH\":{\"details\":\"grETH token address\"},\"grethGrinderShareNumerator\":{\"details\":\"numerator of grinder share grETHGrinderShareNumerator == 80_00 == 80%\"},\"grethPoolOwnerShareNumerator\":{\"details\":\"numerator of pool owner shareexample: grETHPoolOwnerShareNumerator == 2_00 == 2%\"},\"grethReserveShareNumerator\":{\"details\":\"numerator of grETH reserve sharegrETHReserveShareNumerator == 15_00 == 15%\"},\"grethRoyaltyReceiverShareNumerator\":{\"details\":\"numerator of royalty receiver shareexample: grETHRoyaltyReceiverShareNumerator == 3_00 == 3%\"},\"grinderAI\":{\"details\":\"address of grinderAI smart contract\"},\"isStrategyStopped\":{\"details\":\"strategyId => is strategy stoped. true - stopped. false - not stoppedby default strategy is not stopped\"},\"maxDeposit\":{\"details\":\"token address => maximum amount of depositif maxDeposit == 0, that no limut for maximum deposit\"},\"minDeposit\":{\"details\":\"token address => minimum amount to depositif minDeposit == 0, that no limit for minimum deposit\"},\"minter\":{\"details\":\"poolId => address of creator of NFT\"},\"owner\":{\"details\":\"address of grindurus protocol owner. For DAO\"},\"pendingOwner\":{\"details\":\"address of pending owner\"},\"poolIds\":{\"details\":\"pool strategy address => poolId\"},\"poolOwnerShareNumerator\":{\"details\":\"poolOwnerShareNumerator = DENOMINATOR - royaltyNumeratorexample: poolOwnerShareNumerator == 80_00 == 80%\"},\"pools\":{\"details\":\"poolId => pool strategy address\"},\"royaltyNumerator\":{\"details\":\"royaltyNumerator = DENIMINATOR - poolOwnerShareNumeratorexample: royaltyNumerator == 20_00 == 20%\"},\"royaltyOwnerShareNumerator\":{\"details\":\"example: royaltyOwnerShareNumerator == 5_00 == 5%\"},\"royaltyPrice\":{\"details\":\"poolId => royalty price[royalty price] = quote token of pool id\"},\"royaltyPriceCompensationShareNumerator\":{\"details\":\"numerator of royalty price compensation to previous owner share\"},\"royaltyPriceInitNumerator\":{\"details\":\"numerator of init royalty price\"},\"royaltyPriceOwnerShareNumerator\":{\"details\":\"numerator of royalty price owner share\"},\"royaltyPricePoolOwnerShareNumerator\":{\"details\":\"numerator of royalty price pool owner share\"},\"royaltyPriceReserveShareNumerator\":{\"details\":\"numerator of royalty price primary receiver share\"},\"royaltyReceiver\":{\"details\":\"poolId => royalty receiver\"},\"royaltyReceiverShareNumerator\":{\"details\":\"example: royaltyReceiverShareNumerator == 10_00 == 10%\"},\"royaltyReserveShareNumerator\":{\"details\":\"example: poolOwnerShareNumerator == 5_00 == 5%\"},\"spentGrinds\":{\"details\":\"address of ownerOf poolId => amount of grinds spent\"},\"strategyFactory\":{\"details\":\"strategyId => address of grindurus pool strategy implementation\"}},\"title\":\"GrindURUS Pools NFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DENOMINATOR()\":{\"notice\":\"denominator. Used for calculating royalties\"},\"baseURI()\":{\"notice\":\"return base URI\"},\"buyRoyalty(uint256)\":{\"notice\":\"buy royalty for pool with `poolId`\"},\"buyRoyaltyTo(uint256,address)\":{\"notice\":\"buy royalty for pool with `poolId`\"},\"calcGRETHShares(uint256,uint256,address)\":{\"notice\":\"calculates shares of grETH for actors\"},\"calcRoyaltyPriceShares(uint256)\":{\"notice\":\"calc royalty prices\"},\"calcRoyaltyShares(uint256,uint256)\":{\"notice\":\"calculates royalty shares\"},\"deposit(uint256,uint256)\":{\"notice\":\"deposit `quoteToken` to pool with `poolId`\"},\"deposit2(uint256,uint256,uint256)\":{\"notice\":\"deposit `baseToken` to pool with `poolId`\"},\"deposit3(uint256,uint256)\":{\"notice\":\"dip rebalance mechanism via quoteToken\"},\"execute(address,uint256,bytes)\":{\"notice\":\"execute any transaction on target smart contract\"},\"exit(uint256)\":{\"notice\":\"exit from strategy and transfer ownership to royalty receiver\"},\"getPoolIdsOf(address)\":{\"notice\":\"gets pool ids owned by `poolOwner`\"},\"getPoolNFTInfosBy(uint256[])\":{\"notice\":\"get pool nft info by pool ids\"},\"getPositionsBy(uint256[])\":{\"notice\":\"get positions by pool ids\"},\"getRoyaltyReceiver(uint256)\":{\"notice\":\"return royalty receiver\"},\"grETH()\":{\"notice\":\"reserve for accumulation of percent of strategy profits\"},\"grind(uint256)\":{\"notice\":\"grind the pool with `poolId`\"},\"grindOp(uint256,uint8)\":{\"notice\":\"grind the exact operation on the pool with `poolId`\"},\"grindOpTo(uint256,uint8,address)\":{\"notice\":\"grind the exact operation on the pool with `poolId`\"},\"grindTo(uint256,address)\":{\"notice\":\"grind the pool with `poolId` and grinder is `to`\"},\"init(address,address,address)\":{\"notice\":\"sets grETH token\"},\"isAgentOf(address,address)\":{\"notice\":\"return true, if `_agent` is agent of `_ownerOf`. Else false\"},\"isDepositorOf(uint256,address)\":{\"notice\":\"return true if `_depositor` is eligible to deposit to pool\"},\"mint(uint16,address,address,uint256)\":{\"notice\":\"mints NFT with deployment of strategy\"},\"mintTo(address,uint16,address,address,uint256)\":{\"notice\":\"mints NFT with deployment of strategy\"},\"minter(uint256)\":{\"notice\":\"store minter of pool for airdrop points\"},\"name()\":{\"notice\":\"return the name of PoolsNFT\"},\"poolOwnerShareNumerator()\":{\"notice\":\"the numerator of pool owner share\"},\"poolsNFTLens()\":{\"notice\":\"address of poolsNFTLens\"},\"rebalance(uint256,uint256,uint8,uint8)\":{\"notice\":\"rebalance the pools with poolIds `poolId0` and `poolId1`\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"implementation of royalty standart ERC2981\"},\"royaltyNumerator()\":{\"notice\":\"the numerator of royalty\"},\"royaltyOwnerShareNumerator()\":{\"notice\":\"royalty share of owner\"},\"royaltyReceiverShareNumerator()\":{\"notice\":\"royalty share of royalty receiver. You can buy it\"},\"royaltyReserveShareNumerator()\":{\"notice\":\"royalty share of reserve. Reserve on grETH\"},\"setAgent(address,bool)\":{\"notice\":\"approve agent to msg.sender\"},\"setDepositor(uint256,address,bool)\":{\"notice\":\"approve depositor of pool\"},\"setGRETHShares(uint16,uint16,uint16,uint16)\":{\"notice\":\"sets greth shares\"},\"setMaxDeposit(address,uint256)\":{\"notice\":\"sets maximum deposit\"},\"setMinDeposit(address,uint256)\":{\"notice\":\"sets minimum deposit\"},\"setPoolsNFTLens(address)\":{\"notice\":\"sets pools NFT Image\"},\"setRoyaltyPriceInitNumerator(uint16)\":{\"notice\":\"set royalty price init numerator\"},\"setRoyaltyPriceShares(uint16,uint16,uint16,uint16)\":{\"notice\":\"sets royalty price share to actors\"},\"setRoyaltyShares(uint16,uint16,uint16,uint16)\":{\"notice\":\"sets primary receiver royalty share\"},\"setStrategyFactory(address)\":{\"notice\":\"set factrory strategy\"},\"setStrategyStopped(uint16,bool)\":{\"notice\":\"set stop on strategy with `strategyId`\"},\"spentGrinds(address)\":{\"notice\":\"accounting how much `grinderAI` called grind behalf to _ownerOf\"},\"symbol()\":{\"notice\":\"return the symbol of PoolsNFT\"},\"tokenURI(uint256)\":{\"notice\":\"returns tokenURI of `tokenId`\"},\"totalPools()\":{\"notice\":\"total amount of pools\"},\"transfer(address,uint256)\":{\"notice\":\"transfert poolId from `msg.sender` to `to`\"},\"transferOwnership(address)\":{\"notice\":\"First step - transfering ownership to `newOwner`         Second step - accept ownership\"},\"withdraw(uint256,address,uint256)\":{\"notice\":\"withdraw `quoteToken` from poolId to `to`\"},\"withdraw2(uint256,address,uint256)\":{\"notice\":\"withdraw `quoteToken` from poolId to `to`\"}},\"notice\":\"NFT that represets ownership of every grindurus strategy pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PoolsNFT.sol\":\"PoolsNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-messagelib-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib/\",\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol/\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":devtools/=lib/devtools/packages/toolbox-foundry/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":layerzero-v2/=lib/layerzero-v2/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/\"]},\"sources\":{\"lib/devtools/packages/oapp-evm/contracts/oapp/OAppCore.sol\":{\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://606515dd9193551bd2c94ac8c304f3776fafcc70e544ebf441f334658b2fd5f0\",\"dweb:/ipfs/QmZ88ey7DdZqV5taAoebabvszX5kdPMSrQCAmTteVdDtcH\"]},\"lib/devtools/packages/oapp-evm/contracts/oapp/OAppSender.sol\":{\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d42b471418efadcc3577ef3fa9f8f504e8bed7db90c3b0c862038d8b29529eb2\",\"dweb:/ipfs/QmZETDQiJN4U92fmLKo8T9ZbdDf7BNBUUvo9H7M7GqAyFU\"]},\"lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a1deb2a6a3eb1fb83936c9578469142bff470295f403d7d07d955a76be3adbd\",\"dweb:/ipfs/QmS9bjSfBaE4YhQ1PCQ1TknbEPbNfRXzBK9E7SaPGyiZEv\"]},\"lib/devtools/packages/oft-evm/contracts/interfaces/IOFT.sol\":{\"keccak256\":\"0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfbd447f2e8a730bd46a14c3c3e6a0b2bf7446145579603a9793ba5ac1dd38b4\",\"dweb:/ipfs/QmZ4nx4iGrFmBHvYFgki5TXFdCHz4Co38hgdgwpRaM7NLs\"]},\"lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bacc29fd3866af71e59cb0bdc1cf82c882a4a7f4e2652fd413c9f12649762083\",\"dweb:/ipfs/QmZh2toLnrQDWaNYhS5K4NoW7Vxd2GdZx9KA77vKEDLAqs\"]},\"lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessageLibManager.sol\":{\"keccak256\":\"0xd710f9efe703982e8eabe15d19d6114af753ef42f2796551da782a0fb6633e4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5c9c874871469c871004d49a1cb5304e63ea3faaf366bfed9d718abbb9cc20a\",\"dweb:/ipfs/QmarXxE4dezAa5gBe82KCrcvWcMwa3BYqkfXbDQ3rRjfEB\"]},\"lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingChannel.sol\":{\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e1b245d58221d16d8b5e0f01ef3e289a24a7df1ace3b94239e4d5b954ad5927\",\"dweb:/ipfs/Qmappsgp7PCY9rSSNE9Cdn4BTRX591WfCSEgq2HxhA3z6S\"]},\"lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingComposer.sol\":{\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b18b23a1643fc6636c4ad9d9023e2e6ca2d3c2a4a046482d4655bff09950598d\",\"dweb:/ipfs/Qma6G5SqiovwrMPfgqTrRngK1HWW373Wkf9c6YP2NhXpPk\"]},\"lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingContext.sol\":{\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5173fc9143bea314b159ca5a9adb5626659ef763bc598e27de5fa46efe3291a6\",\"dweb:/ipfs/QmSLFeMFPmVeGxT4sxRPW28ictjAS22M8rLeYRu9TXkA6D\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5313.sol\":{\"keccak256\":\"0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559\",\"dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4251fed1ac036ad28996501522371736318527d7bf2bf7d66fbd2769d6c4771b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2df261bd4de240f54c5829faeaf0ffc919a01f1497cf7ffd8a9a544bdec8fca\",\"dweb:/ipfs/Qmb9ndUuv9RZPKJXZGzjVuhmNuoizxuGRn4QMBmdmLcxS3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x5191f783af281c75b7de0f1e3e36cdc6ac5cb2358d929584c4953fd02fa2b5eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3ca2689d95ba45e297e55c8f71112e3ccec701d0087cb5e1c6ecb1b9ce86f00\",\"dweb:/ipfs/QmNQ5xKxJpF9k7AahnmJYvg5XeGSYtRig2Lp2WHmWXyBze\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389\",\"dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x9e82c00fb176503860139c6bbf593b1a954ee7ff97ab2969656571382b9b58a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34b4eb157b44d4441315db65561ba7cf0fe909dc598c2cfd7080d203077d5b57\",\"dweb:/ipfs/QmcNdvK3kDUAUr48urHxoeHd1TqVDya4YfZTM66i4goEJn\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c33f654cefbbe80a9b436b5792cfe8bda2e87f139f110073c99762558db252f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc7ebd80046a52f28978cf46a24ff3e4c8568264ab6bb138038951c75d576167\",\"dweb:/ipfs/QmQQjXVr4CbDR3DXd8GHEqn3JSJYTnbBHMJp9tvc29yXrc\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/PoolsNFT.sol\":{\"keccak256\":\"0x577eb68c912881ffd032c751b5f431d56a645e2f5b929621d8538b209b1afcf2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://06d5f28796de9efd65337ab5c89cd6dbd9a5674391c98a359849ff1a7c1191b7\",\"dweb:/ipfs/Qmez6GQXw4nYXDiLHJGeZjW27kDJb3rqrWWGTpV5PXasf3\"]},\"src/interfaces/IGRAI.sol\":{\"keccak256\":\"0xc5297b60c2854106808e9eee1f59ffc4684042e6e1277d94ef4dcf9986b9c66b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ecb833849586adb2629836ba636de60700a901f5cdac17e7000390b6e2d2c392\",\"dweb:/ipfs/QmUE48m7pypuStYfbrGryHTeva6Rw3s7jfxQRTcV3q1jqT\"]},\"src/interfaces/IGRETH.sol\":{\"keccak256\":\"0xf4801cf6b48039d3e909f66a410a7f025c856a8aaa11c5ad8622586abf9407b8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c81e9e2a1b0e28ae7f24589e48964ce2bb6715560709fe19a82fcbe71e5730a9\",\"dweb:/ipfs/QmSyneFg3FmC5hgQMccWU89gCZ1cANqbPBWfng92CBSaow\"]},\"src/interfaces/IGrinderAI.sol\":{\"keccak256\":\"0xa2c73fc33dfe9e13b65fbf992fa4fe183613ce27f033b4d8abd8cda6610d76dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05b0a9149fa25ec748efeb7b9fdadafad9c85e896d552e7e114ba4cd7f0e88ba\",\"dweb:/ipfs/QmX3NbVBsA2TyXPJ1DHRF6VLynE7bUhkiLkpA4JDZ2FVoQ\"]},\"src/interfaces/IIntentsNFT.sol\":{\"keccak256\":\"0x40544b3cd7f657cec3a7a99343e010f049dbd84cdaf4c3ec6ac09bf59fa5ea5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e012c64bc7aee231555e514eda11289126a3137cbfe162a3c7b05773ba4a67fd\",\"dweb:/ipfs/QmZZV8PFdTQpyJ8rFZMPiT4fdc3jX1rGSqmSKVmEwbMaWt\"]},\"src/interfaces/IPoolsNFT.sol\":{\"keccak256\":\"0x53cd1b2a2ac503d0d3d070c25bafb5be24f0f8f35cdd36e77eabffdb0f6e2169\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4dea415671f7f653a49e9ef7aba156c3fff7b487f158fa65964b72c599f96d4e\",\"dweb:/ipfs/QmXRCS6hx93SgzLxbVRpvnufMNz1dVbX2qefEENfumCNKu\"]},\"src/interfaces/IPoolsNFTLens.sol\":{\"keccak256\":\"0x25c60122b59c163aca605f4eff6c06ba6bfc960f6d641c378d79de53ba46d84f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8bdbc5ae37d00a0a76221970a69d2aa42249d7f092974df2b847fde0800ecf49\",\"dweb:/ipfs/QmWRoajutXwGNuVsxwmLoPnYrWAbi9KN7cbcQT1vRbjytz\"]},\"src/interfaces/IStrategy.sol\":{\"keccak256\":\"0xf91da347b7d9dd1e21282f804f40a501dd006dbec04a86117d251cc5f9dd5495\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0ebf6a1531ae143ee0ab183bd335b3f2a78e6ae75dbc2bdc7577ade8be74bcc5\",\"dweb:/ipfs/Qmddh55z6mryorRYMyQ9KG6hPXc3FHkjX8q3Zm2w2QWDSe\"]},\"src/interfaces/IStrategyFactory.sol\":{\"keccak256\":\"0x4b4d36fa8df13a3601f0c4088fe72ff15e6f337b974f6c47e520c9a4d7a177f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e62d5b7a234da199b77c1f9957b777fd53cc5ef6522982addff34abdd60aad41\",\"dweb:/ipfs/QmcbF7Ekf2L8qqvLMAqbzanbYZwnCDHj3XDY4h2rFcqRSQ\"]},\"src/interfaces/IToken.sol\":{\"keccak256\":\"0x7afeb2f9dd0a6f2370a0d2bbc526df1d1ff99568d5f872251bb9ff3a8fae1957\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://66a6f26742b300ca56f1a86165dbd0ef390e4fc3f0c7d69c0257bb325c01d683\",\"dweb:/ipfs/QmYUeNDGkZxQYAi4viULs8X2ykDoeVboLMcsfME6zyLubz\"]},\"src/interfaces/IURUS.sol\":{\"keccak256\":\"0xd466644e2e7116dbab342bedfe490f77673d8d63bf7e8fce4a2dd641e55d8275\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f6f8a3ad52f25b6c989fb29a4e9058e88c75b795bd9472f323b798c2a71f8eff\",\"dweb:/ipfs/QmQ5uB463mN4oHr18d7gEzEiZPq9sckEATUpTkmemRKSBA\"]},\"src/interfaces/chainlink/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6a01e238a21561c68677ef04a252797d37a0422cdbb19d1891c9b995d66ff52a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://456ffa1eded32109417bfeaa6809c212b3810b292ccdbb96d1b101929f06d9fd\",\"dweb:/ipfs/QmezicUJksLkE6frHAWEkc895rZqrNr9ioyfr4knrVzT3P\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.28+commit.7893614a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "DifferentOwnersOfPools" },
        { "inputs": [], "type": "error", "name": "DifferentTokens" },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721EnumerableForbiddenBatchMint"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "approver", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "receiver", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "index", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721OutOfBoundsIndex"
        },
        { "inputs": [], "type": "error", "name": "ExceededMaxDeposit" },
        { "inputs": [], "type": "error", "name": "InsufficientMinDeposit" },
        { "inputs": [], "type": "error", "name": "InvalidOp" },
        { "inputs": [], "type": "error", "name": "InvalidRoyaltyPriceInit" },
        { "inputs": [], "type": "error", "name": "InvalidShares" },
        { "inputs": [], "type": "error", "name": "NoCapital" },
        { "inputs": [], "type": "error", "name": "NotAgent" },
        { "inputs": [], "type": "error", "name": "NotDepositor" },
        { "inputs": [], "type": "error", "name": "NotGrinderAI" },
        { "inputs": [], "type": "error", "name": "NotOwner" },
        { "inputs": [], "type": "error", "name": "NotOwnerOf" },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        { "inputs": [], "type": "error", "name": "StrategyStopped" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "paidPrice",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BuyRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "baseTokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "baseTokenPrice",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit3",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "baseTokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Exit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "op",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "grinder",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isGrinded",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Grind",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId0",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "poolId1",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rebalancedPrice",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBaseTokenAmount0",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBaseTokenAmount1",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Rebalance",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "baseTokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw2",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DENOMINATOR",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buyRoyalty",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buyRoyaltyTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "royaltyPricePaid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "nativeFeeSpent",
              "type": "uint256"
            },
            { "internalType": "address", "name": "grinder", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcGRETHShares",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "actors",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "grethShares",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcRoyaltyPriceShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "compensationShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "poolOwnerShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ownerShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oldRoyaltyPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyPrice",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "uint256", "name": "profit", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcRoyaltyShares",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "receivers",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "baseTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseTokenPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit2",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "depositedBaseTokenAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit3"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute",
          "outputs": [
            { "internalType": "bool", "name": "success", "type": "bool" },
            { "internalType": "bytes", "name": "result", "type": "bytes" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseTokenAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "poolOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolIdsOf",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "poolIdsOwnedByPoolOwner",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_poolIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolNFTInfosBy",
          "outputs": [
            {
              "internalType": "struct IPoolsNFTLens.PoolNFTInfo[]",
              "name": "poolNFTInfos",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "poolId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "struct IPoolsNFTLens.Positions",
                  "name": "positions",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct IURUS.Position",
                      "name": "long",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "number",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint8",
                          "name": "numberMax",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "priceMin",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidity",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "qty",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "feeQty",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "feePrice",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct IURUS.Position",
                      "name": "hedge",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "number",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint8",
                          "name": "numberMax",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "priceMin",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidity",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "qty",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "feeQty",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "feePrice",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct IURUS.Config",
                  "name": "config",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "longNumberMax",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "hedgeNumberMax",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "extraCoef",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "priceVolatilityPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "returnPercentLongSell",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "returnPercentHedgeSell",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "returnPercentHedgeRebuy",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IURUS.FeeConfig",
                  "name": "feeConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "longSellFeeCoef",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeSellFeeCoef",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeRebuyFeeCoef",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "oracleQuoteTokenPerBaseToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "oracleQuoteTokenPerFeeToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feeToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quoteToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "baseToken",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "feeTokenSymbol",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "quoteTokenSymbol",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "baseTokenSymbol",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "oracleQuoteTokenPerBaseTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "oracleQuoteTokenPerFeeTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "quoteTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "quoteTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeCapital",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IURUS.Profits",
                  "name": "profits",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "quoteTokenYieldProfit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseTokenYieldProfit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "quoteTokenTradeProfit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseTokenTradeProfit",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IURUS.Profits",
                  "name": "totalProfits",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "quoteTokenYieldProfit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseTokenYieldProfit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "quoteTokenTradeProfit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseTokenTradeProfit",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IPoolsNFTLens.ROI",
                  "name": "roi",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "ROINumerator",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "ROIDeniminator",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "ROIPeriod",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IPoolsNFTLens.Thresholds",
                  "name": "thresholds",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "longBuyPriceMin",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "longSellQuoteTokenAmountThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "longSellSwapPriceThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeSellInitPriceThresholdHigh",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeSellInitPriceThresholdLow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeSellLiquidity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeSellQuoteTokenAmountThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeSellTargetPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeSellSwapPriceThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeRebuyBaseTokenAmountThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeRebuySwapPriceThreshold",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IPoolsNFTLens.RoyaltyParams",
                  "name": "royaltyParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "compensationShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "poolOwnerShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "ownerShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oldRoyaltyPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "newRoyaltyPrice",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_poolIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionsBy",
          "outputs": [
            {
              "internalType": "struct IPoolsNFTLens.Positions[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IURUS.Position",
                  "name": "long",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "number",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "numberMax",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "priceMin",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "qty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feeQty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feePrice",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IURUS.Position",
                  "name": "hedge",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "number",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "numberMax",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "priceMin",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "qty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feeQty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feePrice",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyReceiver",
          "outputs": [
            { "internalType": "address", "name": "receiver", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grETH",
          "outputs": [
            { "internalType": "contract IGRETH", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grethGrinderShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grethPoolOwnerShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grethReserveShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grethRoyaltyReceiverShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grind",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "uint8", "name": "op", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grindOp",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "uint8", "name": "op", "type": "uint8" },
            { "internalType": "address", "name": "grinder", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grindOpTo",
          "outputs": [
            { "internalType": "bool", "name": "isGrinded", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "address", "name": "grinder", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grindTo",
          "outputs": [
            { "internalType": "bool", "name": "isGrinded", "type": "bool" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grinderAI",
          "outputs": [
            {
              "internalType": "contract IGrinderAI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolsNFTLens",
              "type": "address"
            },
            { "internalType": "address", "name": "_grETH", "type": "address" },
            {
              "internalType": "address",
              "name": "_grinderAI",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_ownerOf",
              "type": "address"
            },
            { "internalType": "address", "name": "_agent", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAgentOf",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "address",
              "name": "_depositor",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDepositorOf",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint16", "name": "strategyId", "type": "uint16" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isStrategyStopped",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDeposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minDeposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "strategyId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            {
              "internalType": "uint16",
              "name": "strategyId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address payable", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            { "internalType": "address payable", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "pool", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolIds",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolOwnerShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pools",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolsNFTLens",
          "outputs": [
            {
              "internalType": "contract IPoolsNFTLens",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId0", "type": "uint256" },
            { "internalType": "uint256", "name": "poolId1", "type": "uint256" },
            { "internalType": "uint8", "name": "rebalance0", "type": "uint8" },
            { "internalType": "uint8", "name": "rebalance1", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rebalance"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyOwnerShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPrice",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPriceCompensationShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPriceInitNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPriceOwnerShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPricePoolOwnerShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPriceReserveShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyReceiver",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyReceiverShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyReserveShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_agent", "type": "address" },
            { "internalType": "bool", "name": "_agentApproval", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAgent"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_depositorApproval",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDepositor"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_grethGrinderShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_grethReserveShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_grethPoolOwnerShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_grethRoyaltyReceiverShareNumerator",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGRETHShares"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            {
              "internalType": "uint256",
              "name": "_maxDeposit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxDeposit"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            {
              "internalType": "uint256",
              "name": "_minDeposit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolsNFTLens",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolsNFTLens"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_royaltyPriceInitNumerator",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyPriceInitNumerator"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_royaltyPriceCompensationShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyPriceReserveShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyPricePoolOwnerShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyPriceOwnerShareNumerator",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyPriceShares"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_poolOwnerRoyaltyShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyReceiverShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyReserveShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyOwnerShareNumerator",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_strategyFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyFactory"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "strategyId",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "_isStrategyStopped",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyStopped"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_ownerOf", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "spentGrinds",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint16", "name": "strategyId", "type": "uint16" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyFactory",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "index", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenByIndex",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "index", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOfOwnerByIndex",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            { "internalType": "string", "name": "uri", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalPools",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "withdrawn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" },
            {
              "internalType": "uint256",
              "name": "baseTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw2",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "withdrawn",
              "type": "uint256"
            }
          ]
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": { "details": "See {IERC721-approve}." },
          "balanceOf(address)": { "details": "See {IERC721-balanceOf}." },
          "baseURI()": { "details": "base URI holds on poolsNFTLens" },
          "buyRoyalty(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" },
            "returns": { "_0": "royaltyPricePaid paid for royalty" }
          },
          "buyRoyaltyTo(uint256,address)": {
            "params": { "poolId": "pool id of pool in array `pools`" },
            "returns": { "royaltyPricePaid": "paid for royalty" }
          },
          "calcGRETHShares(uint256,uint256,address)": {
            "params": {
              "nativeFeeSpent": "amount of grETH",
              "poolId": "pool id of pool in array `pools`"
            }
          },
          "calcRoyaltyPriceShares(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" },
            "returns": {
              "compensationShare": "feeToken amount to be received to old owner as compensation",
              "newRoyaltyPrice": "feeToken amount of new royalty price",
              "oldRoyaltyPrice": "feeToken amount of old royalty price",
              "ownerShare": "feeToken amount to be received to last grinder",
              "poolOwnerShare": "feeToken amount to be received by pool owner",
              "reserveShare": "feeToken amount to be received by primary royalty receiver"
            }
          },
          "calcRoyaltyShares(uint256,uint256)": {
            "details": "returns array of receivers and amounts",
            "params": {
              "poolId": "pool id of pool in array `pools`",
              "profit": "amount of token to be distributed"
            }
          },
          "deposit(uint256,uint256)": {
            "details": "callable only by owner of poolId",
            "params": {
              "poolId": "id of pool in array `pools`",
              "quoteTokenAmount": "amount of `quoteToken`"
            },
            "returns": {
              "_0": "depositedAmount amount of deposited `quoteToken`"
            }
          },
          "deposit2(uint256,uint256,uint256)": {
            "details": "callable only by owner of poolId",
            "params": {
              "baseTokenAmount": "amount of `baseToken`",
              "baseTokenPrice": "price of baseToken",
              "poolId": "id of pool in array `pools`"
            },
            "returns": {
              "depositedBaseTokenAmount": "amount of deposited `quoteToken`"
            }
          },
          "deposit3(uint256,uint256)": {
            "details": "aggregate quoteTokenAmount to pool",
            "params": {
              "poolId": "pool id of pool to dip",
              "quoteTokenAmount": "quote token amount"
            }
          },
          "execute(address,uint256,bytes)": {
            "details": "callable only by owner",
            "params": {
              "data": "data to execute on target contract",
              "target": "address of target contract",
              "value": "amount of ETH"
            }
          },
          "exit(uint256)": {
            "details": "callable only by owner of poolId",
            "params": { "poolId": "pool id of pool in array `pools`" }
          },
          "getApproved(uint256)": { "details": "See {IERC721-getApproved}." },
          "getPoolIdsOf(address)": {
            "params": { "poolOwner": "address of pool owner" },
            "returns": { "poolIdsOwnedByPoolOwner": "array of owner pool ids" }
          },
          "getPoolNFTInfosBy(uint256[])": {
            "params": { "_poolIds": "array of poolIds" }
          },
          "getPositionsBy(uint256[])": {
            "params": { "_poolIds": "array of poolIds" }
          },
          "getRoyaltyReceiver(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" },
            "returns": { "receiver": "address of royalty receiver" }
          },
          "grind(uint256)": {
            "details": "grETH == fee spend on iterate",
            "params": { "poolId": "pool id of pool in array `pools`" }
          },
          "grindOp(uint256,uint8)": {
            "params": {
              "op": "operation on strategy pool",
              "poolId": "pool id of pool in array `pools`"
            }
          },
          "grindOpTo(uint256,uint8,address)": {
            "params": {
              "grinder": "address of grinder, that will receive grind reward",
              "op": "operation on strategy pool",
              "poolId": "pool id of pool in array `pools`"
            }
          },
          "grindTo(uint256,address)": {
            "details": "grETH == fee spend on iterate",
            "params": {
              "grinder": "address of grinder, that will receive grind reward",
              "poolId": "pool id of pool in array `pools`"
            }
          },
          "init(address,address,address)": {
            "details": "callable only by owner"
          },
          "isAgentOf(address,address)": {
            "details": "ownerOf is always self agent`_ownerOf` is agent of `_ownerOf`. Approved `_agent` of `_ownerOf` is agent"
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isDepositorOf(uint256,address)": {
            "params": {
              "_depositor": "address of account that makes deposit",
              "poolId": "pool id of pool in array `pools`"
            }
          },
          "mint(uint16,address,address,uint256)": {
            "details": "mints to `msg.sender`",
            "params": {
              "baseToken": "address of baseToken",
              "quoteToken": "address of quoteToken",
              "quoteTokenAmount": "amount of quoteToken to be deposited after mint",
              "strategyId": "id of strategy implementation"
            }
          },
          "mintTo(address,uint16,address,address,uint256)": {
            "details": "mints to `to`",
            "params": {
              "baseToken": "address of baseToken",
              "quoteToken": "address of quoteToken",
              "quoteTokenAmount": "amount of quoteToken to be deposited after mint",
              "strategyId": "id of strategy implementation"
            }
          },
          "ownerOf(uint256)": { "details": "See {IERC721-ownerOf}." },
          "rebalance(uint256,uint256,uint8,uint8)": {
            "details": "only owner or AI-agent of pools can rebalance with equal strategy id",
            "params": {
              "poolId0": "pool id of pool to rebalance",
              "poolId1": "pool id of pool to rebalance",
              "rebalance0": "left fraction of rebalanced amount",
              "rebalance1": "right fraction of rebalanced amount"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "params": {
              "salePrice": "amount of asset",
              "tokenId": "pool id of pool in array `pools`"
            },
            "returns": {
              "receiver": "address of receiver",
              "royaltyAmount": "amount of royalty"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setAgent(address,bool)": {
            "details": "by default grinderAI is agent. If user wants to directly disaprove grinderAI, it call setAgent with _agentApproval==false      if agent is grinderAI, than under the hood _agentApproval it will inversed.       The function `isAgent` will handle inversed approval properly",
            "params": {
              "_agent": "address of agent",
              "_agentApproval": "true - agent approved, false - agent not approved"
            }
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setDepositor(uint256,address,bool)": {
            "params": {
              "_depositorApproval": "true - depositor approved, false depositor not approved",
              "depositor": "address of depositor",
              "poolId": "id of pool in array `pools`"
            }
          },
          "setGRETHShares(uint16,uint16,uint16,uint16)": {
            "details": "callable only by owner"
          },
          "setMaxDeposit(address,uint256)": {
            "params": {
              "_maxDeposit": "maximum amount of deposit",
              "token": "address of token"
            }
          },
          "setMinDeposit(address,uint256)": {
            "params": {
              "_minDeposit": "minimum amount of deposit",
              "token": "address of token"
            }
          },
          "setPoolsNFTLens(address)": {
            "params": { "_poolsNFTLens": "address of poolsNFTLens" }
          },
          "setRoyaltyPriceInitNumerator(uint16)": {
            "params": {
              "_royaltyPriceInitNumerator": "numerator of royalty price init"
            }
          },
          "setRoyaltyPriceShares(uint16,uint16,uint16,uint16)": {
            "details": "callable only by owner"
          },
          "setRoyaltyShares(uint16,uint16,uint16,uint16)": {
            "details": "callable only by owner"
          },
          "setStrategyFactory(address)": {
            "details": "callable only by strategiest"
          },
          "setStrategyStopped(uint16,bool)": {
            "params": {
              "_isStrategyStopped": "is strategy stopped. true - stopped. false - not stopped",
              "strategyId": "id of strategy"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tokenByIndex(uint256)": {
            "details": "See {IERC721Enumerable-tokenByIndex}."
          },
          "tokenOfOwnerByIndex(address,uint256)": {
            "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
          },
          "tokenURI(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" },
            "returns": {
              "uri": "unified reference indentificator for `tokenId`"
            }
          },
          "totalSupply()": {
            "details": "See {IERC721Enumerable-totalSupply}."
          },
          "transfer(address,uint256)": {
            "params": {
              "poolId": "pool id of pool in array `pools`",
              "to": "address of pool receiver"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": { "details": "for future DAO" },
          "withdraw(uint256,address,uint256)": {
            "details": "callcable only by owner of poolId.withdrawable when distrubution is 100% quoteToken + 0% baseToken",
            "params": {
              "poolId": "pool id of pool in array `pools`",
              "quoteTokenAmount": "amount of `quoteToken`",
              "to": "address of receiver of withdrawed funds"
            },
            "returns": { "withdrawn": "amount of withdrawn quoteToken" }
          },
          "withdraw2(uint256,address,uint256)": {
            "details": "callcable only by owner of poolId.withdrawable when distrubution is 100% quoteToken + 0% baseToken",
            "params": {
              "baseTokenAmount": "amount of `quoteToken`",
              "poolId": "pool id of pool in array `pools`",
              "to": "address of receiver of withdrawed funds"
            },
            "returns": { "withdrawn": "amount of withdrawn quoteToken" }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DENOMINATOR()": {
            "notice": "denominator. Used for calculating royalties"
          },
          "baseURI()": { "notice": "return base URI" },
          "buyRoyalty(uint256)": {
            "notice": "buy royalty for pool with `poolId`"
          },
          "buyRoyaltyTo(uint256,address)": {
            "notice": "buy royalty for pool with `poolId`"
          },
          "calcGRETHShares(uint256,uint256,address)": {
            "notice": "calculates shares of grETH for actors"
          },
          "calcRoyaltyPriceShares(uint256)": {
            "notice": "calc royalty prices"
          },
          "calcRoyaltyShares(uint256,uint256)": {
            "notice": "calculates royalty shares"
          },
          "deposit(uint256,uint256)": {
            "notice": "deposit `quoteToken` to pool with `poolId`"
          },
          "deposit2(uint256,uint256,uint256)": {
            "notice": "deposit `baseToken` to pool with `poolId`"
          },
          "deposit3(uint256,uint256)": {
            "notice": "dip rebalance mechanism via quoteToken"
          },
          "execute(address,uint256,bytes)": {
            "notice": "execute any transaction on target smart contract"
          },
          "exit(uint256)": {
            "notice": "exit from strategy and transfer ownership to royalty receiver"
          },
          "getPoolIdsOf(address)": {
            "notice": "gets pool ids owned by `poolOwner`"
          },
          "getPoolNFTInfosBy(uint256[])": {
            "notice": "get pool nft info by pool ids"
          },
          "getPositionsBy(uint256[])": {
            "notice": "get positions by pool ids"
          },
          "getRoyaltyReceiver(uint256)": {
            "notice": "return royalty receiver"
          },
          "grETH()": {
            "notice": "reserve for accumulation of percent of strategy profits"
          },
          "grind(uint256)": { "notice": "grind the pool with `poolId`" },
          "grindOp(uint256,uint8)": {
            "notice": "grind the exact operation on the pool with `poolId`"
          },
          "grindOpTo(uint256,uint8,address)": {
            "notice": "grind the exact operation on the pool with `poolId`"
          },
          "grindTo(uint256,address)": {
            "notice": "grind the pool with `poolId` and grinder is `to`"
          },
          "init(address,address,address)": { "notice": "sets grETH token" },
          "isAgentOf(address,address)": {
            "notice": "return true, if `_agent` is agent of `_ownerOf`. Else false"
          },
          "isDepositorOf(uint256,address)": {
            "notice": "return true if `_depositor` is eligible to deposit to pool"
          },
          "mint(uint16,address,address,uint256)": {
            "notice": "mints NFT with deployment of strategy"
          },
          "mintTo(address,uint16,address,address,uint256)": {
            "notice": "mints NFT with deployment of strategy"
          },
          "minter(uint256)": {
            "notice": "store minter of pool for airdrop points"
          },
          "name()": { "notice": "return the name of PoolsNFT" },
          "poolOwnerShareNumerator()": {
            "notice": "the numerator of pool owner share"
          },
          "poolsNFTLens()": { "notice": "address of poolsNFTLens" },
          "rebalance(uint256,uint256,uint8,uint8)": {
            "notice": "rebalance the pools with poolIds `poolId0` and `poolId1`"
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "implementation of royalty standart ERC2981"
          },
          "royaltyNumerator()": { "notice": "the numerator of royalty" },
          "royaltyOwnerShareNumerator()": {
            "notice": "royalty share of owner"
          },
          "royaltyReceiverShareNumerator()": {
            "notice": "royalty share of royalty receiver. You can buy it"
          },
          "royaltyReserveShareNumerator()": {
            "notice": "royalty share of reserve. Reserve on grETH"
          },
          "setAgent(address,bool)": { "notice": "approve agent to msg.sender" },
          "setDepositor(uint256,address,bool)": {
            "notice": "approve depositor of pool"
          },
          "setGRETHShares(uint16,uint16,uint16,uint16)": {
            "notice": "sets greth shares"
          },
          "setMaxDeposit(address,uint256)": {
            "notice": "sets maximum deposit"
          },
          "setMinDeposit(address,uint256)": {
            "notice": "sets minimum deposit"
          },
          "setPoolsNFTLens(address)": { "notice": "sets pools NFT Image" },
          "setRoyaltyPriceInitNumerator(uint16)": {
            "notice": "set royalty price init numerator"
          },
          "setRoyaltyPriceShares(uint16,uint16,uint16,uint16)": {
            "notice": "sets royalty price share to actors"
          },
          "setRoyaltyShares(uint16,uint16,uint16,uint16)": {
            "notice": "sets primary receiver royalty share"
          },
          "setStrategyFactory(address)": { "notice": "set factrory strategy" },
          "setStrategyStopped(uint16,bool)": {
            "notice": "set stop on strategy with `strategyId`"
          },
          "spentGrinds(address)": {
            "notice": "accounting how much `grinderAI` called grind behalf to _ownerOf"
          },
          "symbol()": { "notice": "return the symbol of PoolsNFT" },
          "tokenURI(uint256)": { "notice": "returns tokenURI of `tokenId`" },
          "totalPools()": { "notice": "total amount of pools" },
          "transfer(address,uint256)": {
            "notice": "transfert poolId from `msg.sender` to `to`"
          },
          "transferOwnership(address)": {
            "notice": "First step - transfering ownership to `newOwner`         Second step - accept ownership"
          },
          "withdraw(uint256,address,uint256)": {
            "notice": "withdraw `quoteToken` from poolId to `to`"
          },
          "withdraw2(uint256,address,uint256)": {
            "notice": "withdraw `quoteToken` from poolId to `to`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@layerzerolabs/lz-evm-messagelib-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib/",
        "@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol/",
        "@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/",
        "@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "devtools/=lib/devtools/packages/toolbox-foundry/src/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "layerzero-v2/=lib/layerzero-v2/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solidity-bytes-utils/=lib/solidity-bytes-utils/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/PoolsNFT.sol": "PoolsNFT" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/devtools/packages/oapp-evm/contracts/oapp/OAppCore.sol": {
        "keccak256": "0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc",
        "urls": [
          "bzz-raw://606515dd9193551bd2c94ac8c304f3776fafcc70e544ebf441f334658b2fd5f0",
          "dweb:/ipfs/QmZ88ey7DdZqV5taAoebabvszX5kdPMSrQCAmTteVdDtcH"
        ],
        "license": "MIT"
      },
      "lib/devtools/packages/oapp-evm/contracts/oapp/OAppSender.sol": {
        "keccak256": "0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20",
        "urls": [
          "bzz-raw://d42b471418efadcc3577ef3fa9f8f504e8bed7db90c3b0c862038d8b29529eb2",
          "dweb:/ipfs/QmZETDQiJN4U92fmLKo8T9ZbdDf7BNBUUvo9H7M7GqAyFU"
        ],
        "license": "MIT"
      },
      "lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol": {
        "keccak256": "0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58",
        "urls": [
          "bzz-raw://4a1deb2a6a3eb1fb83936c9578469142bff470295f403d7d07d955a76be3adbd",
          "dweb:/ipfs/QmS9bjSfBaE4YhQ1PCQ1TknbEPbNfRXzBK9E7SaPGyiZEv"
        ],
        "license": "MIT"
      },
      "lib/devtools/packages/oft-evm/contracts/interfaces/IOFT.sol": {
        "keccak256": "0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8",
        "urls": [
          "bzz-raw://cfbd447f2e8a730bd46a14c3c3e6a0b2bf7446145579603a9793ba5ac1dd38b4",
          "dweb:/ipfs/QmZ4nx4iGrFmBHvYFgki5TXFdCHz4Co38hgdgwpRaM7NLs"
        ],
        "license": "MIT"
      },
      "lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/ILayerZeroEndpointV2.sol": {
        "keccak256": "0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3",
        "urls": [
          "bzz-raw://bacc29fd3866af71e59cb0bdc1cf82c882a4a7f4e2652fd413c9f12649762083",
          "dweb:/ipfs/QmZh2toLnrQDWaNYhS5K4NoW7Vxd2GdZx9KA77vKEDLAqs"
        ],
        "license": "MIT"
      },
      "lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessageLibManager.sol": {
        "keccak256": "0xd710f9efe703982e8eabe15d19d6114af753ef42f2796551da782a0fb6633e4b",
        "urls": [
          "bzz-raw://b5c9c874871469c871004d49a1cb5304e63ea3faaf366bfed9d718abbb9cc20a",
          "dweb:/ipfs/QmarXxE4dezAa5gBe82KCrcvWcMwa3BYqkfXbDQ3rRjfEB"
        ],
        "license": "MIT"
      },
      "lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingChannel.sol": {
        "keccak256": "0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972",
        "urls": [
          "bzz-raw://7e1b245d58221d16d8b5e0f01ef3e289a24a7df1ace3b94239e4d5b954ad5927",
          "dweb:/ipfs/Qmappsgp7PCY9rSSNE9Cdn4BTRX591WfCSEgq2HxhA3z6S"
        ],
        "license": "MIT"
      },
      "lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingComposer.sol": {
        "keccak256": "0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901",
        "urls": [
          "bzz-raw://b18b23a1643fc6636c4ad9d9023e2e6ca2d3c2a4a046482d4655bff09950598d",
          "dweb:/ipfs/Qma6G5SqiovwrMPfgqTrRngK1HWW373Wkf9c6YP2NhXpPk"
        ],
        "license": "MIT"
      },
      "lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingContext.sol": {
        "keccak256": "0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e",
        "urls": [
          "bzz-raw://5173fc9143bea314b159ca5a9adb5626659ef763bc598e27de5fa46efe3291a6",
          "dweb:/ipfs/QmSLFeMFPmVeGxT4sxRPW28ictjAS22M8rLeYRu9TXkA6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol": {
        "keccak256": "0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292",
        "urls": [
          "bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05",
          "dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5313.sol": {
        "keccak256": "0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621",
        "urls": [
          "bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559",
          "dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        "urls": [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6",
        "urls": [
          "bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3",
          "dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x4251fed1ac036ad28996501522371736318527d7bf2bf7d66fbd2769d6c4771b",
        "urls": [
          "bzz-raw://b2df261bd4de240f54c5829faeaf0ffc919a01f1497cf7ffd8a9a544bdec8fca",
          "dweb:/ipfs/Qmb9ndUuv9RZPKJXZGzjVuhmNuoizxuGRn4QMBmdmLcxS3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a",
        "urls": [
          "bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09",
          "dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
        "urls": [
          "bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
          "dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d",
        "urls": [
          "bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34",
          "dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x5191f783af281c75b7de0f1e3e36cdc6ac5cb2358d929584c4953fd02fa2b5eb",
        "urls": [
          "bzz-raw://d3ca2689d95ba45e297e55c8f71112e3ccec701d0087cb5e1c6ecb1b9ce86f00",
          "dweb:/ipfs/QmNQ5xKxJpF9k7AahnmJYvg5XeGSYtRig2Lp2WHmWXyBze"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de",
        "urls": [
          "bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff",
          "dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol": {
        "keccak256": "0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855",
        "urls": [
          "bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd",
          "dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2",
        "urls": [
          "bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389",
          "dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x9e82c00fb176503860139c6bbf593b1a954ee7ff97ab2969656571382b9b58a2",
        "urls": [
          "bzz-raw://34b4eb157b44d4441315db65561ba7cf0fe909dc598c2cfd7080d203077d5b57",
          "dweb:/ipfs/QmcNdvK3kDUAUr48urHxoeHd1TqVDya4YfZTM66i4goEJn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa",
        "urls": [
          "bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287",
          "dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x2c33f654cefbbe80a9b436b5792cfe8bda2e87f139f110073c99762558db252f",
        "urls": [
          "bzz-raw://dc7ebd80046a52f28978cf46a24ff3e4c8568264ab6bb138038951c75d576167",
          "dweb:/ipfs/QmQQjXVr4CbDR3DXd8GHEqn3JSJYTnbBHMJp9tvc29yXrc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "src/PoolsNFT.sol": {
        "keccak256": "0x577eb68c912881ffd032c751b5f431d56a645e2f5b929621d8538b209b1afcf2",
        "urls": [
          "bzz-raw://06d5f28796de9efd65337ab5c89cd6dbd9a5674391c98a359849ff1a7c1191b7",
          "dweb:/ipfs/Qmez6GQXw4nYXDiLHJGeZjW27kDJb3rqrWWGTpV5PXasf3"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IGRAI.sol": {
        "keccak256": "0xc5297b60c2854106808e9eee1f59ffc4684042e6e1277d94ef4dcf9986b9c66b",
        "urls": [
          "bzz-raw://ecb833849586adb2629836ba636de60700a901f5cdac17e7000390b6e2d2c392",
          "dweb:/ipfs/QmUE48m7pypuStYfbrGryHTeva6Rw3s7jfxQRTcV3q1jqT"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IGRETH.sol": {
        "keccak256": "0xf4801cf6b48039d3e909f66a410a7f025c856a8aaa11c5ad8622586abf9407b8",
        "urls": [
          "bzz-raw://c81e9e2a1b0e28ae7f24589e48964ce2bb6715560709fe19a82fcbe71e5730a9",
          "dweb:/ipfs/QmSyneFg3FmC5hgQMccWU89gCZ1cANqbPBWfng92CBSaow"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IGrinderAI.sol": {
        "keccak256": "0xa2c73fc33dfe9e13b65fbf992fa4fe183613ce27f033b4d8abd8cda6610d76dc",
        "urls": [
          "bzz-raw://05b0a9149fa25ec748efeb7b9fdadafad9c85e896d552e7e114ba4cd7f0e88ba",
          "dweb:/ipfs/QmX3NbVBsA2TyXPJ1DHRF6VLynE7bUhkiLkpA4JDZ2FVoQ"
        ],
        "license": "MIT"
      },
      "src/interfaces/IIntentsNFT.sol": {
        "keccak256": "0x40544b3cd7f657cec3a7a99343e010f049dbd84cdaf4c3ec6ac09bf59fa5ea5b",
        "urls": [
          "bzz-raw://e012c64bc7aee231555e514eda11289126a3137cbfe162a3c7b05773ba4a67fd",
          "dweb:/ipfs/QmZZV8PFdTQpyJ8rFZMPiT4fdc3jX1rGSqmSKVmEwbMaWt"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPoolsNFT.sol": {
        "keccak256": "0x53cd1b2a2ac503d0d3d070c25bafb5be24f0f8f35cdd36e77eabffdb0f6e2169",
        "urls": [
          "bzz-raw://4dea415671f7f653a49e9ef7aba156c3fff7b487f158fa65964b72c599f96d4e",
          "dweb:/ipfs/QmXRCS6hx93SgzLxbVRpvnufMNz1dVbX2qefEENfumCNKu"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IPoolsNFTLens.sol": {
        "keccak256": "0x25c60122b59c163aca605f4eff6c06ba6bfc960f6d641c378d79de53ba46d84f",
        "urls": [
          "bzz-raw://8bdbc5ae37d00a0a76221970a69d2aa42249d7f092974df2b847fde0800ecf49",
          "dweb:/ipfs/QmWRoajutXwGNuVsxwmLoPnYrWAbi9KN7cbcQT1vRbjytz"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IStrategy.sol": {
        "keccak256": "0xf91da347b7d9dd1e21282f804f40a501dd006dbec04a86117d251cc5f9dd5495",
        "urls": [
          "bzz-raw://0ebf6a1531ae143ee0ab183bd335b3f2a78e6ae75dbc2bdc7577ade8be74bcc5",
          "dweb:/ipfs/Qmddh55z6mryorRYMyQ9KG6hPXc3FHkjX8q3Zm2w2QWDSe"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IStrategyFactory.sol": {
        "keccak256": "0x4b4d36fa8df13a3601f0c4088fe72ff15e6f337b974f6c47e520c9a4d7a177f8",
        "urls": [
          "bzz-raw://e62d5b7a234da199b77c1f9957b777fd53cc5ef6522982addff34abdd60aad41",
          "dweb:/ipfs/QmcbF7Ekf2L8qqvLMAqbzanbYZwnCDHj3XDY4h2rFcqRSQ"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IToken.sol": {
        "keccak256": "0x7afeb2f9dd0a6f2370a0d2bbc526df1d1ff99568d5f872251bb9ff3a8fae1957",
        "urls": [
          "bzz-raw://66a6f26742b300ca56f1a86165dbd0ef390e4fc3f0c7d69c0257bb325c01d683",
          "dweb:/ipfs/QmYUeNDGkZxQYAi4viULs8X2ykDoeVboLMcsfME6zyLubz"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IURUS.sol": {
        "keccak256": "0xd466644e2e7116dbab342bedfe490f77673d8d63bf7e8fce4a2dd641e55d8275",
        "urls": [
          "bzz-raw://f6f8a3ad52f25b6c989fb29a4e9058e88c75b795bd9472f323b798c2a71f8eff",
          "dweb:/ipfs/QmQ5uB463mN4oHr18d7gEzEiZPq9sckEATUpTkmemRKSBA"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/chainlink/AggregatorV3Interface.sol": {
        "keccak256": "0x6a01e238a21561c68677ef04a252797d37a0422cdbb19d1891c9b995d66ff52a",
        "urls": [
          "bzz-raw://456ffa1eded32109417bfeaa6809c212b3810b292ccdbb96d1b101929f06d9fd",
          "dweb:/ipfs/QmezicUJksLkE6frHAWEkc895rZqrNr9ioyfr4knrVzT3P"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 97
}
